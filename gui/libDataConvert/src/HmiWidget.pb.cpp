// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HmiWidget.proto

#include "proto/HmiWidget.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace HmiWidget {
PROTOBUF_CONSTEXPR TNodeParam::TNodeParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uniform_)*/{}
  , /*decltype(_impl_.useimport_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.node_)*/nullptr
  , /*decltype(_impl_.transform_)*/nullptr
  , /*decltype(_impl_.renderlayerproperties_)*/nullptr
  , /*decltype(_impl_.nodeproperties_)*/nullptr
  , /*decltype(_impl_.cameranodeproperties_)*/nullptr
  , /*decltype(_impl_.textnodeproperties_)*/nullptr} {}
struct TNodeParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TNodeParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TNodeParamDefaultTypeInternal() {}
  union {
    TNodeParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TNodeParamDefaultTypeInternal _TNodeParam_default_instance_;
PROTOBUF_CONSTEXPR TUniform::TUniform(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/nullptr
  , /*decltype(_impl_.value_)*/nullptr} {}
struct TUniformDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TUniformDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TUniformDefaultTypeInternal() {}
  union {
    TUniform _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TUniformDefaultTypeInternal _TUniform_default_instance_;
PROTOBUF_CONSTEXPR TNodeTransform::TNodeTransform(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.scale_)*/nullptr
  , /*decltype(_impl_.rotation_)*/nullptr
  , /*decltype(_impl_.translation_)*/nullptr} {}
struct TNodeTransformDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TNodeTransformDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TNodeTransformDefaultTypeInternal() {}
  union {
    TNodeTransform _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TNodeTransformDefaultTypeInternal _TNodeTransform_default_instance_;
PROTOBUF_CONSTEXPR TRenderLayerProperties::TRenderLayerProperties(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.renderpassenabled_)*/nullptr
  , /*decltype(_impl_.rendertargetscale_)*/nullptr
  , /*decltype(_impl_.boundingboxrootname_)*/nullptr
  , /*decltype(_impl_.bordersize_)*/nullptr} {}
struct TRenderLayerPropertiesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TRenderLayerPropertiesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TRenderLayerPropertiesDefaultTypeInternal() {}
  union {
    TRenderLayerProperties _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TRenderLayerPropertiesDefaultTypeInternal _TRenderLayerProperties_default_instance_;
PROTOBUF_CONSTEXPR TNodeProperties_TRenderPassName::TNodeProperties_TRenderPassName(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.name_)*/nullptr
  , /*decltype(_impl_.enabled_)*/nullptr} {}
struct TNodeProperties_TRenderPassNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TNodeProperties_TRenderPassNameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TNodeProperties_TRenderPassNameDefaultTypeInternal() {}
  union {
    TNodeProperties_TRenderPassName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TNodeProperties_TRenderPassNameDefaultTypeInternal _TNodeProperties_TRenderPassName_default_instance_;
PROTOBUF_CONSTEXPR TNodeProperties_TBoundingVolume_TBoundingBox::TNodeProperties_TBoundingVolume_TBoundingBox(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.minbound_)*/nullptr
  , /*decltype(_impl_.maxbound_)*/nullptr} {}
struct TNodeProperties_TBoundingVolume_TBoundingBoxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TNodeProperties_TBoundingVolume_TBoundingBoxDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TNodeProperties_TBoundingVolume_TBoundingBoxDefaultTypeInternal() {}
  union {
    TNodeProperties_TBoundingVolume_TBoundingBox _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TNodeProperties_TBoundingVolume_TBoundingBoxDefaultTypeInternal _TNodeProperties_TBoundingVolume_TBoundingBox_default_instance_;
PROTOBUF_CONSTEXPR TNodeProperties_TBoundingVolume_TBoundingSphere::TNodeProperties_TBoundingVolume_TBoundingSphere(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.centerposition_)*/nullptr
  , /*decltype(_impl_.radius_)*/nullptr} {}
struct TNodeProperties_TBoundingVolume_TBoundingSphereDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TNodeProperties_TBoundingVolume_TBoundingSphereDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TNodeProperties_TBoundingVolume_TBoundingSphereDefaultTypeInternal() {}
  union {
    TNodeProperties_TBoundingVolume_TBoundingSphere _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TNodeProperties_TBoundingVolume_TBoundingSphereDefaultTypeInternal _TNodeProperties_TBoundingVolume_TBoundingSphere_default_instance_;
PROTOBUF_CONSTEXPR TNodeProperties_TBoundingVolume::TNodeProperties_TBoundingVolume(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.boundingbox_)*/nullptr
  , /*decltype(_impl_.boundingsphere_)*/nullptr} {}
struct TNodeProperties_TBoundingVolumeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TNodeProperties_TBoundingVolumeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TNodeProperties_TBoundingVolumeDefaultTypeInternal() {}
  union {
    TNodeProperties_TBoundingVolume _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TNodeProperties_TBoundingVolumeDefaultTypeInternal _TNodeProperties_TBoundingVolume_default_instance_;
PROTOBUF_CONSTEXPR TNodeProperties::TNodeProperties(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.renderpassnameext_)*/{}
  , /*decltype(_impl_.renderpassenabledext_)*/{}
  , /*decltype(_impl_.visible_)*/nullptr
  , /*decltype(_impl_.renderorderrank_)*/nullptr
  , /*decltype(_impl_.childsortorderrank_)*/nullptr
  , /*decltype(_impl_.scopemask_)*/nullptr
  , /*decltype(_impl_.renderorderbin_)*/nullptr
  , /*decltype(_impl_.material_)*/nullptr
  , /*decltype(_impl_.renderpassname_)*/nullptr
  , /*decltype(_impl_.renderpassenabled_)*/nullptr
  , /*decltype(_impl_.boundingvolume_)*/nullptr} {}
struct TNodePropertiesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TNodePropertiesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TNodePropertiesDefaultTypeInternal() {}
  union {
    TNodeProperties _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TNodePropertiesDefaultTypeInternal _TNodeProperties_default_instance_;
PROTOBUF_CONSTEXPR TTextNodeProperties::TTextNodeProperties(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.textcontent_)*/nullptr} {}
struct TTextNodePropertiesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TTextNodePropertiesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TTextNodePropertiesDefaultTypeInternal() {}
  union {
    TTextNodeProperties _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TTextNodePropertiesDefaultTypeInternal _TTextNodeProperties_default_instance_;
PROTOBUF_CONSTEXPR TCameraNodeProperties::TCameraNodeProperties(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.projectiontype_)*/nullptr
  , /*decltype(_impl_.horizontalfov_)*/nullptr
  , /*decltype(_impl_.aspectratio_)*/nullptr
  , /*decltype(_impl_.horizontalfocallength_)*/nullptr
  , /*decltype(_impl_.viewport_)*/nullptr
  , /*decltype(_impl_.nearplane_)*/nullptr
  , /*decltype(_impl_.farplane_)*/nullptr
  , /*decltype(_impl_.rightplane_)*/nullptr
  , /*decltype(_impl_.leftplane_)*/nullptr
  , /*decltype(_impl_.topplane_)*/nullptr
  , /*decltype(_impl_.bottomplane_)*/nullptr} {}
struct TCameraNodePropertiesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TCameraNodePropertiesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TCameraNodePropertiesDefaultTypeInternal() {}
  union {
    TCameraNodeProperties _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TCameraNodePropertiesDefaultTypeInternal _TCameraNodeProperties_default_instance_;
PROTOBUF_CONSTEXPR TResourceParam::TResourceParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.resource_)*/nullptr
  , /*decltype(_impl_.appearance_)*/nullptr
  , /*decltype(_impl_.renderpass_)*/nullptr
  , /*decltype(_impl_.blitpass_)*/nullptr} {}
struct TResourceParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TResourceParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TResourceParamDefaultTypeInternal() {}
  union {
    TResourceParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TResourceParamDefaultTypeInternal _TResourceParam_default_instance_;
PROTOBUF_CONSTEXPR TAppearanceParam::TAppearanceParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uniform_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TAppearanceParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TAppearanceParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TAppearanceParamDefaultTypeInternal() {}
  union {
    TAppearanceParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TAppearanceParamDefaultTypeInternal _TAppearanceParam_default_instance_;
PROTOBUF_CONSTEXPR TRenderPassParam::TRenderPassParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.enabled_)*/nullptr
  , /*decltype(_impl_.renderorderrank_)*/nullptr
  , /*decltype(_impl_.viewportoffset_)*/nullptr
  , /*decltype(_impl_.viewportsize_)*/nullptr} {}
struct TRenderPassParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TRenderPassParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TRenderPassParamDefaultTypeInternal() {}
  union {
    TRenderPassParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TRenderPassParamDefaultTypeInternal _TRenderPassParam_default_instance_;
PROTOBUF_CONSTEXPR TBlitPassParam::TBlitPassParam(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.enabled_)*/nullptr
  , /*decltype(_impl_.renderorderrank_)*/nullptr} {}
struct TBlitPassParamDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TBlitPassParamDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TBlitPassParamDefaultTypeInternal() {}
  union {
    TBlitPassParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TBlitPassParamDefaultTypeInternal _TBlitPassParam_default_instance_;
PROTOBUF_CONSTEXPR TDataChangeTrigger::TDataChangeTrigger(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_.command_)*/nullptr} {}
struct TDataChangeTriggerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TDataChangeTriggerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TDataChangeTriggerDefaultTypeInternal() {}
  union {
    TDataChangeTrigger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TDataChangeTriggerDefaultTypeInternal _TDataChangeTrigger_default_instance_;
PROTOBUF_CONSTEXPR TConditionalTrigger::TConditionalTrigger(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.condition_)*/nullptr
  , /*decltype(_impl_.command_)*/nullptr
  , /*decltype(_impl_.elsecommand_)*/nullptr
  , /*decltype(_impl_.execmode_)*/0
  , /*decltype(_impl_.elsecommandonfallbackonly_)*/false} {}
struct TConditionalTriggerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TConditionalTriggerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TConditionalTriggerDefaultTypeInternal() {}
  union {
    TConditionalTrigger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TConditionalTriggerDefaultTypeInternal _TConditionalTrigger_default_instance_;
PROTOBUF_CONSTEXPR TTrigger::TTrigger(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.datachangetrigger_)*/nullptr
  , /*decltype(_impl_.conditionaltrigger_)*/nullptr
  , /*decltype(_impl_.category_)*/0} {}
struct TTriggerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TTriggerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TTriggerDefaultTypeInternal() {}
  union {
    TTrigger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TTriggerDefaultTypeInternal _TTrigger_default_instance_;
PROTOBUF_CONSTEXPR TPolyLine::TPolyLine(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.point_)*/{}
  , /*decltype(_impl_.pointbinding_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TPolyLineDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TPolyLineDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TPolyLineDefaultTypeInternal() {}
  union {
    TPolyLine _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TPolyLineDefaultTypeInternal _TPolyLine_default_instance_;
PROTOBUF_CONSTEXPR TInputConfig::TInputConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.receivegesture_)*/{}
  , /*decltype(_impl_.ignoretouch_)*/{}
  , /*decltype(_impl_.receivegesturepad_)*/{}
  , /*decltype(_impl_.receivegesturescreen_)*/{}
  , /*decltype(_impl_.touchvolumechildidentifier_)*/{}
  , /*decltype(_impl_.touchareapolygon_)*/nullptr
  , /*decltype(_impl_.receivedirectinput_)*/false
  , /*decltype(_impl_.passtouch_)*/false
  , /*decltype(_impl_.alwaystouch_)*/false
  , /*decltype(_impl_.defaulttouchhandled_)*/false
  , /*decltype(_impl_.ignorecontroller_)*/false
  , /*decltype(_impl_.ignorefocusontouch_)*/false
  , /*decltype(_impl_.blocktouchtoparents_)*/false
  , /*decltype(_impl_.significantmovementoverwrite_)*/0
  , /*decltype(_impl_.touchvolumesource_)*/1
  , /*decltype(_impl_.touchscreentargetdomain_)*/1
  , /*decltype(_impl_.touchcontrollertargetdomain_)*/1} {}
struct TInputConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TInputConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TInputConfigDefaultTypeInternal() {}
  union {
    TInputConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TInputConfigDefaultTypeInternal _TInputConfig_default_instance_;
PROTOBUF_CONSTEXPR TImportDefinition::TImportDefinition(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.useimport_)*/{}
  , /*decltype(_impl_.child_)*/{}
  , /*decltype(_impl_.externalmodelvalue_)*/{}
  , /*decltype(_impl_.internalmodelvalue_)*/{}
  , /*decltype(_impl_.nodeparam_)*/{}
  , /*decltype(_impl_.slot_)*/{}
  , /*decltype(_impl_.layout_)*/{}
  , /*decltype(_impl_.script_)*/{}
  , /*decltype(_impl_.triggeredslot_)*/{}
  , /*decltype(_impl_.compositeanimation_)*/{}
  , /*decltype(_impl_.trigger_)*/{}
  , /*decltype(_impl_.curve_)*/{}
  , /*decltype(_impl_.addmodelbindingstochild_)*/{}
  , /*decltype(_impl_.resourceparam_)*/{}
  , /*decltype(_impl_.modelbinding_)*/{}
  , /*decltype(_impl_.uniform_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.forwardsignals_)*/nullptr
  , /*decltype(_impl_.input_)*/nullptr
  , /*decltype(_impl_.requestlayout_)*/nullptr
  , /*decltype(_impl_.defaultchildmodelbindings_)*/nullptr
  , /*decltype(_impl_.transform_)*/nullptr
  , /*decltype(_impl_.renderlayerproperties_)*/nullptr
  , /*decltype(_impl_.nodeproperties_)*/nullptr
  , /*decltype(_impl_.cameranodeproperties_)*/nullptr
  , /*decltype(_impl_.widgetanimation_)*/nullptr} {}
struct TImportDefinitionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TImportDefinitionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TImportDefinitionDefaultTypeInternal() {}
  union {
    TImportDefinition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TImportDefinitionDefaultTypeInternal _TImportDefinition_default_instance_;
PROTOBUF_CONSTEXPR TDefaultChildModelBindings::TDefaultChildModelBindings(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.modelbinding_)*/{}
  , /*decltype(_impl_.useimport_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TDefaultChildModelBindingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TDefaultChildModelBindingsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TDefaultChildModelBindingsDefaultTypeInternal() {}
  union {
    TDefaultChildModelBindings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TDefaultChildModelBindingsDefaultTypeInternal _TDefaultChildModelBindings_default_instance_;
PROTOBUF_CONSTEXPR TAddModelBindingsToChild::TAddModelBindingsToChild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.modelbinding_)*/{}
  , /*decltype(_impl_.exemptedexternalkey_)*/{}
  , /*decltype(_impl_.childidentifier_)*/nullptr
  , /*decltype(_impl_.autobindallexternals_)*/false} {}
struct TAddModelBindingsToChildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TAddModelBindingsToChildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TAddModelBindingsToChildDefaultTypeInternal() {}
  union {
    TAddModelBindingsToChild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TAddModelBindingsToChildDefaultTypeInternal _TAddModelBindingsToChild_default_instance_;
PROTOBUF_CONSTEXPR TWidget_TPrototypeAsset::TWidget_TPrototypeAsset(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.resourceid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.assetidlegacy_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.binding_)*/nullptr
  , /*decltype(_impl_.resourceidnumeric_)*/uint64_t{0u}
  , /*decltype(_impl_.resourceidnumericlegacy_)*/0u} {}
struct TWidget_TPrototypeAssetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TWidget_TPrototypeAssetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TWidget_TPrototypeAssetDefaultTypeInternal() {}
  union {
    TWidget_TPrototypeAsset _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TWidget_TPrototypeAssetDefaultTypeInternal _TWidget_TPrototypeAsset_default_instance_;
PROTOBUF_CONSTEXPR TWidget::TWidget(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.child_)*/{}
  , /*decltype(_impl_.externalmodelvalue_)*/{}
  , /*decltype(_impl_.internalmodelvalue_)*/{}
  , /*decltype(_impl_.nodeparam_)*/{}
  , /*decltype(_impl_.slot_)*/{}
  , /*decltype(_impl_.layout_)*/{}
  , /*decltype(_impl_.script_)*/{}
  , /*decltype(_impl_.triggeredslot_)*/{}
  , /*decltype(_impl_.compositeanimation_)*/{}
  , /*decltype(_impl_.trigger_)*/{}
  , /*decltype(_impl_.useimport_)*/{}
  , /*decltype(_impl_.curve_)*/{}
  , /*decltype(_impl_.addmodelbindingstochild_)*/{}
  , /*decltype(_impl_.resourceparam_)*/{}
  , /*decltype(_impl_.type_)*/nullptr
  , /*decltype(_impl_.prototype_)*/nullptr
  , /*decltype(_impl_.prototypeasset_)*/nullptr
  , /*decltype(_impl_.defaultchildmodelbindings_)*/nullptr
  , /*decltype(_impl_.input_)*/nullptr
  , /*decltype(_impl_.forwardsignals_)*/nullptr
  , /*decltype(_impl_.requestlayout_)*/nullptr
  , /*decltype(_impl_.prototypelevelselection_)*/1} {}
struct TWidgetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TWidgetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TWidgetDefaultTypeInternal() {}
  union {
    TWidget _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TWidgetDefaultTypeInternal _TWidget_default_instance_;
PROTOBUF_CONSTEXPR TWidgetCollection::TWidgetCollection(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.widget_)*/{}
  , /*decltype(_impl_.importdefinition_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TWidgetCollectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TWidgetCollectionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TWidgetCollectionDefaultTypeInternal() {}
  union {
    TWidgetCollection _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TWidgetCollectionDefaultTypeInternal _TWidgetCollection_default_instance_;
PROTOBUF_CONSTEXPR TChildWidget::TChildWidget(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.modelbinding_)*/{}
  , /*decltype(_impl_.useimport_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.widgettype_)*/nullptr
  , /*decltype(_impl_.forwardsignals_)*/nullptr
  , /*decltype(_impl_.input_)*/nullptr
  , /*decltype(_impl_.widgetlevelselection_)*/1} {}
struct TChildWidgetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TChildWidgetDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TChildWidgetDefaultTypeInternal() {}
  union {
    TChildWidget _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TChildWidgetDefaultTypeInternal _TChildWidget_default_instance_;
PROTOBUF_CONSTEXPR TChildModelParameter::TChildModelParameter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.key_)*/nullptr
  , /*decltype(_impl_.binding_)*/nullptr} {}
struct TChildModelParameterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TChildModelParameterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TChildModelParameterDefaultTypeInternal() {}
  union {
    TChildModelParameter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TChildModelParameterDefaultTypeInternal _TChildModelParameter_default_instance_;
PROTOBUF_CONSTEXPR TExternalModelParameter::TExternalModelParameter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.key_)*/nullptr
  , /*decltype(_impl_.variant_)*/nullptr
  , /*decltype(_impl_.binding_)*/nullptr} {}
struct TExternalModelParameterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TExternalModelParameterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TExternalModelParameterDefaultTypeInternal() {}
  union {
    TExternalModelParameter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TExternalModelParameterDefaultTypeInternal _TExternalModelParameter_default_instance_;
PROTOBUF_CONSTEXPR TInternalModelParameter::TInternalModelParameter(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.key_)*/nullptr
  , /*decltype(_impl_.binding_)*/nullptr} {}
struct TInternalModelParameterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TInternalModelParameterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TInternalModelParameterDefaultTypeInternal() {}
  union {
    TInternalModelParameter _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TInternalModelParameterDefaultTypeInternal _TInternalModelParameter_default_instance_;
PROTOBUF_CONSTEXPR TSlot::TSlot(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.command_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr} {}
struct TSlotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TSlotDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TSlotDefaultTypeInternal() {}
  union {
    TSlot _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TSlotDefaultTypeInternal _TSlot_default_instance_;
PROTOBUF_CONSTEXPR TCommand::TCommand(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.assignment_)*/nullptr
  , /*decltype(_impl_.valueassignment_)*/nullptr
  , /*decltype(_impl_.signal_)*/nullptr
  , /*decltype(_impl_.animationtrigger_)*/nullptr
  , /*decltype(_impl_.multicommand_)*/nullptr
  , /*decltype(_impl_.condition_)*/nullptr
  , /*decltype(_impl_.requestlayout_)*/nullptr
  , /*decltype(_impl_.debugoutput_)*/nullptr
  , /*decltype(_impl_.widgetdataobjectsetvalue_)*/nullptr
  , /*decltype(_impl_.widgetdataobjectcreateprovider_)*/nullptr
  , /*decltype(_impl_.widgetdataobjectcreateconsumer_)*/nullptr
  , /*decltype(_impl_.updatedcsmmetadata_)*/nullptr
  , /*decltype(_impl_.signalparametervaluesextractor_)*/nullptr} {}
struct TCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TCommandDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TCommandDefaultTypeInternal() {}
  union {
    TCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TCommandDefaultTypeInternal _TCommand_default_instance_;
PROTOBUF_CONSTEXPR TMultiCommand::TMultiCommand(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.command_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TMultiCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TMultiCommandDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TMultiCommandDefaultTypeInternal() {}
  union {
    TMultiCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TMultiCommandDefaultTypeInternal _TMultiCommand_default_instance_;
PROTOBUF_CONSTEXPR TParameterAssignment::TParameterAssignment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.key_)*/nullptr
  , /*decltype(_impl_.binding_)*/nullptr
  , /*decltype(_impl_.target_)*/nullptr
  , /*decltype(_impl_.targettype_)*/1} {}
struct TParameterAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TParameterAssignmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TParameterAssignmentDefaultTypeInternal() {}
  union {
    TParameterAssignment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TParameterAssignmentDefaultTypeInternal _TParameterAssignment_default_instance_;
PROTOBUF_CONSTEXPR TParameterValueAssignment::TParameterValueAssignment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.key_)*/nullptr
  , /*decltype(_impl_.binding_)*/nullptr
  , /*decltype(_impl_.target_)*/nullptr
  , /*decltype(_impl_.targettype_)*/1} {}
struct TParameterValueAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TParameterValueAssignmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TParameterValueAssignmentDefaultTypeInternal() {}
  union {
    TParameterValueAssignment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TParameterValueAssignmentDefaultTypeInternal _TParameterValueAssignment_default_instance_;
PROTOBUF_CONSTEXPR TSignalParameterValuesExtractor_TAssignment::TSignalParameterValuesExtractor_TAssignment(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.key_)*/nullptr
  , /*decltype(_impl_.parameterkey_)*/nullptr
  , /*decltype(_impl_.target_)*/nullptr
  , /*decltype(_impl_.targettype_)*/1} {}
struct TSignalParameterValuesExtractor_TAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TSignalParameterValuesExtractor_TAssignmentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TSignalParameterValuesExtractor_TAssignmentDefaultTypeInternal() {}
  union {
    TSignalParameterValuesExtractor_TAssignment _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TSignalParameterValuesExtractor_TAssignmentDefaultTypeInternal _TSignalParameterValuesExtractor_TAssignment_default_instance_;
PROTOBUF_CONSTEXPR TSignalParameterValuesExtractor::TSignalParameterValuesExtractor(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.assignment_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TSignalParameterValuesExtractorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TSignalParameterValuesExtractorDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TSignalParameterValuesExtractorDefaultTypeInternal() {}
  union {
    TSignalParameterValuesExtractor _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TSignalParameterValuesExtractorDefaultTypeInternal _TSignalParameterValuesExtractor_default_instance_;
PROTOBUF_CONSTEXPR TSignal::TSignal(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.parameter_)*/{}
  , /*decltype(_impl_.signalid_)*/nullptr
  , /*decltype(_impl_.targetchildid_)*/nullptr
  , /*decltype(_impl_.target_)*/0
  , /*decltype(_impl_.targetlevel_)*/0u} {}
struct TSignalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TSignalDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TSignalDefaultTypeInternal() {}
  union {
    TSignal _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TSignalDefaultTypeInternal _TSignal_default_instance_;
PROTOBUF_CONSTEXPR TRequestLayout::TRequestLayout(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.binding_)*/nullptr} {}
struct TRequestLayoutDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TRequestLayoutDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TRequestLayoutDefaultTypeInternal() {}
  union {
    TRequestLayout _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TRequestLayoutDefaultTypeInternal _TRequestLayout_default_instance_;
PROTOBUF_CONSTEXPR TDebugOutputCommand::TDebugOutputCommand(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.binding_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TDebugOutputCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TDebugOutputCommandDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TDebugOutputCommandDefaultTypeInternal() {}
  union {
    TDebugOutputCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TDebugOutputCommandDefaultTypeInternal _TDebugOutputCommand_default_instance_;
PROTOBUF_CONSTEXPR TWidgetDataObjectSetValue::TWidgetDataObjectSetValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.dataobject_)*/nullptr
  , /*decltype(_impl_.value_)*/nullptr} {}
struct TWidgetDataObjectSetValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TWidgetDataObjectSetValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TWidgetDataObjectSetValueDefaultTypeInternal() {}
  union {
    TWidgetDataObjectSetValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TWidgetDataObjectSetValueDefaultTypeInternal _TWidgetDataObjectSetValue_default_instance_;
PROTOBUF_CONSTEXPR TWidgetDataObjectCreateProvider::TWidgetDataObjectCreateProvider(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.dataobject_)*/nullptr
  , /*decltype(_impl_.providerid_)*/nullptr} {}
struct TWidgetDataObjectCreateProviderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TWidgetDataObjectCreateProviderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TWidgetDataObjectCreateProviderDefaultTypeInternal() {}
  union {
    TWidgetDataObjectCreateProvider _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TWidgetDataObjectCreateProviderDefaultTypeInternal _TWidgetDataObjectCreateProvider_default_instance_;
PROTOBUF_CONSTEXPR TWidgetDataObjectCreateConsumer::TWidgetDataObjectCreateConsumer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.dataobject_)*/nullptr
  , /*decltype(_impl_.consumerid_)*/nullptr} {}
struct TWidgetDataObjectCreateConsumerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TWidgetDataObjectCreateConsumerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TWidgetDataObjectCreateConsumerDefaultTypeInternal() {}
  union {
    TWidgetDataObjectCreateConsumer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TWidgetDataObjectCreateConsumerDefaultTypeInternal _TWidgetDataObjectCreateConsumer_default_instance_;
PROTOBUF_CONSTEXPR TUpdateDcsmMetadataCommand::TUpdateDcsmMetadataCommand(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.contentid_)*/nullptr
  , /*decltype(_impl_.vehiclevisible_)*/nullptr
  , /*decltype(_impl_.vehiclemodelid_)*/nullptr
  , /*decltype(_impl_.camerapitch_)*/nullptr
  , /*decltype(_impl_.camerayaw_)*/nullptr
  , /*decltype(_impl_.camerafovh_)*/nullptr
  , /*decltype(_impl_.cameradistance_)*/nullptr
  , /*decltype(_impl_.cameraorigin_)*/nullptr
  , /*decltype(_impl_.cameranearplane_)*/nullptr
  , /*decltype(_impl_.camerafarplane_)*/nullptr} {}
struct TUpdateDcsmMetadataCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TUpdateDcsmMetadataCommandDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TUpdateDcsmMetadataCommandDefaultTypeInternal() {}
  union {
    TUpdateDcsmMetadataCommand _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TUpdateDcsmMetadataCommandDefaultTypeInternal _TUpdateDcsmMetadataCommand_default_instance_;
PROTOBUF_CONSTEXPR TAnimationTrigger::TAnimationTrigger(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.animation_)*/nullptr
  , /*decltype(_impl_.action_)*/0} {}
struct TAnimationTriggerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TAnimationTriggerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TAnimationTriggerDefaultTypeInternal() {}
  union {
    TAnimationTrigger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TAnimationTriggerDefaultTypeInternal _TAnimationTrigger_default_instance_;
PROTOBUF_CONSTEXPR TScriptReference::TScriptReference(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.scriptreference_)*/nullptr} {}
struct TScriptReferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TScriptReferenceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TScriptReferenceDefaultTypeInternal() {}
  union {
    TScriptReference _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TScriptReferenceDefaultTypeInternal _TScriptReference_default_instance_;
PROTOBUF_CONSTEXPR TCurveReference::TCurveReference(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.curvereference_)*/nullptr} {}
struct TCurveReferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TCurveReferenceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TCurveReferenceDefaultTypeInternal() {}
  union {
    TCurveReference _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TCurveReferenceDefaultTypeInternal _TCurveReference_default_instance_;
PROTOBUF_CONSTEXPR TScript::TScript(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.parameter_)*/{}
  , /*decltype(_impl_.passiveparameter_)*/{}
  , /*decltype(_impl_.returnvalue_)*/{}
  , /*decltype(_impl_.scriptidentifier_)*/nullptr
  , /*decltype(_impl_.functionname_)*/nullptr} {}
struct TScriptDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TScriptDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TScriptDefaultTypeInternal() {}
  union {
    TScript _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TScriptDefaultTypeInternal _TScript_default_instance_;
PROTOBUF_CONSTEXPR TScriptReturnValue::TScriptReturnValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.key_)*/nullptr
  , /*decltype(_impl_.value_)*/nullptr} {}
struct TScriptReturnValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TScriptReturnValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TScriptReturnValueDefaultTypeInternal() {}
  union {
    TScriptReturnValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TScriptReturnValueDefaultTypeInternal _TScriptReturnValue_default_instance_;
PROTOBUF_CONSTEXPR TTriggeredSlot::TTriggeredSlot(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.signal_)*/nullptr
  , /*decltype(_impl_.slot_)*/nullptr} {}
struct TTriggeredSlotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TTriggeredSlotDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TTriggeredSlotDefaultTypeInternal() {}
  union {
    TTriggeredSlot _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TTriggeredSlotDefaultTypeInternal _TTriggeredSlot_default_instance_;
PROTOBUF_CONSTEXPR TForwardSignals::TForwardSignals(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.signalid_)*/{}
  , /*decltype(_impl_.target_)*/0} {}
struct TForwardSignalsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TForwardSignalsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TForwardSignalsDefaultTypeInternal() {}
  union {
    TForwardSignals _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TForwardSignalsDefaultTypeInternal _TForwardSignals_default_instance_;
PROTOBUF_CONSTEXPR TCurve::TCurve(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.curveidentifier_)*/nullptr
  , /*decltype(_impl_.sampleposition_)*/nullptr
  , /*decltype(_impl_.curvedefinition_)*/nullptr} {}
struct TCurveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TCurveDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TCurveDefaultTypeInternal() {}
  union {
    TCurve _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TCurveDefaultTypeInternal _TCurve_default_instance_;
PROTOBUF_CONSTEXPR TWidgetAnimation::TWidgetAnimation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.startvalue_)*/nullptr
  , /*decltype(_impl_.startbinding_)*/nullptr
  , /*decltype(_impl_.endvalue_)*/nullptr
  , /*decltype(_impl_.endbinding_)*/nullptr
  , /*decltype(_impl_.durationbinding_)*/nullptr
  , /*decltype(_impl_.keyframesequence_)*/nullptr
  , /*decltype(_impl_.durationvalue_)*/0u
  , /*decltype(_impl_.interpolator_)*/0
  , /*decltype(_impl_.returntype_)*/0
  , /*decltype(_impl_.loopcount_)*/0
  , /*decltype(_impl_.updateinterval_)*/0
  , /*decltype(_impl_.updatebehaviour_)*/0} {}
struct TWidgetAnimationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TWidgetAnimationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TWidgetAnimationDefaultTypeInternal() {}
  union {
    TWidgetAnimation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TWidgetAnimationDefaultTypeInternal _TWidgetAnimation_default_instance_;
PROTOBUF_CONSTEXPR TCompositeAnimationElement::TCompositeAnimationElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.animationtype_)*/nullptr
  , /*decltype(_impl_.bindtoreturnvalue_)*/nullptr
  , /*decltype(_impl_.isstartupanimation_)*/false} {}
struct TCompositeAnimationElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TCompositeAnimationElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TCompositeAnimationElementDefaultTypeInternal() {}
  union {
    TCompositeAnimationElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TCompositeAnimationElementDefaultTypeInternal _TCompositeAnimationElement_default_instance_;
PROTOBUF_CONSTEXPR TCompositeAnimationTrigger::TCompositeAnimationTrigger(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.source_)*/nullptr
  , /*decltype(_impl_.widgetcommand_)*/nullptr
  , /*decltype(_impl_.signal_)*/0
  , /*decltype(_impl_.action_)*/0} {}
struct TCompositeAnimationTriggerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TCompositeAnimationTriggerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TCompositeAnimationTriggerDefaultTypeInternal() {}
  union {
    TCompositeAnimationTrigger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TCompositeAnimationTriggerDefaultTypeInternal _TCompositeAnimationTrigger_default_instance_;
PROTOBUF_CONSTEXPR TCompositeAnimationSubAnimationList::TCompositeAnimationSubAnimationList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.useimport_)*/{}
  , /*decltype(_impl_.trigger_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.widgetanimation_)*/nullptr} {}
struct TCompositeAnimationSubAnimationListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TCompositeAnimationSubAnimationListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TCompositeAnimationSubAnimationListDefaultTypeInternal() {}
  union {
    TCompositeAnimationSubAnimationList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TCompositeAnimationSubAnimationListDefaultTypeInternal _TCompositeAnimationSubAnimationList_default_instance_;
PROTOBUF_CONSTEXPR TCompositeAnimationReturnValue::TCompositeAnimationReturnValue(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.animation_)*/{}
  , /*decltype(_impl_.key_)*/nullptr
  , /*decltype(_impl_.defaultvalue_)*/nullptr
  , /*decltype(_impl_.returntype_)*/0} {}
struct TCompositeAnimationReturnValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TCompositeAnimationReturnValueDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TCompositeAnimationReturnValueDefaultTypeInternal() {}
  union {
    TCompositeAnimationReturnValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TCompositeAnimationReturnValueDefaultTypeInternal _TCompositeAnimationReturnValue_default_instance_;
PROTOBUF_CONSTEXPR TCompositeAnimation::TCompositeAnimation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.returnvalue_)*/{}
  , /*decltype(_impl_.compositeidentifier_)*/nullptr} {}
struct TCompositeAnimationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TCompositeAnimationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TCompositeAnimationDefaultTypeInternal() {}
  union {
    TCompositeAnimation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TCompositeAnimationDefaultTypeInternal _TCompositeAnimation_default_instance_;
PROTOBUF_CONSTEXPR TLayout::TLayout(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.triggeredslot_)*/{}
  , /*decltype(_impl_.useimport_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.staticlayout_)*/nullptr
  , /*decltype(_impl_.horizontallayout_)*/nullptr
  , /*decltype(_impl_.verticallayout_)*/nullptr
  , /*decltype(_impl_.horizontaldynamiclayout_)*/nullptr
  , /*decltype(_impl_.verticaldynamiclayout_)*/nullptr
  , /*decltype(_impl_.scenegraphlayout_)*/nullptr
  , /*decltype(_impl_.circlelayout_)*/nullptr
  , /*decltype(_impl_.horizontallistlayout_)*/nullptr
  , /*decltype(_impl_.verticallistlayout_)*/nullptr
  , /*decltype(_impl_.verticalrolllayout_)*/nullptr
  , /*decltype(_impl_.gridlayout_)*/nullptr
  , /*decltype(_impl_.matrixlayout_)*/nullptr
  , /*decltype(_impl_.scenegraphprojectlayout_)*/nullptr
  , /*decltype(_impl_.verticalcurvedlistlayout_)*/nullptr
  , /*decltype(_impl_.horizontalpageslayout_)*/nullptr
  , /*decltype(_impl_.menubeltlayout_)*/nullptr
  , /*decltype(_impl_.matrixdynamiclayout_)*/nullptr
  , /*decltype(_impl_.visibility_)*/nullptr} {}
struct TLayoutDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutDefaultTypeInternal() {}
  union {
    TLayout _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutDefaultTypeInternal _TLayout_default_instance_;
PROTOBUF_CONSTEXPR TLayoutStaticBase::TLayoutStaticBase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.leftmargin_)*/nullptr
  , /*decltype(_impl_.rightmargin_)*/nullptr
  , /*decltype(_impl_.topmargin_)*/nullptr
  , /*decltype(_impl_.bottommargin_)*/nullptr} {}
struct TLayoutStaticBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutStaticBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutStaticBaseDefaultTypeInternal() {}
  union {
    TLayoutStaticBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutStaticBaseDefaultTypeInternal _TLayoutStaticBase_default_instance_;
PROTOBUF_CONSTEXPR TLayoutStatic_TTemplate::TLayoutStatic_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutStatic_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutStatic_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutStatic_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutStatic_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutStatic_TTemplateDefaultTypeInternal _TLayoutStatic_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutStatic::TLayoutStatic(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutStaticDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutStaticDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutStaticDefaultTypeInternal() {}
  union {
    TLayoutStatic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutStaticDefaultTypeInternal _TLayoutStatic_default_instance_;
PROTOBUF_CONSTEXPR TLayoutStaticElement::TLayoutStaticElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.childidentifier_)*/nullptr
  , /*decltype(_impl_.nestedlayout_)*/nullptr
  , /*decltype(_impl_.size_)*/nullptr
  , /*decltype(_impl_.rotation_)*/nullptr
  , /*decltype(_impl_.position_)*/nullptr
  , /*decltype(_impl_.alignment_)*/nullptr
  , /*decltype(_impl_.sizepolicy_)*/nullptr} {}
struct TLayoutStaticElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutStaticElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutStaticElementDefaultTypeInternal() {}
  union {
    TLayoutStaticElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutStaticElementDefaultTypeInternal _TLayoutStaticElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHorizontal_TTemplate::TLayoutHorizontal_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutHorizontal_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHorizontal_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHorizontal_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutHorizontal_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHorizontal_TTemplateDefaultTypeInternal _TLayoutHorizontal_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHorizontal::TLayoutHorizontal(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutHorizontalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHorizontalDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHorizontalDefaultTypeInternal() {}
  union {
    TLayoutHorizontal _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHorizontalDefaultTypeInternal _TLayoutHorizontal_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVertical_TTemplate::TLayoutVertical_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutVertical_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVertical_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVertical_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutVertical_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVertical_TTemplateDefaultTypeInternal _TLayoutVertical_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVertical::TLayoutVertical(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutVerticalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVerticalDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVerticalDefaultTypeInternal() {}
  union {
    TLayoutVertical _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVerticalDefaultTypeInternal _TLayoutVertical_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHorizontalDynamic_TTemplate::TLayoutHorizontalDynamic_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutHorizontalDynamic_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHorizontalDynamic_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHorizontalDynamic_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutHorizontalDynamic_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHorizontalDynamic_TTemplateDefaultTypeInternal _TLayoutHorizontalDynamic_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHorizontalDynamic::TLayoutHorizontalDynamic(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutHorizontalDynamicDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHorizontalDynamicDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHorizontalDynamicDefaultTypeInternal() {}
  union {
    TLayoutHorizontalDynamic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHorizontalDynamicDefaultTypeInternal _TLayoutHorizontalDynamic_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVerticalDynamic_TTemplate::TLayoutVerticalDynamic_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutVerticalDynamic_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVerticalDynamic_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVerticalDynamic_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutVerticalDynamic_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVerticalDynamic_TTemplateDefaultTypeInternal _TLayoutVerticalDynamic_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVerticalDynamic::TLayoutVerticalDynamic(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutVerticalDynamicDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVerticalDynamicDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVerticalDynamicDefaultTypeInternal() {}
  union {
    TLayoutVerticalDynamic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVerticalDynamicDefaultTypeInternal _TLayoutVerticalDynamic_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHorizontalList_TTemplate::TLayoutHorizontalList_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutHorizontalList_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHorizontalList_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHorizontalList_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutHorizontalList_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHorizontalList_TTemplateDefaultTypeInternal _TLayoutHorizontalList_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHorizontalList::TLayoutHorizontalList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutHorizontalListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHorizontalListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHorizontalListDefaultTypeInternal() {}
  union {
    TLayoutHorizontalList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHorizontalListDefaultTypeInternal _TLayoutHorizontalList_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVerticalList_TTemplate::TLayoutVerticalList_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutVerticalList_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVerticalList_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVerticalList_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutVerticalList_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVerticalList_TTemplateDefaultTypeInternal _TLayoutVerticalList_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVerticalList::TLayoutVerticalList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutVerticalListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVerticalListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVerticalListDefaultTypeInternal() {}
  union {
    TLayoutVerticalList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVerticalListDefaultTypeInternal _TLayoutVerticalList_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVerticalCurvedList_TTemplate::TLayoutVerticalCurvedList_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutVerticalCurvedList_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVerticalCurvedList_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVerticalCurvedList_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutVerticalCurvedList_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVerticalCurvedList_TTemplateDefaultTypeInternal _TLayoutVerticalCurvedList_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVerticalCurvedList::TLayoutVerticalCurvedList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutVerticalCurvedListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVerticalCurvedListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVerticalCurvedListDefaultTypeInternal() {}
  union {
    TLayoutVerticalCurvedList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVerticalCurvedListDefaultTypeInternal _TLayoutVerticalCurvedList_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVerticalRoll_TTemplate::TLayoutVerticalRoll_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutVerticalRoll_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVerticalRoll_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVerticalRoll_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutVerticalRoll_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVerticalRoll_TTemplateDefaultTypeInternal _TLayoutVerticalRoll_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVerticalRoll::TLayoutVerticalRoll(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutVerticalRollDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVerticalRollDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVerticalRollDefaultTypeInternal() {}
  union {
    TLayoutVerticalRoll _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVerticalRollDefaultTypeInternal _TLayoutVerticalRoll_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHorizontalPages_TTemplate::TLayoutHorizontalPages_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutHorizontalPages_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHorizontalPages_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHorizontalPages_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutHorizontalPages_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHorizontalPages_TTemplateDefaultTypeInternal _TLayoutHorizontalPages_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHorizontalPages::TLayoutHorizontalPages(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.pagesize_)*/nullptr
  , /*decltype(_impl_.pagespacing_)*/nullptr} {}
struct TLayoutHorizontalPagesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHorizontalPagesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHorizontalPagesDefaultTypeInternal() {}
  union {
    TLayoutHorizontalPages _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHorizontalPagesDefaultTypeInternal _TLayoutHorizontalPages_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHVBase::TLayoutHVBase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.orientation_)*/nullptr
  , /*decltype(_impl_.leftmargin_)*/nullptr
  , /*decltype(_impl_.rightmargin_)*/nullptr
  , /*decltype(_impl_.topmargin_)*/nullptr
  , /*decltype(_impl_.bottommargin_)*/nullptr
  , /*decltype(_impl_.spacing_)*/nullptr
  , /*decltype(_impl_.raster_)*/nullptr} {}
struct TLayoutHVBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHVBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHVBaseDefaultTypeInternal() {}
  union {
    TLayoutHVBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHVBaseDefaultTypeInternal _TLayoutHVBase_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHVRollBase::TLayoutHVRollBase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.orientation_)*/nullptr
  , /*decltype(_impl_.leftmargin_)*/nullptr
  , /*decltype(_impl_.rightmargin_)*/nullptr
  , /*decltype(_impl_.topmargin_)*/nullptr
  , /*decltype(_impl_.bottommargin_)*/nullptr
  , /*decltype(_impl_.spacing_)*/nullptr
  , /*decltype(_impl_.raster_)*/nullptr
  , /*decltype(_impl_.focusedchild_)*/nullptr
  , /*decltype(_impl_.wraparound_)*/nullptr} {}
struct TLayoutHVRollBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHVRollBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHVRollBaseDefaultTypeInternal() {}
  union {
    TLayoutHVRollBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHVRollBaseDefaultTypeInternal _TLayoutHVRollBase_default_instance_;
PROTOBUF_CONSTEXPR TLayoutCurvedHVBase::TLayoutCurvedHVBase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.radius_)*/nullptr
  , /*decltype(_impl_.origin_)*/nullptr
  , /*decltype(_impl_.orientation_)*/nullptr
  , /*decltype(_impl_.leftmargin_)*/nullptr
  , /*decltype(_impl_.rightmargin_)*/nullptr
  , /*decltype(_impl_.topmargin_)*/nullptr
  , /*decltype(_impl_.bottommargin_)*/nullptr
  , /*decltype(_impl_.spacing_)*/nullptr
  , /*decltype(_impl_.raster_)*/nullptr
  , /*decltype(_impl_.originalignment_)*/nullptr
  , /*decltype(_impl_.scrollareaheight_)*/nullptr} {}
struct TLayoutCurvedHVBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutCurvedHVBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutCurvedHVBaseDefaultTypeInternal() {}
  union {
    TLayoutCurvedHVBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutCurvedHVBaseDefaultTypeInternal _TLayoutCurvedHVBase_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHorizontalElement::TLayoutHorizontalElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutHorizontalElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHorizontalElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHorizontalElementDefaultTypeInternal() {}
  union {
    TLayoutHorizontalElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHorizontalElementDefaultTypeInternal _TLayoutHorizontalElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVerticalElement::TLayoutVerticalElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutVerticalElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVerticalElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVerticalElementDefaultTypeInternal() {}
  union {
    TLayoutVerticalElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVerticalElementDefaultTypeInternal _TLayoutVerticalElement_default_instance_;
PROTOBUF_CONSTEXPR THVBaseElement::THVBaseElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.childidentifier_)*/nullptr
  , /*decltype(_impl_.nestedlayout_)*/nullptr
  , /*decltype(_impl_.size_)*/nullptr
  , /*decltype(_impl_.stretchfactor_)*/nullptr
  , /*decltype(_impl_.sizepolicy_)*/nullptr
  , /*decltype(_impl_.alignment_)*/nullptr} {}
struct THVBaseElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR THVBaseElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~THVBaseElementDefaultTypeInternal() {}
  union {
    THVBaseElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 THVBaseElementDefaultTypeInternal _THVBaseElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHorizontalDynamicElement::TLayoutHorizontalDynamicElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutHorizontalDynamicElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHorizontalDynamicElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHorizontalDynamicElementDefaultTypeInternal() {}
  union {
    TLayoutHorizontalDynamicElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHorizontalDynamicElementDefaultTypeInternal _TLayoutHorizontalDynamicElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVerticalDynamicElement::TLayoutVerticalDynamicElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutVerticalDynamicElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVerticalDynamicElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVerticalDynamicElementDefaultTypeInternal() {}
  union {
    TLayoutVerticalDynamicElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVerticalDynamicElementDefaultTypeInternal _TLayoutVerticalDynamicElement_default_instance_;
PROTOBUF_CONSTEXPR THVDynamicBaseElement::THVDynamicBaseElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.childidentifier_)*/nullptr
  , /*decltype(_impl_.nestedlayout_)*/nullptr
  , /*decltype(_impl_.sizemin_)*/nullptr
  , /*decltype(_impl_.sizemax_)*/nullptr
  , /*decltype(_impl_.priority_)*/nullptr
  , /*decltype(_impl_.sizepolicy_)*/nullptr
  , /*decltype(_impl_.alignment_)*/nullptr} {}
struct THVDynamicBaseElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR THVDynamicBaseElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~THVDynamicBaseElementDefaultTypeInternal() {}
  union {
    THVDynamicBaseElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 THVDynamicBaseElementDefaultTypeInternal _THVDynamicBaseElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutHorizontalListElement::TLayoutHorizontalListElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutHorizontalListElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutHorizontalListElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutHorizontalListElementDefaultTypeInternal() {}
  union {
    TLayoutHorizontalListElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutHorizontalListElementDefaultTypeInternal _TLayoutHorizontalListElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutVerticalListElement::TLayoutVerticalListElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutVerticalListElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutVerticalListElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutVerticalListElementDefaultTypeInternal() {}
  union {
    TLayoutVerticalListElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutVerticalListElementDefaultTypeInternal _TLayoutVerticalListElement_default_instance_;
PROTOBUF_CONSTEXPR THVListBaseElement::THVListBaseElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.childidentifier_)*/nullptr
  , /*decltype(_impl_.nestedlayout_)*/nullptr
  , /*decltype(_impl_.size_)*/nullptr
  , /*decltype(_impl_.alignment_)*/nullptr
  , /*decltype(_impl_.sizepolicy_)*/nullptr
  , /*decltype(_impl_.sizemin_)*/nullptr} {}
struct THVListBaseElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR THVListBaseElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~THVListBaseElementDefaultTypeInternal() {}
  union {
    THVListBaseElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 THVListBaseElementDefaultTypeInternal _THVListBaseElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutSceneGraph_TTemplate::TLayoutSceneGraph_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutSceneGraph_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutSceneGraph_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutSceneGraph_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutSceneGraph_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutSceneGraph_TTemplateDefaultTypeInternal _TLayoutSceneGraph_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutSceneGraph::TLayoutSceneGraph(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TLayoutSceneGraphDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutSceneGraphDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutSceneGraphDefaultTypeInternal() {}
  union {
    TLayoutSceneGraph _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutSceneGraphDefaultTypeInternal _TLayoutSceneGraph_default_instance_;
PROTOBUF_CONSTEXPR TLayoutSceneGraphElement::TLayoutSceneGraphElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.childidentifier_)*/nullptr
  , /*decltype(_impl_.nestedlayout_)*/nullptr
  , /*decltype(_impl_.rootnodename_)*/nullptr
  , /*decltype(_impl_.searchroot_)*/nullptr
  , /*decltype(_impl_.size_)*/nullptr
  , /*decltype(_impl_.rotation_)*/nullptr
  , /*decltype(_impl_.position_)*/nullptr
  , /*decltype(_impl_.alignment_)*/nullptr
  , /*decltype(_impl_.sizepolicy_)*/nullptr} {}
struct TLayoutSceneGraphElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutSceneGraphElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutSceneGraphElementDefaultTypeInternal() {}
  union {
    TLayoutSceneGraphElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutSceneGraphElementDefaultTypeInternal _TLayoutSceneGraphElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutSceneGraphProject::TLayoutSceneGraphProject(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.searchroot_)*/nullptr} {}
struct TLayoutSceneGraphProjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutSceneGraphProjectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutSceneGraphProjectDefaultTypeInternal() {}
  union {
    TLayoutSceneGraphProject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutSceneGraphProjectDefaultTypeInternal _TLayoutSceneGraphProject_default_instance_;
PROTOBUF_CONSTEXPR TLayoutSceneGraphProjectElement::TLayoutSceneGraphProjectElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.childidentifier_)*/nullptr
  , /*decltype(_impl_.nestedlayout_)*/nullptr
  , /*decltype(_impl_.nodename_)*/nullptr
  , /*decltype(_impl_.offset_)*/nullptr
  , /*decltype(_impl_.size_)*/nullptr
  , /*decltype(_impl_.rotation_)*/nullptr
  , /*decltype(_impl_.position_)*/nullptr
  , /*decltype(_impl_.alignment_)*/nullptr
  , /*decltype(_impl_.sizepolicy_)*/nullptr} {}
struct TLayoutSceneGraphProjectElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutSceneGraphProjectElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutSceneGraphProjectElementDefaultTypeInternal() {}
  union {
    TLayoutSceneGraphProjectElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutSceneGraphProjectElementDefaultTypeInternal _TLayoutSceneGraphProjectElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutCircle_TTemplate::TLayoutCircle_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutCircle_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutCircle_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutCircle_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutCircle_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutCircle_TTemplateDefaultTypeInternal _TLayoutCircle_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutCircle::TLayoutCircle(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutCircleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutCircleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutCircleDefaultTypeInternal() {}
  union {
    TLayoutCircle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutCircleDefaultTypeInternal _TLayoutCircle_default_instance_;
PROTOBUF_CONSTEXPR TLayoutCircleBase::TLayoutCircleBase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.orientation_)*/nullptr
  , /*decltype(_impl_.leftmargin_)*/nullptr
  , /*decltype(_impl_.rightmargin_)*/nullptr
  , /*decltype(_impl_.topmargin_)*/nullptr
  , /*decltype(_impl_.bottommargin_)*/nullptr
  , /*decltype(_impl_.spacing_)*/nullptr
  , /*decltype(_impl_.startangle_)*/nullptr
  , /*decltype(_impl_.endangle_)*/nullptr
  , /*decltype(_impl_.radius_)*/nullptr} {}
struct TLayoutCircleBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutCircleBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutCircleBaseDefaultTypeInternal() {}
  union {
    TLayoutCircleBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutCircleBaseDefaultTypeInternal _TLayoutCircleBase_default_instance_;
PROTOBUF_CONSTEXPR TLayoutCircleElement::TLayoutCircleElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutCircleElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutCircleElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutCircleElementDefaultTypeInternal() {}
  union {
    TLayoutCircleElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutCircleElementDefaultTypeInternal _TLayoutCircleElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutCircleBaseElement::TLayoutCircleBaseElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.childidentifier_)*/nullptr
  , /*decltype(_impl_.nestedlayout_)*/nullptr
  , /*decltype(_impl_.size_)*/nullptr
  , /*decltype(_impl_.stretchfactor_)*/nullptr
  , /*decltype(_impl_.sizepolicy_)*/nullptr
  , /*decltype(_impl_.alignment_)*/nullptr} {}
struct TLayoutCircleBaseElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutCircleBaseElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutCircleBaseElementDefaultTypeInternal() {}
  union {
    TLayoutCircleBaseElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutCircleBaseElementDefaultTypeInternal _TLayoutCircleBaseElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutGrid_TTemplate::TLayoutGrid_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutGrid_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutGrid_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutGrid_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutGrid_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutGrid_TTemplateDefaultTypeInternal _TLayoutGrid_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutGrid::TLayoutGrid(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.numberofrows_)*/nullptr
  , /*decltype(_impl_.numberofcolumns_)*/nullptr} {}
struct TLayoutGridDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutGridDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutGridDefaultTypeInternal() {}
  union {
    TLayoutGrid _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutGridDefaultTypeInternal _TLayoutGrid_default_instance_;
PROTOBUF_CONSTEXPR TLayoutGridBase::TLayoutGridBase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.leftmargin_)*/nullptr
  , /*decltype(_impl_.rightmargin_)*/nullptr
  , /*decltype(_impl_.topmargin_)*/nullptr
  , /*decltype(_impl_.bottommargin_)*/nullptr} {}
struct TLayoutGridBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutGridBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutGridBaseDefaultTypeInternal() {}
  union {
    TLayoutGridBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutGridBaseDefaultTypeInternal _TLayoutGridBase_default_instance_;
PROTOBUF_CONSTEXPR TLayoutGridElement::TLayoutGridElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.childidentifier_)*/nullptr
  , /*decltype(_impl_.nestedlayout_)*/nullptr
  , /*decltype(_impl_.row_)*/nullptr
  , /*decltype(_impl_.column_)*/nullptr
  , /*decltype(_impl_.rowspan_)*/nullptr
  , /*decltype(_impl_.columnspan_)*/nullptr} {}
struct TLayoutGridElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutGridElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutGridElementDefaultTypeInternal() {}
  union {
    TLayoutGridElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutGridElementDefaultTypeInternal _TLayoutGridElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutMatrix_TTemplate::TLayoutMatrix_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutMatrix_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutMatrix_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutMatrix_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutMatrix_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutMatrix_TTemplateDefaultTypeInternal _TLayoutMatrix_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutMatrix::TLayoutMatrix(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.cellsize_)*/nullptr} {}
struct TLayoutMatrixDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutMatrixDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutMatrixDefaultTypeInternal() {}
  union {
    TLayoutMatrix _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutMatrixDefaultTypeInternal _TLayoutMatrix_default_instance_;
PROTOBUF_CONSTEXPR TLayoutMatrixBase::TLayoutMatrixBase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.leftmargin_)*/nullptr
  , /*decltype(_impl_.rightmargin_)*/nullptr
  , /*decltype(_impl_.topmargin_)*/nullptr
  , /*decltype(_impl_.bottommargin_)*/nullptr
  , /*decltype(_impl_.orientationx_)*/nullptr
  , /*decltype(_impl_.orientationy_)*/nullptr
  , /*decltype(_impl_.spacing_)*/nullptr} {}
struct TLayoutMatrixBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutMatrixBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutMatrixBaseDefaultTypeInternal() {}
  union {
    TLayoutMatrixBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutMatrixBaseDefaultTypeInternal _TLayoutMatrixBase_default_instance_;
PROTOBUF_CONSTEXPR TLayoutMatrixElement::TLayoutMatrixElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.childidentifier_)*/nullptr
  , /*decltype(_impl_.nestedlayout_)*/nullptr
  , /*decltype(_impl_.alignment_)*/nullptr} {}
struct TLayoutMatrixElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutMatrixElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutMatrixElementDefaultTypeInternal() {}
  union {
    TLayoutMatrixElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutMatrixElementDefaultTypeInternal _TLayoutMatrixElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutMatrixDynamic_TTemplate::TLayoutMatrixDynamic_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutMatrixDynamic_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutMatrixDynamic_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutMatrixDynamic_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutMatrixDynamic_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutMatrixDynamic_TTemplateDefaultTypeInternal _TLayoutMatrixDynamic_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutMatrixDynamic::TLayoutMatrixDynamic(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.defaultcellsize_)*/nullptr} {}
struct TLayoutMatrixDynamicDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutMatrixDynamicDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutMatrixDynamicDefaultTypeInternal() {}
  union {
    TLayoutMatrixDynamic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutMatrixDynamicDefaultTypeInternal _TLayoutMatrixDynamic_default_instance_;
PROTOBUF_CONSTEXPR TLayoutMatrixDynamicBase::TLayoutMatrixDynamicBase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.leftmargin_)*/nullptr
  , /*decltype(_impl_.rightmargin_)*/nullptr
  , /*decltype(_impl_.topmargin_)*/nullptr
  , /*decltype(_impl_.bottommargin_)*/nullptr
  , /*decltype(_impl_.orientationx_)*/nullptr
  , /*decltype(_impl_.orientationy_)*/nullptr
  , /*decltype(_impl_.spacing_)*/nullptr} {}
struct TLayoutMatrixDynamicBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutMatrixDynamicBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutMatrixDynamicBaseDefaultTypeInternal() {}
  union {
    TLayoutMatrixDynamicBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutMatrixDynamicBaseDefaultTypeInternal _TLayoutMatrixDynamicBase_default_instance_;
PROTOBUF_CONSTEXPR TLayoutMatrixDynamicElement::TLayoutMatrixDynamicElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.childidentifier_)*/nullptr
  , /*decltype(_impl_.nestedlayout_)*/nullptr
  , /*decltype(_impl_.alignment_)*/nullptr
  , /*decltype(_impl_.sizepolicy_)*/nullptr
  , /*decltype(_impl_.size_)*/nullptr
  , /*decltype(_impl_.stretchfactor_)*/nullptr} {}
struct TLayoutMatrixDynamicElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutMatrixDynamicElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutMatrixDynamicElementDefaultTypeInternal() {}
  union {
    TLayoutMatrixDynamicElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutMatrixDynamicElementDefaultTypeInternal _TLayoutMatrixDynamicElement_default_instance_;
PROTOBUF_CONSTEXPR TLayoutMenuBelt_TTemplate::TLayoutMenuBelt_TTemplate(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.identifier_)*/nullptr
  , /*decltype(_impl_.element_)*/nullptr} {}
struct TLayoutMenuBelt_TTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutMenuBelt_TTemplateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutMenuBelt_TTemplateDefaultTypeInternal() {}
  union {
    TLayoutMenuBelt_TTemplate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutMenuBelt_TTemplateDefaultTypeInternal _TLayoutMenuBelt_TTemplate_default_instance_;
PROTOBUF_CONSTEXPR TLayoutMenuBelt::TLayoutMenuBelt(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.element_)*/{}
  , /*decltype(_impl_.elementtemplate_)*/{}
  , /*decltype(_impl_.base_)*/nullptr} {}
struct TLayoutMenuBeltDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutMenuBeltDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutMenuBeltDefaultTypeInternal() {}
  union {
    TLayoutMenuBelt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutMenuBeltDefaultTypeInternal _TLayoutMenuBelt_default_instance_;
PROTOBUF_CONSTEXPR TLayoutMenuBeltBase::TLayoutMenuBeltBase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.leftmargin_)*/nullptr
  , /*decltype(_impl_.rightmargin_)*/nullptr
  , /*decltype(_impl_.topmargin_)*/nullptr
  , /*decltype(_impl_.bottommargin_)*/nullptr
  , /*decltype(_impl_.pagesize_)*/nullptr
  , /*decltype(_impl_.pageblocksize_)*/nullptr
  , /*decltype(_impl_.elementshift_)*/nullptr
  , /*decltype(_impl_.pagespacing_)*/nullptr
  , /*decltype(_impl_.verticalspacing_)*/nullptr} {}
struct TLayoutMenuBeltBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutMenuBeltBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutMenuBeltBaseDefaultTypeInternal() {}
  union {
    TLayoutMenuBeltBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutMenuBeltBaseDefaultTypeInternal _TLayoutMenuBeltBase_default_instance_;
PROTOBUF_CONSTEXPR TLayoutMenuBeltElement::TLayoutMenuBeltElement(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.childidentifier_)*/nullptr
  , /*decltype(_impl_.nestedlayout_)*/nullptr
  , /*decltype(_impl_.size_)*/nullptr
  , /*decltype(_impl_.sizepolicy_)*/nullptr
  , /*decltype(_impl_.alignment_)*/nullptr} {}
struct TLayoutMenuBeltElementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TLayoutMenuBeltElementDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TLayoutMenuBeltElementDefaultTypeInternal() {}
  union {
    TLayoutMenuBeltElement _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TLayoutMenuBeltElementDefaultTypeInternal _TLayoutMenuBeltElement_default_instance_;
}  // namespace HmiWidget
static ::_pb::Metadata file_level_metadata_HmiWidget_2eproto[119];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_HmiWidget_2eproto[12];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_HmiWidget_2eproto = nullptr;

const uint32_t TableStruct_HmiWidget_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeParam, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeParam, _impl_.node_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeParam, _impl_.transform_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeParam, _impl_.uniform_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeParam, _impl_.renderlayerproperties_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeParam, _impl_.nodeproperties_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeParam, _impl_.cameranodeproperties_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeParam, _impl_.textnodeproperties_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeParam, _impl_.useimport_),
  0,
  1,
  2,
  ~0u,
  3,
  4,
  5,
  6,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUniform, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUniform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUniform, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUniform, _impl_.value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeTransform, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeTransform, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeTransform, _impl_.scale_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeTransform, _impl_.rotation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeTransform, _impl_.translation_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRenderLayerProperties, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRenderLayerProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRenderLayerProperties, _impl_.renderpassenabled_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRenderLayerProperties, _impl_.rendertargetscale_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRenderLayerProperties, _impl_.boundingboxrootname_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRenderLayerProperties, _impl_.bordersize_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TRenderPassName, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TRenderPassName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TRenderPassName, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TRenderPassName, _impl_.enabled_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingBox, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingBox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingBox, _impl_.minbound_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingBox, _impl_.maxbound_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingSphere, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingSphere, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingSphere, _impl_.centerposition_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingSphere, _impl_.radius_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TBoundingVolume, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TBoundingVolume, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TBoundingVolume, _impl_.boundingbox_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties_TBoundingVolume, _impl_.boundingsphere_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _impl_.visible_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _impl_.renderorderrank_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _impl_.childsortorderrank_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _impl_.scopemask_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _impl_.renderorderbin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _impl_.material_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _impl_.renderpassname_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _impl_.renderpassenabled_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _impl_.renderpassnameext_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _impl_.boundingvolume_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TNodeProperties, _impl_.renderpassenabledext_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  ~0u,
  8,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTextNodeProperties, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTextNodeProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTextNodeProperties, _impl_.textcontent_),
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _impl_.projectiontype_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _impl_.horizontalfov_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _impl_.aspectratio_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _impl_.horizontalfocallength_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _impl_.viewport_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _impl_.nearplane_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _impl_.farplane_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _impl_.rightplane_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _impl_.leftplane_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _impl_.topplane_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCameraNodeProperties, _impl_.bottomplane_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TResourceParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TResourceParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TResourceParam, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TResourceParam, _impl_.resource_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TResourceParam, _impl_.appearance_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TResourceParam, _impl_.renderpass_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TResourceParam, _impl_.blitpass_),
  0,
  1,
  2,
  3,
  4,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TAppearanceParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TAppearanceParam, _impl_.uniform_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRenderPassParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRenderPassParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRenderPassParam, _impl_.enabled_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRenderPassParam, _impl_.renderorderrank_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRenderPassParam, _impl_.viewportoffset_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRenderPassParam, _impl_.viewportsize_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TBlitPassParam, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TBlitPassParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TBlitPassParam, _impl_.enabled_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TBlitPassParam, _impl_.renderorderrank_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TDataChangeTrigger, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TDataChangeTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TDataChangeTrigger, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TDataChangeTrigger, _impl_.command_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TConditionalTrigger, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TConditionalTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TConditionalTrigger, _impl_.condition_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TConditionalTrigger, _impl_.command_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TConditionalTrigger, _impl_.elsecommand_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TConditionalTrigger, _impl_.execmode_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TConditionalTrigger, _impl_.elsecommandonfallbackonly_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTrigger, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTrigger, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTrigger, _impl_.category_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTrigger, _impl_.datachangetrigger_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTrigger, _impl_.conditionaltrigger_),
  0,
  3,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TPolyLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TPolyLine, _impl_.point_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TPolyLine, _impl_.pointbinding_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.receivedirectinput_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.receivegesture_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.receivegesturepad_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.receivegesturescreen_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.ignoretouch_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.touchscreentargetdomain_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.touchcontrollertargetdomain_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.significantmovementoverwrite_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.passtouch_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.alwaystouch_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.touchvolumesource_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.touchvolumechildidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.defaulttouchhandled_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.ignorecontroller_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.ignorefocusontouch_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.touchareapolygon_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInputConfig, _impl_.blocktouchtoparents_),
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  10,
  11,
  8,
  2,
  3,
  9,
  ~0u,
  4,
  5,
  6,
  0,
  7,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.useimport_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.child_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.externalmodelvalue_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.internalmodelvalue_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.nodeparam_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.slot_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.layout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.script_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.triggeredslot_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.compositeanimation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.trigger_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.forwardsignals_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.input_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.curve_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.requestlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.defaultchildmodelbindings_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.addmodelbindingstochild_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.resourceparam_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.modelbinding_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.uniform_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.transform_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.renderlayerproperties_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.nodeproperties_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.cameranodeproperties_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TImportDefinition, _impl_.widgetanimation_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  1,
  2,
  ~0u,
  3,
  4,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  5,
  6,
  7,
  8,
  9,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TDefaultChildModelBindings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TDefaultChildModelBindings, _impl_.modelbinding_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TDefaultChildModelBindings, _impl_.useimport_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TAddModelBindingsToChild, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TAddModelBindingsToChild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TAddModelBindingsToChild, _impl_.childidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TAddModelBindingsToChild, _impl_.modelbinding_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TAddModelBindingsToChild, _impl_.autobindallexternals_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TAddModelBindingsToChild, _impl_.exemptedexternalkey_),
  0,
  ~0u,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget_TPrototypeAsset, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget_TPrototypeAsset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget_TPrototypeAsset, _impl_.resourceid_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget_TPrototypeAsset, _impl_.assetidlegacy_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget_TPrototypeAsset, _impl_.resourceidnumericlegacy_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget_TPrototypeAsset, _impl_.resourceidnumeric_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget_TPrototypeAsset, _impl_.binding_),
  0,
  1,
  4,
  3,
  2,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.prototype_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.prototypeasset_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.prototypelevelselection_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.child_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.externalmodelvalue_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.internalmodelvalue_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.nodeparam_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.resourceparam_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.slot_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.layout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.script_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.triggeredslot_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.compositeanimation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.trigger_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.useimport_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.defaultchildmodelbindings_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.input_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.forwardsignals_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.curve_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.requestlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidget, _impl_.addmodelbindingstochild_),
  0,
  1,
  2,
  7,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  3,
  4,
  5,
  ~0u,
  6,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetCollection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetCollection, _impl_.widget_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetCollection, _impl_.importdefinition_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildWidget, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildWidget, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildWidget, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildWidget, _impl_.widgettype_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildWidget, _impl_.widgetlevelselection_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildWidget, _impl_.modelbinding_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildWidget, _impl_.useimport_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildWidget, _impl_.forwardsignals_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildWidget, _impl_.input_),
  0,
  1,
  4,
  ~0u,
  ~0u,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildModelParameter, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildModelParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildModelParameter, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TChildModelParameter, _impl_.binding_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TExternalModelParameter, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TExternalModelParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TExternalModelParameter, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TExternalModelParameter, _impl_.variant_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TExternalModelParameter, _impl_.binding_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInternalModelParameter, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInternalModelParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInternalModelParameter, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TInternalModelParameter, _impl_.binding_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSlot, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSlot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSlot, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSlot, _impl_.command_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.assignment_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.valueassignment_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.signal_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.animationtrigger_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.multicommand_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.requestlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.debugoutput_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.widgetdataobjectsetvalue_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.widgetdataobjectcreateprovider_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.widgetdataobjectcreateconsumer_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.updatedcsmmetadata_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.signalparametervaluesextractor_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCommand, _impl_.condition_),
  0,
  1,
  2,
  3,
  4,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  5,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TMultiCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TMultiCommand, _impl_.command_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TParameterAssignment, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TParameterAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TParameterAssignment, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TParameterAssignment, _impl_.binding_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TParameterAssignment, _impl_.target_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TParameterAssignment, _impl_.targettype_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TParameterValueAssignment, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TParameterValueAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TParameterValueAssignment, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TParameterValueAssignment, _impl_.binding_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TParameterValueAssignment, _impl_.target_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TParameterValueAssignment, _impl_.targettype_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignalParameterValuesExtractor_TAssignment, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignalParameterValuesExtractor_TAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignalParameterValuesExtractor_TAssignment, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignalParameterValuesExtractor_TAssignment, _impl_.parameterkey_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignalParameterValuesExtractor_TAssignment, _impl_.target_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignalParameterValuesExtractor_TAssignment, _impl_.targettype_),
  0,
  1,
  2,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignalParameterValuesExtractor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignalParameterValuesExtractor, _impl_.assignment_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignal, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignal, _impl_.signalid_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignal, _impl_.targetchildid_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignal, _impl_.parameter_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignal, _impl_.target_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TSignal, _impl_.targetlevel_),
  0,
  1,
  ~0u,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRequestLayout, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRequestLayout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRequestLayout, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TRequestLayout, _impl_.binding_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TDebugOutputCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TDebugOutputCommand, _impl_.binding_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetDataObjectSetValue, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetDataObjectSetValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetDataObjectSetValue, _impl_.dataobject_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetDataObjectSetValue, _impl_.value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetDataObjectCreateProvider, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetDataObjectCreateProvider, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetDataObjectCreateProvider, _impl_.dataobject_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetDataObjectCreateProvider, _impl_.providerid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetDataObjectCreateConsumer, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetDataObjectCreateConsumer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetDataObjectCreateConsumer, _impl_.dataobject_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetDataObjectCreateConsumer, _impl_.consumerid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUpdateDcsmMetadataCommand, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUpdateDcsmMetadataCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUpdateDcsmMetadataCommand, _impl_.contentid_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUpdateDcsmMetadataCommand, _impl_.vehiclevisible_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUpdateDcsmMetadataCommand, _impl_.vehiclemodelid_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUpdateDcsmMetadataCommand, _impl_.camerapitch_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUpdateDcsmMetadataCommand, _impl_.camerayaw_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUpdateDcsmMetadataCommand, _impl_.camerafovh_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUpdateDcsmMetadataCommand, _impl_.cameradistance_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUpdateDcsmMetadataCommand, _impl_.cameraorigin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUpdateDcsmMetadataCommand, _impl_.cameranearplane_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TUpdateDcsmMetadataCommand, _impl_.camerafarplane_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TAnimationTrigger, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TAnimationTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TAnimationTrigger, _impl_.animation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TAnimationTrigger, _impl_.action_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScriptReference, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScriptReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScriptReference, _impl_.scriptreference_),
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCurveReference, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCurveReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCurveReference, _impl_.curvereference_),
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScript, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScript, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScript, _impl_.scriptidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScript, _impl_.functionname_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScript, _impl_.parameter_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScript, _impl_.passiveparameter_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScript, _impl_.returnvalue_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScriptReturnValue, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScriptReturnValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScriptReturnValue, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TScriptReturnValue, _impl_.value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTriggeredSlot, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTriggeredSlot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTriggeredSlot, _impl_.signal_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TTriggeredSlot, _impl_.slot_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TForwardSignals, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TForwardSignals, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TForwardSignals, _impl_.signalid_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TForwardSignals, _impl_.target_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCurve, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCurve, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCurve, _impl_.curveidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCurve, _impl_.sampleposition_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCurve, _impl_.curvedefinition_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_.startvalue_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_.startbinding_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_.endvalue_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_.endbinding_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_.durationvalue_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_.durationbinding_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_.keyframesequence_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_.interpolator_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_.returntype_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_.loopcount_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_.updateinterval_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TWidgetAnimation, _impl_.updatebehaviour_),
  0,
  1,
  2,
  3,
  6,
  4,
  5,
  7,
  8,
  9,
  10,
  11,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationElement, _impl_.animationtype_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationElement, _impl_.bindtoreturnvalue_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationElement, _impl_.isstartupanimation_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationTrigger, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationTrigger, _impl_.source_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationTrigger, _impl_.signal_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationTrigger, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationTrigger, _impl_.widgetcommand_),
  0,
  2,
  3,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationSubAnimationList, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationSubAnimationList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationSubAnimationList, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationSubAnimationList, _impl_.widgetanimation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationSubAnimationList, _impl_.useimport_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationSubAnimationList, _impl_.trigger_),
  0,
  1,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationReturnValue, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationReturnValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationReturnValue, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationReturnValue, _impl_.animation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationReturnValue, _impl_.returntype_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimationReturnValue, _impl_.defaultvalue_),
  0,
  ~0u,
  2,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimation, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimation, _impl_.compositeidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TCompositeAnimation, _impl_.returnvalue_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.staticlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.horizontallayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.verticallayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.horizontaldynamiclayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.verticaldynamiclayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.scenegraphlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.scenegraphprojectlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.circlelayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.horizontallistlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.verticallistlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.verticalrolllayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.verticalcurvedlistlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.gridlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.matrixlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.horizontalpageslayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.menubeltlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.matrixdynamiclayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.triggeredslot_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.visibility_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayout, _impl_.useimport_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  13,
  7,
  8,
  9,
  10,
  14,
  11,
  12,
  15,
  16,
  17,
  ~0u,
  18,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticBase, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticBase, _impl_.leftmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticBase, _impl_.rightmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticBase, _impl_.topmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticBase, _impl_.bottommargin_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStatic_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStatic_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStatic_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStatic_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStatic, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStatic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStatic, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStatic, _impl_.elementtemplate_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStatic, _impl_.base_),
  ~0u,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticElement, _impl_.childidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticElement, _impl_.nestedlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticElement, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticElement, _impl_.rotation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticElement, _impl_.position_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticElement, _impl_.alignment_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutStaticElement, _impl_.sizepolicy_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontal_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontal_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontal_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontal_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontal, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontal, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontal, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontal, _impl_.elementtemplate_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVertical_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVertical_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVertical_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVertical_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVertical, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVertical, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVertical, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVertical, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVertical, _impl_.elementtemplate_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalDynamic_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalDynamic_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalDynamic_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalDynamic_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalDynamic, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalDynamic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalDynamic, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalDynamic, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalDynamic, _impl_.elementtemplate_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalDynamic_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalDynamic_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalDynamic_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalDynamic_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalDynamic, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalDynamic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalDynamic, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalDynamic, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalDynamic, _impl_.elementtemplate_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalList_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalList_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalList_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalList_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalList, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalList, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalList, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalList, _impl_.elementtemplate_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalList_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalList_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalList_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalList_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalList, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalList, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalList, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalList, _impl_.elementtemplate_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalCurvedList_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalCurvedList_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalCurvedList_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalCurvedList_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalCurvedList, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalCurvedList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalCurvedList, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalCurvedList, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalCurvedList, _impl_.elementtemplate_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalRoll_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalRoll_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalRoll_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalRoll_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalRoll, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalRoll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalRoll, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalRoll, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalRoll, _impl_.elementtemplate_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalPages_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalPages_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalPages_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalPages_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalPages, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalPages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalPages, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalPages, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalPages, _impl_.elementtemplate_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalPages, _impl_.pagesize_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalPages, _impl_.pagespacing_),
  0,
  ~0u,
  ~0u,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVBase, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVBase, _impl_.orientation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVBase, _impl_.leftmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVBase, _impl_.rightmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVBase, _impl_.topmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVBase, _impl_.bottommargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVBase, _impl_.spacing_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVBase, _impl_.raster_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVRollBase, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVRollBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVRollBase, _impl_.orientation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVRollBase, _impl_.leftmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVRollBase, _impl_.rightmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVRollBase, _impl_.topmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVRollBase, _impl_.bottommargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVRollBase, _impl_.spacing_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVRollBase, _impl_.raster_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVRollBase, _impl_.focusedchild_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHVRollBase, _impl_.wraparound_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _impl_.radius_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _impl_.origin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _impl_.orientation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _impl_.leftmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _impl_.rightmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _impl_.topmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _impl_.bottommargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _impl_.spacing_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _impl_.raster_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _impl_.originalignment_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCurvedHVBase, _impl_.scrollareaheight_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalElement, _impl_.base_),
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalElement, _impl_.base_),
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVBaseElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVBaseElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVBaseElement, _impl_.childidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVBaseElement, _impl_.nestedlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVBaseElement, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVBaseElement, _impl_.stretchfactor_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVBaseElement, _impl_.sizepolicy_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVBaseElement, _impl_.alignment_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalDynamicElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalDynamicElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalDynamicElement, _impl_.base_),
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalDynamicElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalDynamicElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalDynamicElement, _impl_.base_),
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVDynamicBaseElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVDynamicBaseElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVDynamicBaseElement, _impl_.childidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVDynamicBaseElement, _impl_.nestedlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVDynamicBaseElement, _impl_.sizemin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVDynamicBaseElement, _impl_.sizemax_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVDynamicBaseElement, _impl_.priority_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVDynamicBaseElement, _impl_.sizepolicy_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVDynamicBaseElement, _impl_.alignment_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalListElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalListElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutHorizontalListElement, _impl_.base_),
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalListElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalListElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutVerticalListElement, _impl_.base_),
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVListBaseElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVListBaseElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVListBaseElement, _impl_.childidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVListBaseElement, _impl_.nestedlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVListBaseElement, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVListBaseElement, _impl_.sizemin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVListBaseElement, _impl_.sizepolicy_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::THVListBaseElement, _impl_.alignment_),
  0,
  1,
  2,
  5,
  4,
  3,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraph_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraph_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraph_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraph_TTemplate, _impl_.element_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraph, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraph, _impl_.elementtemplate_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphElement, _impl_.childidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphElement, _impl_.nestedlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphElement, _impl_.rootnodename_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphElement, _impl_.searchroot_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphElement, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphElement, _impl_.rotation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphElement, _impl_.position_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphElement, _impl_.alignment_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphElement, _impl_.sizepolicy_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProject, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProject, _impl_.searchroot_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProject, _impl_.element_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProjectElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProjectElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProjectElement, _impl_.childidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProjectElement, _impl_.nestedlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProjectElement, _impl_.nodename_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProjectElement, _impl_.offset_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProjectElement, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProjectElement, _impl_.rotation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProjectElement, _impl_.position_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProjectElement, _impl_.alignment_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutSceneGraphProjectElement, _impl_.sizepolicy_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircle_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircle_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircle_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircle_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircle, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircle, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircle, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircle, _impl_.elementtemplate_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBase, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBase, _impl_.orientation_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBase, _impl_.leftmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBase, _impl_.rightmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBase, _impl_.topmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBase, _impl_.bottommargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBase, _impl_.spacing_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBase, _impl_.startangle_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBase, _impl_.endangle_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBase, _impl_.radius_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleElement, _impl_.base_),
  0,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBaseElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBaseElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBaseElement, _impl_.childidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBaseElement, _impl_.nestedlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBaseElement, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBaseElement, _impl_.stretchfactor_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBaseElement, _impl_.sizepolicy_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutCircleBaseElement, _impl_.alignment_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGrid_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGrid_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGrid_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGrid_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGrid, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGrid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGrid, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGrid, _impl_.numberofrows_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGrid, _impl_.numberofcolumns_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGrid, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGrid, _impl_.elementtemplate_),
  0,
  1,
  2,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridBase, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridBase, _impl_.leftmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridBase, _impl_.rightmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridBase, _impl_.topmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridBase, _impl_.bottommargin_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridElement, _impl_.childidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridElement, _impl_.nestedlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridElement, _impl_.row_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridElement, _impl_.column_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridElement, _impl_.rowspan_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutGridElement, _impl_.columnspan_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrix_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrix_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrix_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrix_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrix, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrix, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrix, _impl_.cellsize_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrix, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrix, _impl_.elementtemplate_),
  0,
  1,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixBase, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixBase, _impl_.leftmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixBase, _impl_.rightmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixBase, _impl_.topmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixBase, _impl_.bottommargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixBase, _impl_.orientationx_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixBase, _impl_.orientationy_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixBase, _impl_.spacing_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixElement, _impl_.childidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixElement, _impl_.nestedlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixElement, _impl_.alignment_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamic_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamic_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamic_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamic_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamic, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamic, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamic, _impl_.defaultcellsize_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamic, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamic, _impl_.elementtemplate_),
  0,
  1,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicBase, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicBase, _impl_.leftmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicBase, _impl_.rightmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicBase, _impl_.topmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicBase, _impl_.bottommargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicBase, _impl_.orientationx_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicBase, _impl_.orientationy_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicBase, _impl_.spacing_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicElement, _impl_.childidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicElement, _impl_.nestedlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicElement, _impl_.alignment_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicElement, _impl_.sizepolicy_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicElement, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMatrixDynamicElement, _impl_.stretchfactor_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBelt_TTemplate, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBelt_TTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBelt_TTemplate, _impl_.identifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBelt_TTemplate, _impl_.element_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBelt, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBelt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBelt, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBelt, _impl_.element_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBelt, _impl_.elementtemplate_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltBase, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltBase, _impl_.leftmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltBase, _impl_.rightmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltBase, _impl_.topmargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltBase, _impl_.bottommargin_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltBase, _impl_.pagesize_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltBase, _impl_.pageblocksize_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltBase, _impl_.elementshift_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltBase, _impl_.pagespacing_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltBase, _impl_.verticalspacing_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltElement, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltElement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltElement, _impl_.childidentifier_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltElement, _impl_.nestedlayout_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltElement, _impl_.size_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltElement, _impl_.sizepolicy_),
  PROTOBUF_FIELD_OFFSET(::HmiWidget::TLayoutMenuBeltElement, _impl_.alignment_),
  0,
  1,
  2,
  3,
  4,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, -1, sizeof(::HmiWidget::TNodeParam)},
  { 24, 32, -1, sizeof(::HmiWidget::TUniform)},
  { 34, 43, -1, sizeof(::HmiWidget::TNodeTransform)},
  { 46, 56, -1, sizeof(::HmiWidget::TRenderLayerProperties)},
  { 60, 68, -1, sizeof(::HmiWidget::TNodeProperties_TRenderPassName)},
  { 70, 78, -1, sizeof(::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingBox)},
  { 80, 88, -1, sizeof(::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingSphere)},
  { 90, 98, -1, sizeof(::HmiWidget::TNodeProperties_TBoundingVolume)},
  { 100, 117, -1, sizeof(::HmiWidget::TNodeProperties)},
  { 128, 135, -1, sizeof(::HmiWidget::TTextNodeProperties)},
  { 136, 153, -1, sizeof(::HmiWidget::TCameraNodeProperties)},
  { 164, 175, -1, sizeof(::HmiWidget::TResourceParam)},
  { 180, -1, -1, sizeof(::HmiWidget::TAppearanceParam)},
  { 187, 197, -1, sizeof(::HmiWidget::TRenderPassParam)},
  { 201, 209, -1, sizeof(::HmiWidget::TBlitPassParam)},
  { 211, 219, -1, sizeof(::HmiWidget::TDataChangeTrigger)},
  { 221, 232, -1, sizeof(::HmiWidget::TConditionalTrigger)},
  { 237, 247, -1, sizeof(::HmiWidget::TTrigger)},
  { 251, -1, -1, sizeof(::HmiWidget::TPolyLine)},
  { 259, 282, -1, sizeof(::HmiWidget::TInputConfig)},
  { 299, 331, -1, sizeof(::HmiWidget::TImportDefinition)},
  { 357, -1, -1, sizeof(::HmiWidget::TDefaultChildModelBindings)},
  { 365, 375, -1, sizeof(::HmiWidget::TAddModelBindingsToChild)},
  { 379, 390, -1, sizeof(::HmiWidget::TWidget_TPrototypeAsset)},
  { 395, 423, -1, sizeof(::HmiWidget::TWidget)},
  { 445, -1, -1, sizeof(::HmiWidget::TWidgetCollection)},
  { 453, 466, -1, sizeof(::HmiWidget::TChildWidget)},
  { 473, 481, -1, sizeof(::HmiWidget::TChildModelParameter)},
  { 483, 492, -1, sizeof(::HmiWidget::TExternalModelParameter)},
  { 495, 503, -1, sizeof(::HmiWidget::TInternalModelParameter)},
  { 505, 513, -1, sizeof(::HmiWidget::TSlot)},
  { 515, 534, -1, sizeof(::HmiWidget::TCommand)},
  { 547, -1, -1, sizeof(::HmiWidget::TMultiCommand)},
  { 554, 564, -1, sizeof(::HmiWidget::TParameterAssignment)},
  { 568, 578, -1, sizeof(::HmiWidget::TParameterValueAssignment)},
  { 582, 592, -1, sizeof(::HmiWidget::TSignalParameterValuesExtractor_TAssignment)},
  { 596, -1, -1, sizeof(::HmiWidget::TSignalParameterValuesExtractor)},
  { 603, 614, -1, sizeof(::HmiWidget::TSignal)},
  { 619, 627, -1, sizeof(::HmiWidget::TRequestLayout)},
  { 629, -1, -1, sizeof(::HmiWidget::TDebugOutputCommand)},
  { 636, 644, -1, sizeof(::HmiWidget::TWidgetDataObjectSetValue)},
  { 646, 654, -1, sizeof(::HmiWidget::TWidgetDataObjectCreateProvider)},
  { 656, 664, -1, sizeof(::HmiWidget::TWidgetDataObjectCreateConsumer)},
  { 666, 682, -1, sizeof(::HmiWidget::TUpdateDcsmMetadataCommand)},
  { 692, 700, -1, sizeof(::HmiWidget::TAnimationTrigger)},
  { 702, 709, -1, sizeof(::HmiWidget::TScriptReference)},
  { 710, 717, -1, sizeof(::HmiWidget::TCurveReference)},
  { 718, 729, -1, sizeof(::HmiWidget::TScript)},
  { 734, 742, -1, sizeof(::HmiWidget::TScriptReturnValue)},
  { 744, 752, -1, sizeof(::HmiWidget::TTriggeredSlot)},
  { 754, 762, -1, sizeof(::HmiWidget::TForwardSignals)},
  { 764, 773, -1, sizeof(::HmiWidget::TCurve)},
  { 776, 794, -1, sizeof(::HmiWidget::TWidgetAnimation)},
  { 806, 815, -1, sizeof(::HmiWidget::TCompositeAnimationElement)},
  { 818, 828, -1, sizeof(::HmiWidget::TCompositeAnimationTrigger)},
  { 832, 842, -1, sizeof(::HmiWidget::TCompositeAnimationSubAnimationList)},
  { 846, 856, -1, sizeof(::HmiWidget::TCompositeAnimationReturnValue)},
  { 860, 868, -1, sizeof(::HmiWidget::TCompositeAnimation)},
  { 870, 897, -1, sizeof(::HmiWidget::TLayout)},
  { 918, 928, -1, sizeof(::HmiWidget::TLayoutStaticBase)},
  { 932, 940, -1, sizeof(::HmiWidget::TLayoutStatic_TTemplate)},
  { 942, 951, -1, sizeof(::HmiWidget::TLayoutStatic)},
  { 954, 967, -1, sizeof(::HmiWidget::TLayoutStaticElement)},
  { 974, 982, -1, sizeof(::HmiWidget::TLayoutHorizontal_TTemplate)},
  { 984, 993, -1, sizeof(::HmiWidget::TLayoutHorizontal)},
  { 996, 1004, -1, sizeof(::HmiWidget::TLayoutVertical_TTemplate)},
  { 1006, 1015, -1, sizeof(::HmiWidget::TLayoutVertical)},
  { 1018, 1026, -1, sizeof(::HmiWidget::TLayoutHorizontalDynamic_TTemplate)},
  { 1028, 1037, -1, sizeof(::HmiWidget::TLayoutHorizontalDynamic)},
  { 1040, 1048, -1, sizeof(::HmiWidget::TLayoutVerticalDynamic_TTemplate)},
  { 1050, 1059, -1, sizeof(::HmiWidget::TLayoutVerticalDynamic)},
  { 1062, 1070, -1, sizeof(::HmiWidget::TLayoutHorizontalList_TTemplate)},
  { 1072, 1081, -1, sizeof(::HmiWidget::TLayoutHorizontalList)},
  { 1084, 1092, -1, sizeof(::HmiWidget::TLayoutVerticalList_TTemplate)},
  { 1094, 1103, -1, sizeof(::HmiWidget::TLayoutVerticalList)},
  { 1106, 1114, -1, sizeof(::HmiWidget::TLayoutVerticalCurvedList_TTemplate)},
  { 1116, 1125, -1, sizeof(::HmiWidget::TLayoutVerticalCurvedList)},
  { 1128, 1136, -1, sizeof(::HmiWidget::TLayoutVerticalRoll_TTemplate)},
  { 1138, 1147, -1, sizeof(::HmiWidget::TLayoutVerticalRoll)},
  { 1150, 1158, -1, sizeof(::HmiWidget::TLayoutHorizontalPages_TTemplate)},
  { 1160, 1171, -1, sizeof(::HmiWidget::TLayoutHorizontalPages)},
  { 1176, 1189, -1, sizeof(::HmiWidget::TLayoutHVBase)},
  { 1196, 1211, -1, sizeof(::HmiWidget::TLayoutHVRollBase)},
  { 1220, 1237, -1, sizeof(::HmiWidget::TLayoutCurvedHVBase)},
  { 1248, 1255, -1, sizeof(::HmiWidget::TLayoutHorizontalElement)},
  { 1256, 1263, -1, sizeof(::HmiWidget::TLayoutVerticalElement)},
  { 1264, 1276, -1, sizeof(::HmiWidget::THVBaseElement)},
  { 1282, 1289, -1, sizeof(::HmiWidget::TLayoutHorizontalDynamicElement)},
  { 1290, 1297, -1, sizeof(::HmiWidget::TLayoutVerticalDynamicElement)},
  { 1298, 1311, -1, sizeof(::HmiWidget::THVDynamicBaseElement)},
  { 1318, 1325, -1, sizeof(::HmiWidget::TLayoutHorizontalListElement)},
  { 1326, 1333, -1, sizeof(::HmiWidget::TLayoutVerticalListElement)},
  { 1334, 1346, -1, sizeof(::HmiWidget::THVListBaseElement)},
  { 1352, 1360, -1, sizeof(::HmiWidget::TLayoutSceneGraph_TTemplate)},
  { 1362, -1, -1, sizeof(::HmiWidget::TLayoutSceneGraph)},
  { 1370, 1385, -1, sizeof(::HmiWidget::TLayoutSceneGraphElement)},
  { 1394, 1402, -1, sizeof(::HmiWidget::TLayoutSceneGraphProject)},
  { 1404, 1419, -1, sizeof(::HmiWidget::TLayoutSceneGraphProjectElement)},
  { 1428, 1436, -1, sizeof(::HmiWidget::TLayoutCircle_TTemplate)},
  { 1438, 1447, -1, sizeof(::HmiWidget::TLayoutCircle)},
  { 1450, 1465, -1, sizeof(::HmiWidget::TLayoutCircleBase)},
  { 1474, 1481, -1, sizeof(::HmiWidget::TLayoutCircleElement)},
  { 1482, 1494, -1, sizeof(::HmiWidget::TLayoutCircleBaseElement)},
  { 1500, 1508, -1, sizeof(::HmiWidget::TLayoutGrid_TTemplate)},
  { 1510, 1521, -1, sizeof(::HmiWidget::TLayoutGrid)},
  { 1526, 1536, -1, sizeof(::HmiWidget::TLayoutGridBase)},
  { 1540, 1552, -1, sizeof(::HmiWidget::TLayoutGridElement)},
  { 1558, 1566, -1, sizeof(::HmiWidget::TLayoutMatrix_TTemplate)},
  { 1568, 1578, -1, sizeof(::HmiWidget::TLayoutMatrix)},
  { 1582, 1595, -1, sizeof(::HmiWidget::TLayoutMatrixBase)},
  { 1602, 1611, -1, sizeof(::HmiWidget::TLayoutMatrixElement)},
  { 1614, 1622, -1, sizeof(::HmiWidget::TLayoutMatrixDynamic_TTemplate)},
  { 1624, 1634, -1, sizeof(::HmiWidget::TLayoutMatrixDynamic)},
  { 1638, 1651, -1, sizeof(::HmiWidget::TLayoutMatrixDynamicBase)},
  { 1658, 1670, -1, sizeof(::HmiWidget::TLayoutMatrixDynamicElement)},
  { 1676, 1684, -1, sizeof(::HmiWidget::TLayoutMenuBelt_TTemplate)},
  { 1686, 1695, -1, sizeof(::HmiWidget::TLayoutMenuBelt)},
  { 1698, 1713, -1, sizeof(::HmiWidget::TLayoutMenuBeltBase)},
  { 1722, 1733, -1, sizeof(::HmiWidget::TLayoutMenuBeltElement)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::HmiWidget::_TNodeParam_default_instance_._instance,
  &::HmiWidget::_TUniform_default_instance_._instance,
  &::HmiWidget::_TNodeTransform_default_instance_._instance,
  &::HmiWidget::_TRenderLayerProperties_default_instance_._instance,
  &::HmiWidget::_TNodeProperties_TRenderPassName_default_instance_._instance,
  &::HmiWidget::_TNodeProperties_TBoundingVolume_TBoundingBox_default_instance_._instance,
  &::HmiWidget::_TNodeProperties_TBoundingVolume_TBoundingSphere_default_instance_._instance,
  &::HmiWidget::_TNodeProperties_TBoundingVolume_default_instance_._instance,
  &::HmiWidget::_TNodeProperties_default_instance_._instance,
  &::HmiWidget::_TTextNodeProperties_default_instance_._instance,
  &::HmiWidget::_TCameraNodeProperties_default_instance_._instance,
  &::HmiWidget::_TResourceParam_default_instance_._instance,
  &::HmiWidget::_TAppearanceParam_default_instance_._instance,
  &::HmiWidget::_TRenderPassParam_default_instance_._instance,
  &::HmiWidget::_TBlitPassParam_default_instance_._instance,
  &::HmiWidget::_TDataChangeTrigger_default_instance_._instance,
  &::HmiWidget::_TConditionalTrigger_default_instance_._instance,
  &::HmiWidget::_TTrigger_default_instance_._instance,
  &::HmiWidget::_TPolyLine_default_instance_._instance,
  &::HmiWidget::_TInputConfig_default_instance_._instance,
  &::HmiWidget::_TImportDefinition_default_instance_._instance,
  &::HmiWidget::_TDefaultChildModelBindings_default_instance_._instance,
  &::HmiWidget::_TAddModelBindingsToChild_default_instance_._instance,
  &::HmiWidget::_TWidget_TPrototypeAsset_default_instance_._instance,
  &::HmiWidget::_TWidget_default_instance_._instance,
  &::HmiWidget::_TWidgetCollection_default_instance_._instance,
  &::HmiWidget::_TChildWidget_default_instance_._instance,
  &::HmiWidget::_TChildModelParameter_default_instance_._instance,
  &::HmiWidget::_TExternalModelParameter_default_instance_._instance,
  &::HmiWidget::_TInternalModelParameter_default_instance_._instance,
  &::HmiWidget::_TSlot_default_instance_._instance,
  &::HmiWidget::_TCommand_default_instance_._instance,
  &::HmiWidget::_TMultiCommand_default_instance_._instance,
  &::HmiWidget::_TParameterAssignment_default_instance_._instance,
  &::HmiWidget::_TParameterValueAssignment_default_instance_._instance,
  &::HmiWidget::_TSignalParameterValuesExtractor_TAssignment_default_instance_._instance,
  &::HmiWidget::_TSignalParameterValuesExtractor_default_instance_._instance,
  &::HmiWidget::_TSignal_default_instance_._instance,
  &::HmiWidget::_TRequestLayout_default_instance_._instance,
  &::HmiWidget::_TDebugOutputCommand_default_instance_._instance,
  &::HmiWidget::_TWidgetDataObjectSetValue_default_instance_._instance,
  &::HmiWidget::_TWidgetDataObjectCreateProvider_default_instance_._instance,
  &::HmiWidget::_TWidgetDataObjectCreateConsumer_default_instance_._instance,
  &::HmiWidget::_TUpdateDcsmMetadataCommand_default_instance_._instance,
  &::HmiWidget::_TAnimationTrigger_default_instance_._instance,
  &::HmiWidget::_TScriptReference_default_instance_._instance,
  &::HmiWidget::_TCurveReference_default_instance_._instance,
  &::HmiWidget::_TScript_default_instance_._instance,
  &::HmiWidget::_TScriptReturnValue_default_instance_._instance,
  &::HmiWidget::_TTriggeredSlot_default_instance_._instance,
  &::HmiWidget::_TForwardSignals_default_instance_._instance,
  &::HmiWidget::_TCurve_default_instance_._instance,
  &::HmiWidget::_TWidgetAnimation_default_instance_._instance,
  &::HmiWidget::_TCompositeAnimationElement_default_instance_._instance,
  &::HmiWidget::_TCompositeAnimationTrigger_default_instance_._instance,
  &::HmiWidget::_TCompositeAnimationSubAnimationList_default_instance_._instance,
  &::HmiWidget::_TCompositeAnimationReturnValue_default_instance_._instance,
  &::HmiWidget::_TCompositeAnimation_default_instance_._instance,
  &::HmiWidget::_TLayout_default_instance_._instance,
  &::HmiWidget::_TLayoutStaticBase_default_instance_._instance,
  &::HmiWidget::_TLayoutStatic_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutStatic_default_instance_._instance,
  &::HmiWidget::_TLayoutStaticElement_default_instance_._instance,
  &::HmiWidget::_TLayoutHorizontal_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutHorizontal_default_instance_._instance,
  &::HmiWidget::_TLayoutVertical_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutVertical_default_instance_._instance,
  &::HmiWidget::_TLayoutHorizontalDynamic_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutHorizontalDynamic_default_instance_._instance,
  &::HmiWidget::_TLayoutVerticalDynamic_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutVerticalDynamic_default_instance_._instance,
  &::HmiWidget::_TLayoutHorizontalList_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutHorizontalList_default_instance_._instance,
  &::HmiWidget::_TLayoutVerticalList_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutVerticalList_default_instance_._instance,
  &::HmiWidget::_TLayoutVerticalCurvedList_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutVerticalCurvedList_default_instance_._instance,
  &::HmiWidget::_TLayoutVerticalRoll_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutVerticalRoll_default_instance_._instance,
  &::HmiWidget::_TLayoutHorizontalPages_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutHorizontalPages_default_instance_._instance,
  &::HmiWidget::_TLayoutHVBase_default_instance_._instance,
  &::HmiWidget::_TLayoutHVRollBase_default_instance_._instance,
  &::HmiWidget::_TLayoutCurvedHVBase_default_instance_._instance,
  &::HmiWidget::_TLayoutHorizontalElement_default_instance_._instance,
  &::HmiWidget::_TLayoutVerticalElement_default_instance_._instance,
  &::HmiWidget::_THVBaseElement_default_instance_._instance,
  &::HmiWidget::_TLayoutHorizontalDynamicElement_default_instance_._instance,
  &::HmiWidget::_TLayoutVerticalDynamicElement_default_instance_._instance,
  &::HmiWidget::_THVDynamicBaseElement_default_instance_._instance,
  &::HmiWidget::_TLayoutHorizontalListElement_default_instance_._instance,
  &::HmiWidget::_TLayoutVerticalListElement_default_instance_._instance,
  &::HmiWidget::_THVListBaseElement_default_instance_._instance,
  &::HmiWidget::_TLayoutSceneGraph_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutSceneGraph_default_instance_._instance,
  &::HmiWidget::_TLayoutSceneGraphElement_default_instance_._instance,
  &::HmiWidget::_TLayoutSceneGraphProject_default_instance_._instance,
  &::HmiWidget::_TLayoutSceneGraphProjectElement_default_instance_._instance,
  &::HmiWidget::_TLayoutCircle_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutCircle_default_instance_._instance,
  &::HmiWidget::_TLayoutCircleBase_default_instance_._instance,
  &::HmiWidget::_TLayoutCircleElement_default_instance_._instance,
  &::HmiWidget::_TLayoutCircleBaseElement_default_instance_._instance,
  &::HmiWidget::_TLayoutGrid_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutGrid_default_instance_._instance,
  &::HmiWidget::_TLayoutGridBase_default_instance_._instance,
  &::HmiWidget::_TLayoutGridElement_default_instance_._instance,
  &::HmiWidget::_TLayoutMatrix_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutMatrix_default_instance_._instance,
  &::HmiWidget::_TLayoutMatrixBase_default_instance_._instance,
  &::HmiWidget::_TLayoutMatrixElement_default_instance_._instance,
  &::HmiWidget::_TLayoutMatrixDynamic_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutMatrixDynamic_default_instance_._instance,
  &::HmiWidget::_TLayoutMatrixDynamicBase_default_instance_._instance,
  &::HmiWidget::_TLayoutMatrixDynamicElement_default_instance_._instance,
  &::HmiWidget::_TLayoutMenuBelt_TTemplate_default_instance_._instance,
  &::HmiWidget::_TLayoutMenuBelt_default_instance_._instance,
  &::HmiWidget::_TLayoutMenuBeltBase_default_instance_._instance,
  &::HmiWidget::_TLayoutMenuBeltElement_default_instance_._instance,
};

const char descriptor_table_protodef_HmiWidget_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017HmiWidget.proto\022\tHmiWidget\032\rNumeric.pr"
  "oto\032\014Common.proto\032\rHmiBase.proto\"\262\003\n\nTNo"
  "deParam\022 \n\nidentifier\030\001 \002(\0132\014.TIdentifie"
  "r\022\033\n\004node\030\002 \001(\0132\r.TDataBinding\022,\n\ttransf"
  "orm\030\003 \001(\0132\031.HmiWidget.TNodeTransform\022$\n\007"
  "uniform\030\004 \003(\0132\023.HmiWidget.TUniform\022@\n\025re"
  "nderLayerProperties\030\006 \001(\0132!.HmiWidget.TR"
  "enderLayerProperties\0222\n\016nodeProperties\030\007"
  " \001(\0132\032.HmiWidget.TNodeProperties\022>\n\024came"
  "raNodeProperties\030\010 \001(\0132 .HmiWidget.TCame"
  "raNodeProperties\022:\n\022textNodeProperties\030\t"
  " \001(\0132\036.HmiWidget.TTextNodeProperties\022\037\n\t"
  "useImport\030\005 \003(\0132\014.TIdentifier\"E\n\010TUnifor"
  "m\022\033\n\004name\030\001 \001(\0132\r.TDataBinding\022\034\n\005value\030"
  "\002 \001(\0132\r.TDataBinding\"s\n\016TNodeTransform\022\034"
  "\n\005scale\030\001 \001(\0132\r.TDataBinding\022\037\n\010rotation"
  "\030\002 \001(\0132\r.TDataBinding\022\"\n\013translation\030\003 \001"
  "(\0132\r.TDataBinding\"\273\001\n\026TRenderLayerProper"
  "ties\022(\n\021renderPassEnabled\030\001 \001(\0132\r.TDataB"
  "inding\022(\n\021renderTargetScale\030\002 \001(\0132\r.TDat"
  "aBinding\022*\n\023boundingBoxRootName\030\003 \001(\0132\r."
  "TDataBinding\022!\n\nborderSize\030\004 \001(\0132\r.TData"
  "Binding\"\321\007\n\017TNodeProperties\022\036\n\007visible\030\001"
  " \001(\0132\r.TDataBinding\022&\n\017renderOrderRank\030\002"
  " \001(\0132\r.TDataBinding\022)\n\022childSortOrderRan"
  "k\030\003 \001(\0132\r.TDataBinding\022$\n\tscopeMask\030\004 \001("
  "\0132\r.TDataBindingB\002\030\001\022%\n\016renderOrderBin\030\005"
  " \001(\0132\r.TDataBinding\022\037\n\010material\030\006 \001(\0132\r."
  "TDataBinding\022)\n\016renderPassName\030\007 \001(\0132\r.T"
  "DataBindingB\002\030\001\022,\n\021renderPassEnabled\030\010 \001"
  "(\0132\r.TDataBindingB\002\030\001\022E\n\021renderPassNameE"
  "XT\030\t \003(\0132*.HmiWidget.TNodeProperties.TRe"
  "nderPassName\022B\n\016boundingVolume\030\n \001(\0132*.H"
  "miWidget.TNodeProperties.TBoundingVolume"
  "\022H\n\024renderPassEnabledEXT\030\013 \003(\0132*.HmiWidg"
  "et.TNodeProperties.TRenderPassName\032N\n\017TR"
  "enderPassName\022\033\n\004name\030\001 \002(\0132\r.TDataBindi"
  "ng\022\036\n\007enabled\030\002 \001(\0132\r.TDataBinding\032\336\002\n\017T"
  "BoundingVolume\022L\n\013boundingBox\030\001 \001(\01327.Hm"
  "iWidget.TNodeProperties.TBoundingVolume."
  "TBoundingBox\022R\n\016boundingSphere\030\002 \001(\0132:.H"
  "miWidget.TNodeProperties.TBoundingVolume"
  ".TBoundingSphere\032P\n\014TBoundingBox\022\037\n\010minB"
  "ound\030\001 \001(\0132\r.TDataBinding\022\037\n\010maxBound\030\002 "
  "\001(\0132\r.TDataBinding\032W\n\017TBoundingSphere\022%\n"
  "\016centerPosition\030\001 \001(\0132\r.TDataBinding\022\035\n\006"
  "radius\030\002 \001(\0132\r.TDataBinding\"9\n\023TTextNode"
  "Properties\022\"\n\013textContent\030\001 \001(\0132\r.TDataB"
  "inding\"\244\003\n\025TCameraNodeProperties\022%\n\016proj"
  "ectionType\030\001 \001(\0132\r.TDataBinding\022$\n\rhoriz"
  "ontalFOV\030\002 \001(\0132\r.TDataBinding\022\"\n\013aspectR"
  "atio\030\003 \001(\0132\r.TDataBinding\022,\n\025horizontalF"
  "ocalLength\030\004 \001(\0132\r.TDataBinding\022\037\n\010viewp"
  "ort\030\005 \001(\0132\r.TDataBinding\022 \n\tnearPlane\030\006 "
  "\001(\0132\r.TDataBinding\022\037\n\010farPlane\030\007 \001(\0132\r.T"
  "DataBinding\022!\n\nrightPlane\030\010 \001(\0132\r.TDataB"
  "inding\022 \n\tleftPlane\030\t \001(\0132\r.TDataBinding"
  "\022\037\n\010topPlane\030\n \001(\0132\r.TDataBinding\022\"\n\013bot"
  "tomPlane\030\013 \001(\0132\r.TDataBinding\"\342\001\n\016TResou"
  "rceParam\022 \n\nidentifier\030\001 \002(\0132\014.TIdentifi"
  "er\022\037\n\010resource\030\002 \001(\0132\r.TDataBinding\022/\n\na"
  "ppearance\030\003 \001(\0132\033.HmiWidget.TAppearanceP"
  "aram\022/\n\nrenderPass\030\004 \001(\0132\033.HmiWidget.TRe"
  "nderPassParam\022+\n\010blitPass\030\005 \001(\0132\031.HmiWid"
  "get.TBlitPassParam\"8\n\020TAppearanceParam\022$"
  "\n\007uniform\030\001 \003(\0132\023.HmiWidget.TUniform\"\246\001\n"
  "\020TRenderPassParam\022\036\n\007enabled\030\001 \001(\0132\r.TDa"
  "taBinding\022&\n\017renderOrderRank\030\002 \001(\0132\r.TDa"
  "taBinding\022%\n\016viewportOffset\030\003 \001(\0132\r.TDat"
  "aBinding\022#\n\014viewportSize\030\004 \001(\0132\r.TDataBi"
  "nding\"X\n\016TBlitPassParam\022\036\n\007enabled\030\001 \001(\013"
  "2\r.TDataBinding\022&\n\017renderOrderRank\030\002 \001(\013"
  "2\r.TDataBinding\"X\n\022TDataChangeTrigger\022\034\n"
  "\005value\030\001 \003(\0132\r.TDataBinding\022$\n\007command\030\002"
  " \002(\0132\023.HmiWidget.TCommand\"\332\001\n\023TCondition"
  "alTrigger\022 \n\tcondition\030\001 \002(\0132\r.TDataBind"
  "ing\022$\n\007command\030\002 \001(\0132\023.HmiWidget.TComman"
  "d\022(\n\013elseCommand\030\003 \001(\0132\023.HmiWidget.TComm"
  "and\022.\n\010execMode\030\004 \001(\0162\034.HmiWidget.TETrig"
  "gerExecMode\022!\n\031elseCommandOnFallBackOnly"
  "\030\005 \001(\010\"\322\001\n\010TTrigger\022 \n\nidentifier\030\001 \002(\0132"
  "\014.TIdentifier\022.\n\010category\030\002 \001(\0162\034.HmiWid"
  "get.TETriggerCategory\0228\n\021dataChangeTrigg"
  "er\030\003 \001(\0132\035.HmiWidget.TDataChangeTrigger\022"
  ":\n\022conditionalTrigger\030\004 \001(\0132\036.HmiWidget."
  "TConditionalTrigger\"K\n\tTPolyLine\022\031\n\005poin"
  "t\030\001 \003(\0132\n.TVector3f\022#\n\014pointBinding\030\002 \003("
  "\0132\r.TDataBinding\"\264\005\n\014TInputConfig\022\032\n\022rec"
  "eiveDirectInput\030\001 \001(\010\022\'\n\016receiveGesture\030"
  "\002 \003(\0162\017.TETouchGesture\022*\n\021receiveGesture"
  "Pad\030\010 \003(\0162\017.TETouchGesture\022-\n\024receiveGes"
  "tureScreen\030\t \003(\0162\017.TETouchGesture\022#\n\013ign"
  "oreTouch\030\003 \003(\0162\016.TETouchDevice\022\?\n\027touchS"
  "creenTargetDomain\030\004 \001(\0162\036.HmiWidget.TETo"
  "uchTargetDomain\022C\n\033touchControllerTarget"
  "Domain\030\005 \001(\0162\036.HmiWidget.TETouchTargetDo"
  "main\022$\n\034significantMovementOverwrite\030\020 \001"
  "(\005\022\021\n\tpassTouch\030\006 \001(\010\022\023\n\013alwaysTouch\030\r \001"
  "(\010\0229\n\021touchVolumeSource\030\007 \001(\0162\036.HmiWidge"
  "t.TETouchVolumeSource\0220\n\032touchVolumeChil"
  "dIdentifier\030\n \003(\0132\014.TIdentifier\022\033\n\023defau"
  "ltTouchHandled\030\013 \001(\010\022\030\n\020ignoreController"
  "\030\014 \001(\010\022\032\n\022ignoreFocusOnTouch\030\016 \001(\010\022.\n\020to"
  "uchAreaPolygon\030\017 \001(\0132\024.HmiWidget.TPolyLi"
  "ne\022\033\n\023blockTouchToParents\030\021 \001(\010\"\223\n\n\021TImp"
  "ortDefinition\022 \n\nidentifier\030\001 \001(\0132\014.TIde"
  "ntifier\022\037\n\tuseImport\030\n \003(\0132\014.TIdentifier"
  "\022&\n\005child\030\024 \003(\0132\027.HmiWidget.TChildWidget"
  "\022>\n\022externalModelValue\030\025 \003(\0132\".HmiWidget"
  ".TExternalModelParameter\022>\n\022internalMode"
  "lValue\030\026 \003(\0132\".HmiWidget.TInternalModelP"
  "arameter\022(\n\tnodeParam\030\030 \003(\0132\025.HmiWidget."
  "TNodeParam\022\036\n\004slot\030\031 \003(\0132\020.HmiWidget.TSl"
  "ot\022\"\n\006layout\030\032 \003(\0132\022.HmiWidget.TLayout\022\""
  "\n\006script\030\033 \003(\0132\022.HmiWidget.TScript\0220\n\rtr"
  "iggeredSlot\030\034 \003(\0132\031.HmiWidget.TTriggered"
  "Slot\022:\n\022compositeAnimation\030\036 \003(\0132\036.HmiWi"
  "dget.TCompositeAnimation\022$\n\007trigger\030\037 \003("
  "\0132\023.HmiWidget.TTrigger\0222\n\016forwardSignals"
  "\030  \001(\0132\032.HmiWidget.TForwardSignals\022&\n\005in"
  "put\030! \001(\0132\027.HmiWidget.TInputConfig\022 \n\005cu"
  "rve\030\" \003(\0132\021.HmiWidget.TCurve\0220\n\rrequestL"
  "ayout\030# \001(\0132\031.HmiWidget.TRequestLayout\022H"
  "\n\031defaultChildModelBindings\030$ \001(\0132%.HmiW"
  "idget.TDefaultChildModelBindings\022D\n\027addM"
  "odelBindingsToChild\030% \003(\0132#.HmiWidget.TA"
  "ddModelBindingsToChild\0220\n\rresourceParam\030"
  "& \003(\0132\031.HmiWidget.TResourceParam\0225\n\014mode"
  "lbinding\030d \003(\0132\037.HmiWidget.TChildModelPa"
  "rameter\022%\n\007uniform\030\310\001 \003(\0132\023.HmiWidget.TU"
  "niform\022-\n\ttransform\030\311\001 \001(\0132\031.HmiWidget.T"
  "NodeTransform\022A\n\025renderLayerProperties\030\312"
  "\001 \001(\0132!.HmiWidget.TRenderLayerProperties"
  "\0223\n\016nodeProperties\030\313\001 \001(\0132\032.HmiWidget.TN"
  "odeProperties\022\?\n\024cameraNodeProperties\030\314\001"
  " \001(\0132 .HmiWidget.TCameraNodeProperties\0225"
  "\n\017widgetAnimation\030\254\002 \001(\0132\033.HmiWidget.TWi"
  "dgetAnimation\"t\n\032TDefaultChildModelBindi"
  "ngs\0225\n\014modelbinding\030\001 \003(\0132\037.HmiWidget.TC"
  "hildModelParameter\022\037\n\tuseImport\030\002 \003(\0132\014."
  "TIdentifier\"\310\001\n\030TAddModelBindingsToChild"
  "\022%\n\017childIdentifier\030\001 \001(\0132\014.TIdentifier\022"
  "5\n\014modelbinding\030\002 \003(\0132\037.HmiWidget.TChild"
  "ModelParameter\022#\n\024autoBindAllExternals\030\003"
  " \001(\010:\005false\022)\n\023exemptedExternalKey\030\004 \003(\013"
  "2\014.TIdentifier\"\336\t\n\007TWidget\022\032\n\004type\030\001 \001(\013"
  "2\014.TIdentifier\022\037\n\tprototype\030\002 \001(\0132\014.TIde"
  "ntifier\022:\n\016prototypeAsset\030\006 \001(\0132\".HmiWid"
  "get.TWidget.TPrototypeAsset\022V\n\027prototype"
  "LevelSelection\030\025 \001(\0162\033.HmiWidget.TELevel"
  "Selection:\030TELevelSelection_Default\022&\n\005c"
  "hild\030\003 \003(\0132\027.HmiWidget.TChildWidget\022>\n\022e"
  "xternalModelValue\030\004 \003(\0132\".HmiWidget.TExt"
  "ernalModelParameter\022>\n\022internalModelValu"
  "e\030\005 \003(\0132\".HmiWidget.TInternalModelParame"
  "ter\022(\n\tnodeParam\030\007 \003(\0132\025.HmiWidget.TNode"
  "Param\0220\n\rresourceParam\030\027 \003(\0132\031.HmiWidget"
  ".TResourceParam\022\036\n\004slot\030\010 \003(\0132\020.HmiWidge"
  "t.TSlot\022\"\n\006layout\030\t \003(\0132\022.HmiWidget.TLay"
  "out\022\"\n\006script\030\n \003(\0132\022.HmiWidget.TScript\022"
  "0\n\rtriggeredSlot\030\013 \003(\0132\031.HmiWidget.TTrig"
  "geredSlot\022:\n\022compositeAnimation\030\014 \003(\0132\036."
  "HmiWidget.TCompositeAnimation\022$\n\007trigger"
  "\030\r \003(\0132\023.HmiWidget.TTrigger\022\037\n\tuseImport"
  "\030\016 \003(\0132\014.TIdentifier\022H\n\031defaultChildMode"
  "lBindings\030\017 \001(\0132%.HmiWidget.TDefaultChil"
  "dModelBindings\022&\n\005input\030\020 \001(\0132\027.HmiWidge"
  "t.TInputConfig\0222\n\016forwardSignals\030\022 \001(\0132\032"
  ".HmiWidget.TForwardSignals\022 \n\005curve\030\023 \003("
  "\0132\021.HmiWidget.TCurve\0220\n\rrequestLayout\030\024 "
  "\001(\0132\031.HmiWidget.TRequestLayout\022D\n\027addMod"
  "elBindingsToChild\030\026 \003(\0132#.HmiWidget.TAdd"
  "ModelBindingsToChild\032\240\001\n\017TPrototypeAsset"
  "\022\022\n\nResourceId\030\001 \001(\t\022\031\n\rAssetIdLegacy\030\002 "
  "\001(\tB\002\030\001\022#\n\027ResourceIdNumericLegacy\030\003 \001(\007"
  "B\002\030\001\022\031\n\021ResourceIdNumeric\030\005 \001(\006\022\036\n\007bindi"
  "ng\030\004 \001(\0132\r.TDataBinding\"o\n\021TWidgetCollec"
  "tion\022\"\n\006widget\030\001 \003(\0132\022.HmiWidget.TWidget"
  "\0226\n\020importDefinition\030\002 \003(\0132\034.HmiWidget.T"
  "ImportDefinition\"\333\002\n\014TChildWidget\022 \n\nide"
  "ntifier\030\001 \002(\0132\014.TIdentifier\022 \n\nwidgetTyp"
  "e\030\002 \002(\0132\014.TIdentifier\022S\n\024widgetLevelSele"
  "ction\030\007 \001(\0162\033.HmiWidget.TELevelSelection"
  ":\030TELevelSelection_Default\0225\n\014modelbindi"
  "ng\030\003 \003(\0132\037.HmiWidget.TChildModelParamete"
  "r\022\037\n\tuseImport\030\004 \003(\0132\014.TIdentifier\0222\n\016fo"
  "rwardSignals\030\005 \001(\0132\032.HmiWidget.TForwardS"
  "ignals\022&\n\005input\030\006 \001(\0132\027.HmiWidget.TInput"
  "Config\"Q\n\024TChildModelParameter\022\031\n\003key\030\001 "
  "\002(\0132\014.TIdentifier\022\036\n\007binding\030\002 \002(\0132\r.TDa"
  "taBinding\"p\n\027TExternalModelParameter\022\031\n\003"
  "key\030\001 \002(\0132\014.TIdentifier\022\032\n\007variant\030\002 \001(\013"
  "2\t.TVariant\022\036\n\007binding\030\003 \001(\0132\r.TDataBind"
  "ing\"T\n\027TInternalModelParameter\022\031\n\003key\030\001 "
  "\002(\0132\014.TIdentifier\022\036\n\007binding\030\002 \002(\0132\r.TDa"
  "taBinding\"O\n\005TSlot\022 \n\nidentifier\030\001 \002(\0132\014"
  ".TIdentifier\022$\n\007command\030\002 \003(\0132\023.HmiWidge"
  "t.TCommand\"\232\006\n\010TCommand\0223\n\nassignment\030\001 "
  "\001(\0132\037.HmiWidget.TParameterAssignment\022=\n\017"
  "valueAssignment\030\002 \001(\0132$.HmiWidget.TParam"
  "eterValueAssignment\022\"\n\006signal\030\004 \001(\0132\022.Hm"
  "iWidget.TSignal\0226\n\020animationTrigger\030\005 \001("
  "\0132\034.HmiWidget.TAnimationTrigger\022.\n\014multi"
  "Command\030\006 \001(\0132\030.HmiWidget.TMultiCommand\022"
  "0\n\rrequestLayout\030\010 \001(\0132\031.HmiWidget.TRequ"
  "estLayout\0223\n\013debugOutput\030\t \001(\0132\036.HmiWidg"
  "et.TDebugOutputCommand\022F\n\030widgetDataObje"
  "ctSetValue\030\n \001(\0132$.HmiWidget.TWidgetData"
  "ObjectSetValue\022R\n\036widgetDataObjectCreate"
  "Provider\030\013 \001(\0132*.HmiWidget.TWidgetDataOb"
  "jectCreateProvider\022R\n\036widgetDataObjectCr"
  "eateConsumer\030\014 \001(\0132*.HmiWidget.TWidgetDa"
  "taObjectCreateConsumer\022A\n\022updateDcsmMeta"
  "data\030\r \001(\0132%.HmiWidget.TUpdateDcsmMetada"
  "taCommand\022R\n\036signalParameterValuesExtrac"
  "tor\030\016 \001(\0132*.HmiWidget.TSignalParameterVa"
  "luesExtractor\022 \n\tcondition\030\007 \001(\0132\r.TData"
  "Binding\"5\n\rTMultiCommand\022$\n\007command\030\001 \003("
  "\0132\023.HmiWidget.TCommand\"\274\001\n\024TParameterAss"
  "ignment\022\031\n\003key\030\001 \002(\0132\014.TIdentifier\022\036\n\007bi"
  "nding\030\002 \002(\0132\r.TDataBinding\022\034\n\006target\030\003 \001"
  "(\0132\014.TIdentifier\022K\n\ntargetType\030\004 \001(\0162\035.H"
  "miWidget.TEAssignmentTarget:\030TEAssignmen"
  "tTarget_Local\"\301\001\n\031TParameterValueAssignm"
  "ent\022\031\n\003key\030\001 \002(\0132\014.TIdentifier\022\036\n\007bindin"
  "g\030\002 \002(\0132\r.TDataBinding\022\034\n\006target\030\003 \001(\0132\014"
  ".TIdentifier\022K\n\ntargetType\030\004 \001(\0162\035.HmiWi"
  "dget.TEAssignmentTarget:\030TEAssignmentTar"
  "get_Local\"\247\002\n\037TSignalParameterValuesExtr"
  "actor\022J\n\nassignment\030\001 \003(\01326.HmiWidget.TS"
  "ignalParameterValuesExtractor.TAssignmen"
  "t\032\267\001\n\013TAssignment\022\031\n\003key\030\001 \001(\0132\014.TIdenti"
  "fier\022\"\n\014parameterKey\030\002 \001(\0132\014.TIdentifier"
  "\022\034\n\006target\030\003 \001(\0132\014.TIdentifier\022K\n\ntarget"
  "Type\030\004 \001(\0162\035.HmiWidget.TEAssignmentTarge"
  "t:\030TEAssignmentTarget_Local\"\260\001\n\007TSignal\022"
  "\036\n\010signalId\030\001 \002(\0132\014.TIdentifier\022#\n\rtarge"
  "tChildId\030\002 \001(\0132\014.TIdentifier\022 \n\tparamete"
  "r\030\003 \003(\0132\r.TDataBinding\022)\n\006target\030\004 \001(\0162\031"
  ".HmiWidget.TESignalTarget\022\023\n\013targetLevel"
  "\030\005 \001(\r\"R\n\016TRequestLayout\022 \n\nidentifier\030\001"
  " \001(\0132\014.TIdentifier\022\036\n\007binding\030\002 \001(\0132\r.TD"
  "ataBinding\"5\n\023TDebugOutputCommand\022\036\n\007bin"
  "ding\030\001 \003(\0132\r.TDataBinding\"\\\n\031TWidgetData"
  "ObjectSetValue\022!\n\ndataObject\030\001 \001(\0132\r.TDa"
  "taBinding\022\034\n\005value\030\002 \001(\0132\r.TDataBinding\""
  "g\n\037TWidgetDataObjectCreateProvider\022!\n\nda"
  "taObject\030\001 \001(\0132\r.TDataBinding\022!\n\nprovide"
  "rId\030\002 \001(\0132\r.TDataBinding\"g\n\037TWidgetDataO"
  "bjectCreateConsumer\022!\n\ndataObject\030\001 \001(\0132"
  "\r.TDataBinding\022!\n\nconsumerId\030\002 \001(\0132\r.TDa"
  "taBinding\"\220\003\n\032TUpdateDcsmMetadataCommand"
  "\022 \n\tcontentId\030\001 \001(\0132\r.TDataBinding\022%\n\016ve"
  "hicleVisible\030\002 \001(\0132\r.TDataBinding\022%\n\016veh"
  "icleModelId\030\003 \001(\0132\r.TDataBinding\022\"\n\013came"
  "raPitch\030\004 \001(\0132\r.TDataBinding\022 \n\tcameraYa"
  "w\030\005 \001(\0132\r.TDataBinding\022!\n\ncameraFovH\030\006 \001"
  "(\0132\r.TDataBinding\022%\n\016cameraDistance\030\007 \001("
  "\0132\r.TDataBinding\022#\n\014cameraOrigin\030\010 \001(\0132\r"
  ".TDataBinding\022&\n\017cameraNearPlane\030\t \001(\0132\r"
  ".TDataBinding\022%\n\016cameraFarPlane\030\n \001(\0132\r."
  "TDataBinding\"b\n\021TAnimationTrigger\022\037\n\tani"
  "mation\030\001 \002(\0132\014.TIdentifier\022,\n\006action\030\002 \002"
  "(\0162\034.HmiWidget.TEAnimationAction\"9\n\020TScr"
  "iptReference\022%\n\017scriptReference\030\001 \002(\0132\014."
  "TIdentifier\"7\n\017TCurveReference\022$\n\016curveR"
  "eference\030\001 \002(\0132\014.TIdentifier\"\325\001\n\007TScript"
  "\022&\n\020scriptIdentifier\030\001 \002(\0132\014.TIdentifier"
  "\022#\n\014functionName\030\002 \002(\0132\r.TDataBinding\022 \n"
  "\tparameter\030\003 \003(\0132\r.TDataBinding\022\'\n\020passi"
  "veParameter\030\004 \003(\0132\r.TDataBinding\0222\n\013retu"
  "rnValue\030\005 \003(\0132\035.HmiWidget.TScriptReturnV"
  "alue\"I\n\022TScriptReturnValue\022\031\n\003key\030\001 \002(\0132"
  "\014.TIdentifier\022\030\n\005value\030\002 \002(\0132\t.TVariant\""
  "J\n\016TTriggeredSlot\022\034\n\006signal\030\001 \002(\0132\014.TIde"
  "ntifier\022\032\n\004slot\030\002 \002(\0132\014.TIdentifier\"\\\n\017T"
  "ForwardSignals\022\036\n\010signalId\030\001 \003(\0132\014.TIden"
  "tifier\022)\n\006target\030\002 \001(\0162\031.HmiWidget.TESig"
  "nalTarget\"\202\001\n\006TCurve\022%\n\017curveIdentifier\030"
  "\001 \002(\0132\014.TIdentifier\022%\n\016samplePosition\030\002 "
  "\002(\0132\r.TDataBinding\022*\n\017curveDefinition\030\003 "
  "\002(\0132\021.TCurveDefinition\"\312\003\n\020TWidgetAnimat"
  "ion\022\"\n\nstartValue\030\001 \001(\0132\016.TNumericValue\022"
  "#\n\014startBinding\030\002 \001(\0132\r.TDataBinding\022 \n\010"
  "endValue\030\003 \001(\0132\016.TNumericValue\022!\n\nendBin"
  "ding\030\004 \001(\0132\r.TDataBinding\022\025\n\rdurationVal"
  "ue\030\005 \001(\r\022&\n\017durationBinding\030\006 \001(\0132\r.TDat"
  "aBinding\022,\n\020keyFrameSequence\030\007 \001(\0132\022.TKe"
  "yFrameSequence\022.\n\014interpolator\030\010 \002(\0162\030.T"
  "EAnimationInterpolator\022\037\n\nreturnType\030\t \002"
  "(\0162\013.TEDataType\022\021\n\tloopCount\030\n \001(\005\022\026\n\016up"
  "dateInterval\030\013 \001(\005\022\?\n\017updateBehaviour\030\014 "
  "\001(\0162&.HmiWidget.TEAnimationBindingBehavi"
  "our\"\206\001\n\032TCompositeAnimationElement\022#\n\ran"
  "imationType\030\001 \002(\0132\014.TIdentifier\022\'\n\021bindT"
  "oReturnValue\030\002 \002(\0132\014.TIdentifier\022\032\n\022isSt"
  "artupAnimation\030\003 \002(\010\"\300\001\n\032TCompositeAnima"
  "tionTrigger\022\034\n\006source\030\001 \001(\0132\014.TIdentifie"
  "r\022,\n\006signal\030\002 \001(\0162\034.HmiWidget.TEAnimatio"
  "nSignal\022*\n\006action\030\003 \001(\0162\032.HmiWidget.TEAn"
  "imationSlot\022*\n\rwidgetCommand\030\004 \001(\0132\023.Hmi"
  "Widget.TCommand\"\326\001\n#TCompositeAnimationS"
  "ubAnimationList\022 \n\nidentifier\030\001 \002(\0132\014.TI"
  "dentifier\0224\n\017widgetAnimation\030\002 \001(\0132\033.Hmi"
  "Widget.TWidgetAnimation\022\037\n\tuseImport\030\003 \003"
  "(\0132\014.TIdentifier\0226\n\007trigger\030\004 \003(\0132%.HmiW"
  "idget.TCompositeAnimationTrigger\"\300\001\n\036TCo"
  "mpositeAnimationReturnValue\022\031\n\003key\030\001 \002(\013"
  "2\014.TIdentifier\022A\n\tanimation\030\002 \003(\0132..HmiW"
  "idget.TCompositeAnimationSubAnimationLis"
  "t\022\037\n\nreturnType\030\003 \002(\0162\013.TEDataType\022\037\n\014de"
  "faultValue\030\004 \001(\0132\t.TVariant\"\200\001\n\023TComposi"
  "teAnimation\022)\n\023compositeIdentifier\030\001 \002(\013"
  "2\014.TIdentifier\022>\n\013returnValue\030\004 \003(\0132).Hm"
  "iWidget.TCompositeAnimationReturnValue\"\203"
  "\t\n\007TLayout\022 \n\nidentifier\030\001 \002(\0132\014.TIdenti"
  "fier\022.\n\014staticLayout\030\002 \001(\0132\030.HmiWidget.T"
  "LayoutStatic\0226\n\020horizontalLayout\030\003 \001(\0132\034"
  ".HmiWidget.TLayoutHorizontal\0222\n\016vertical"
  "Layout\030\004 \001(\0132\032.HmiWidget.TLayoutVertical"
  "\022D\n\027horizontalDynamicLayout\030\005 \001(\0132#.HmiW"
  "idget.TLayoutHorizontalDynamic\022@\n\025vertic"
  "alDynamicLayout\030\006 \001(\0132!.HmiWidget.TLayou"
  "tVerticalDynamic\0226\n\020sceneGraphLayout\030\007 \001"
  "(\0132\034.HmiWidget.TLayoutSceneGraph\022D\n\027scen"
  "eGraphProjectLayout\030\016 \001(\0132#.HmiWidget.TL"
  "ayoutSceneGraphProject\022.\n\014circleLayout\030\010"
  " \001(\0132\030.HmiWidget.TLayoutCircle\022>\n\024horizo"
  "ntalListLayout\030\t \001(\0132 .HmiWidget.TLayout"
  "HorizontalList\022:\n\022verticalListLayout\030\n \001"
  "(\0132\036.HmiWidget.TLayoutVerticalList\022:\n\022ve"
  "rticalRollLayout\030\013 \001(\0132\036.HmiWidget.TLayo"
  "utVerticalRoll\022F\n\030verticalCurvedListLayo"
  "ut\030\017 \001(\0132$.HmiWidget.TLayoutVerticalCurv"
  "edList\022*\n\ngridLayout\030\014 \001(\0132\026.HmiWidget.T"
  "LayoutGrid\022.\n\014matrixLayout\030\r \001(\0132\030.HmiWi"
  "dget.TLayoutMatrix\022@\n\025horizontalPagesLay"
  "out\030\020 \001(\0132!.HmiWidget.TLayoutHorizontalP"
  "ages\0222\n\016menuBeltLayout\030\021 \001(\0132\032.HmiWidget"
  ".TLayoutMenuBelt\022<\n\023matrixDynamicLayout\030"
  "\022 \001(\0132\037.HmiWidget.TLayoutMatrixDynamic\0220"
  "\n\rtriggeredSlot\030\024 \003(\0132\031.HmiWidget.TTrigg"
  "eredSlot\022!\n\nvisibility\030\025 \001(\0132\r.TDataBind"
  "ing\022\037\n\tuseImport\030\026 \003(\0132\014.TIdentifier\"\241\001\n"
  "\021TLayoutStaticBase\022!\n\nleftMargin\030\001 \001(\0132\r"
  ".TDataBinding\022\"\n\013rightMargin\030\002 \001(\0132\r.TDa"
  "taBinding\022 \n\ttopMargin\030\003 \001(\0132\r.TDataBind"
  "ing\022#\n\014bottomMargin\030\004 \001(\0132\r.TDataBinding"
  "\"\213\002\n\rTLayoutStatic\0220\n\007element\030\001 \003(\0132\037.Hm"
  "iWidget.TLayoutStaticElement\022;\n\017elementT"
  "emplate\030\002 \003(\0132\".HmiWidget.TLayoutStatic."
  "TTemplate\022*\n\004base\030\003 \001(\0132\034.HmiWidget.TLay"
  "outStaticBase\032_\n\tTTemplate\022 \n\nidentifier"
  "\030\001 \002(\0132\014.TIdentifier\0220\n\007element\030\002 \002(\0132\037."
  "HmiWidget.TLayoutStaticElement\"\213\002\n\024TLayo"
  "utStaticElement\022%\n\017childIdentifier\030\001 \001(\013"
  "2\014.TIdentifier\022(\n\014nestedLayout\030\002 \001(\0132\022.H"
  "miWidget.TLayout\022\033\n\004size\030\003 \001(\0132\r.TDataBi"
  "nding\022\037\n\010rotation\030\004 \001(\0132\r.TDataBinding\022\037"
  "\n\010position\030\005 \001(\0132\r.TDataBinding\022 \n\talign"
  "ment\030\006 \001(\0132\r.TDataBinding\022!\n\nsizePolicy\030"
  "\007 \001(\0132\r.TDataBinding\"\227\002\n\021TLayoutHorizont"
  "al\022&\n\004base\030\001 \002(\0132\030.HmiWidget.TLayoutHVBa"
  "se\0224\n\007element\030\002 \003(\0132#.HmiWidget.TLayoutH"
  "orizontalElement\022\?\n\017elementTemplate\030\003 \003("
  "\0132&.HmiWidget.TLayoutHorizontal.TTemplat"
  "e\032c\n\tTTemplate\022 \n\nidentifier\030\001 \002(\0132\014.TId"
  "entifier\0224\n\007element\030\002 \002(\0132#.HmiWidget.TL"
  "ayoutHorizontalElement\"\217\002\n\017TLayoutVertic"
  "al\022&\n\004base\030\001 \002(\0132\030.HmiWidget.TLayoutHVBa"
  "se\0222\n\007element\030\002 \003(\0132!.HmiWidget.TLayoutV"
  "erticalElement\022=\n\017elementTemplate\030\003 \003(\0132"
  "$.HmiWidget.TLayoutVertical.TTemplate\032a\n"
  "\tTTemplate\022 \n\nidentifier\030\001 \002(\0132\014.TIdenti"
  "fier\0222\n\007element\030\002 \002(\0132!.HmiWidget.TLayou"
  "tVerticalElement\"\263\002\n\030TLayoutHorizontalDy"
  "namic\022&\n\004base\030\001 \002(\0132\030.HmiWidget.TLayoutH"
  "VBase\022;\n\007element\030\002 \003(\0132*.HmiWidget.TLayo"
  "utHorizontalDynamicElement\022F\n\017elementTem"
  "plate\030\003 \003(\0132-.HmiWidget.TLayoutHorizonta"
  "lDynamic.TTemplate\032j\n\tTTemplate\022 \n\nident"
  "ifier\030\001 \002(\0132\014.TIdentifier\022;\n\007element\030\002 \002"
  "(\0132*.HmiWidget.TLayoutHorizontalDynamicE"
  "lement\"\253\002\n\026TLayoutVerticalDynamic\022&\n\004bas"
  "e\030\001 \002(\0132\030.HmiWidget.TLayoutHVBase\0229\n\007ele"
  "ment\030\002 \003(\0132(.HmiWidget.TLayoutVerticalDy"
  "namicElement\022D\n\017elementTemplate\030\003 \003(\0132+."
  "HmiWidget.TLayoutVerticalDynamic.TTempla"
  "te\032h\n\tTTemplate\022 \n\nidentifier\030\001 \002(\0132\014.TI"
  "dentifier\0229\n\007element\030\002 \002(\0132(.HmiWidget.T"
  "LayoutVerticalDynamicElement\"\247\002\n\025TLayout"
  "HorizontalList\022&\n\004base\030\001 \002(\0132\030.HmiWidget"
  ".TLayoutHVBase\0228\n\007element\030\002 \003(\0132\'.HmiWid"
  "get.TLayoutHorizontalListElement\022C\n\017elem"
  "entTemplate\030\003 \003(\0132*.HmiWidget.TLayoutHor"
  "izontalList.TTemplate\032g\n\tTTemplate\022 \n\nid"
  "entifier\030\001 \002(\0132\014.TIdentifier\0228\n\007element\030"
  "\002 \002(\0132\'.HmiWidget.TLayoutHorizontalListE"
  "lement\"\237\002\n\023TLayoutVerticalList\022&\n\004base\030\001"
  " \002(\0132\030.HmiWidget.TLayoutHVBase\0226\n\007elemen"
  "t\030\002 \003(\0132%.HmiWidget.TLayoutVerticalListE"
  "lement\022A\n\017elementTemplate\030\003 \003(\0132(.HmiWid"
  "get.TLayoutVerticalList.TTemplate\032e\n\tTTe"
  "mplate\022 \n\nidentifier\030\001 \002(\0132\014.TIdentifier"
  "\0226\n\007element\030\002 \002(\0132%.HmiWidget.TLayoutVer"
  "ticalListElement\"\261\002\n\031TLayoutVerticalCurv"
  "edList\022,\n\004base\030\001 \002(\0132\036.HmiWidget.TLayout"
  "CurvedHVBase\0226\n\007element\030\002 \003(\0132%.HmiWidge"
  "t.TLayoutVerticalListElement\022G\n\017elementT"
  "emplate\030\003 \003(\0132..HmiWidget.TLayoutVertica"
  "lCurvedList.TTemplate\032e\n\tTTemplate\022 \n\nid"
  "entifier\030\001 \002(\0132\014.TIdentifier\0226\n\007element\030"
  "\002 \002(\0132%.HmiWidget.TLayoutVerticalListEle"
  "ment\"\243\002\n\023TLayoutVerticalRoll\022*\n\004base\030\001 \002"
  "(\0132\034.HmiWidget.TLayoutHVRollBase\0226\n\007elem"
  "ent\030\002 \003(\0132%.HmiWidget.TLayoutVerticalLis"
  "tElement\022A\n\017elementTemplate\030\003 \003(\0132(.HmiW"
  "idget.TLayoutVerticalRoll.TTemplate\032e\n\tT"
  "Template\022 \n\nidentifier\030\001 \002(\0132\014.TIdentifi"
  "er\0226\n\007element\030\002 \002(\0132%.HmiWidget.TLayoutV"
  "erticalListElement\"\346\002\n\026TLayoutHorizontal"
  "Pages\022&\n\004base\030\001 \002(\0132\030.HmiWidget.TLayoutH"
  "VBase\0224\n\007element\030\002 \003(\0132#.HmiWidget.TLayo"
  "utHorizontalElement\022D\n\017elementTemplate\030\003"
  " \003(\0132+.HmiWidget.TLayoutHorizontalPages."
  "TTemplate\022\037\n\010pageSize\030\004 \001(\0132\r.TDataBindi"
  "ng\022\"\n\013pageSpacing\030\005 \001(\0132\r.TDataBinding\032c"
  "\n\tTTemplate\022 \n\nidentifier\030\001 \002(\0132\014.TIdent"
  "ifier\0224\n\007element\030\002 \002(\0132#.HmiWidget.TLayo"
  "utHorizontalElement\"\200\002\n\rTLayoutHVBase\022\"\n"
  "\013orientation\030\001 \001(\0132\r.TDataBinding\022!\n\nlef"
  "tMargin\030\002 \001(\0132\r.TDataBinding\022\"\n\013rightMar"
  "gin\030\003 \001(\0132\r.TDataBinding\022 \n\ttopMargin\030\004 "
  "\001(\0132\r.TDataBinding\022#\n\014bottomMargin\030\005 \001(\013"
  "2\r.TDataBinding\022\036\n\007spacing\030\006 \001(\0132\r.TData"
  "Binding\022\035\n\006raster\030\007 \001(\0132\r.TDataBinding\"\314"
  "\002\n\021TLayoutHVRollBase\022\"\n\013orientation\030\001 \001("
  "\0132\r.TDataBinding\022!\n\nleftMargin\030\002 \001(\0132\r.T"
  "DataBinding\022\"\n\013rightMargin\030\003 \001(\0132\r.TData"
  "Binding\022 \n\ttopMargin\030\004 \001(\0132\r.TDataBindin"
  "g\022#\n\014bottomMargin\030\005 \001(\0132\r.TDataBinding\022\036"
  "\n\007spacing\030\006 \001(\0132\r.TDataBinding\022\035\n\006raster"
  "\030\007 \001(\0132\r.TDataBinding\022#\n\014focusedChild\030\010 "
  "\001(\0132\r.TDataBinding\022!\n\nwrapAround\030\t \001(\0132\r"
  ".TDataBinding\"\225\003\n\023TLayoutCurvedHVBase\022\035\n"
  "\006radius\030\001 \002(\0132\r.TDataBinding\022\035\n\006origin\030\002"
  " \002(\0132\r.TDataBinding\022\"\n\013orientation\030\003 \001(\013"
  "2\r.TDataBinding\022!\n\nleftMargin\030\004 \001(\0132\r.TD"
  "ataBinding\022\"\n\013rightMargin\030\005 \001(\0132\r.TDataB"
  "inding\022 \n\ttopMargin\030\006 \001(\0132\r.TDataBinding"
  "\022#\n\014bottomMargin\030\007 \001(\0132\r.TDataBinding\022\036\n"
  "\007spacing\030\010 \001(\0132\r.TDataBinding\022\035\n\006raster\030"
  "\t \001(\0132\r.TDataBinding\022&\n\017originAlignment\030"
  "\n \001(\0132\r.TDataBinding\022\'\n\020scrollAreaHeight"
  "\030\013 \001(\0132\r.TDataBinding\"C\n\030TLayoutHorizont"
  "alElement\022\'\n\004base\030\001 \002(\0132\031.HmiWidget.THVB"
  "aseElement\"A\n\026TLayoutVerticalElement\022\'\n\004"
  "base\030\001 \002(\0132\031.HmiWidget.THVBaseElement\"\351\001"
  "\n\016THVBaseElement\022%\n\017childIdentifier\030\001 \001("
  "\0132\014.TIdentifier\022(\n\014nestedLayout\030\002 \001(\0132\022."
  "HmiWidget.TLayout\022\033\n\004size\030\003 \001(\0132\r.TDataB"
  "inding\022$\n\rstretchFactor\030\004 \001(\0132\r.TDataBin"
  "ding\022!\n\nsizePolicy\030\005 \001(\0132\r.TDataBinding\022"
  " \n\talignment\030\006 \001(\0132\r.TDataBinding\"Q\n\037TLa"
  "youtHorizontalDynamicElement\022.\n\004base\030\001 \002"
  "(\0132 .HmiWidget.THVDynamicBaseElement\"O\n\035"
  "TLayoutVerticalDynamicElement\022.\n\004base\030\001 "
  "\002(\0132 .HmiWidget.THVDynamicBaseElement\"\216\002"
  "\n\025THVDynamicBaseElement\022%\n\017childIdentifi"
  "er\030\001 \001(\0132\014.TIdentifier\022(\n\014nestedLayout\030\002"
  " \001(\0132\022.HmiWidget.TLayout\022\036\n\007sizeMin\030\003 \001("
  "\0132\r.TDataBinding\022\036\n\007sizeMax\030\004 \001(\0132\r.TDat"
  "aBinding\022\037\n\010priority\030\005 \001(\0132\r.TDataBindin"
  "g\022!\n\nsizePolicy\030\006 \001(\0132\r.TDataBinding\022 \n\t"
  "alignment\030\007 \001(\0132\r.TDataBinding\"K\n\034TLayou"
  "tHorizontalListElement\022+\n\004base\030\001 \002(\0132\035.H"
  "miWidget.THVListBaseElement\"I\n\032TLayoutVe"
  "rticalListElement\022+\n\004base\030\001 \002(\0132\035.HmiWid"
  "get.THVListBaseElement\"\347\001\n\022THVListBaseEl"
  "ement\022%\n\017childIdentifier\030\001 \001(\0132\014.TIdenti"
  "fier\022(\n\014nestedLayout\030\002 \001(\0132\022.HmiWidget.T"
  "Layout\022\033\n\004size\030\003 \001(\0132\r.TDataBinding\022\036\n\007s"
  "izeMin\030\006 \001(\0132\r.TDataBinding\022!\n\nsizePolic"
  "y\030\005 \001(\0132\r.TDataBinding\022 \n\talignment\030\004 \001("
  "\0132\r.TDataBinding\"\357\001\n\021TLayoutSceneGraph\0224"
  "\n\007element\030\001 \003(\0132#.HmiWidget.TLayoutScene"
  "GraphElement\022\?\n\017elementTemplate\030\002 \003(\0132&."
  "HmiWidget.TLayoutSceneGraph.TTemplate\032c\n"
  "\tTTemplate\022 \n\nidentifier\030\001 \002(\0132\014.TIdenti"
  "fier\0224\n\007element\030\002 \002(\0132#.HmiWidget.TLayou"
  "tSceneGraphElement\"\327\002\n\030TLayoutSceneGraph"
  "Element\022%\n\017childIdentifier\030\001 \001(\0132\014.TIden"
  "tifier\022(\n\014nestedLayout\030\002 \001(\0132\022.HmiWidget"
  ".TLayout\022#\n\014rootNodeName\030\003 \002(\0132\r.TDataBi"
  "nding\022!\n\nsearchRoot\030\004 \001(\0132\r.TDataBinding"
  "\022\033\n\004size\030\005 \001(\0132\r.TDataBinding\022\037\n\010rotatio"
  "n\030\006 \001(\0132\r.TDataBinding\022\037\n\010position\030\007 \001(\013"
  "2\r.TDataBinding\022 \n\talignment\030\010 \001(\0132\r.TDa"
  "taBinding\022!\n\nsizePolicy\030\t \001(\0132\r.TDataBin"
  "ding\"z\n\030TLayoutSceneGraphProject\022!\n\nsear"
  "chRoot\030\001 \001(\0132\r.TDataBinding\022;\n\007element\030\002"
  " \003(\0132*.HmiWidget.TLayoutSceneGraphProjec"
  "tElement\"\326\002\n\037TLayoutSceneGraphProjectEle"
  "ment\022%\n\017childIdentifier\030\001 \001(\0132\014.TIdentif"
  "ier\022(\n\014nestedLayout\030\002 \001(\0132\022.HmiWidget.TL"
  "ayout\022\037\n\010nodeName\030\003 \002(\0132\r.TDataBinding\022\035"
  "\n\006offset\030\004 \001(\0132\r.TDataBinding\022\033\n\004size\030\005 "
  "\001(\0132\r.TDataBinding\022\037\n\010rotation\030\006 \001(\0132\r.T"
  "DataBinding\022\037\n\010position\030\007 \001(\0132\r.TDataBin"
  "ding\022 \n\talignment\030\010 \001(\0132\r.TDataBinding\022!"
  "\n\nsizePolicy\030\t \001(\0132\r.TDataBinding\"\213\002\n\rTL"
  "ayoutCircle\022*\n\004base\030\001 \002(\0132\034.HmiWidget.TL"
  "ayoutCircleBase\0220\n\007element\030\002 \003(\0132\037.HmiWi"
  "dget.TLayoutCircleElement\022;\n\017elementTemp"
  "late\030\003 \003(\0132\".HmiWidget.TLayoutCircle.TTe"
  "mplate\032_\n\tTTemplate\022 \n\nidentifier\030\001 \002(\0132"
  "\014.TIdentifier\0220\n\007element\030\002 \002(\0132\037.HmiWidg"
  "et.TLayoutCircleElement\"\310\002\n\021TLayoutCircl"
  "eBase\022\"\n\013orientation\030\001 \001(\0132\r.TDataBindin"
  "g\022!\n\nleftMargin\030\002 \001(\0132\r.TDataBinding\022\"\n\013"
  "rightMargin\030\003 \001(\0132\r.TDataBinding\022 \n\ttopM"
  "argin\030\004 \001(\0132\r.TDataBinding\022#\n\014bottomMarg"
  "in\030\005 \001(\0132\r.TDataBinding\022\036\n\007spacing\030\006 \001(\013"
  "2\r.TDataBinding\022!\n\nstartAngle\030\007 \001(\0132\r.TD"
  "ataBinding\022\037\n\010endAngle\030\010 \001(\0132\r.TDataBind"
  "ing\022\035\n\006radius\030\t \001(\0132\r.TDataBinding\"I\n\024TL"
  "ayoutCircleElement\0221\n\004base\030\001 \002(\0132#.HmiWi"
  "dget.TLayoutCircleBaseElement\"\363\001\n\030TLayou"
  "tCircleBaseElement\022%\n\017childIdentifier\030\001 "
  "\001(\0132\014.TIdentifier\022(\n\014nestedLayout\030\002 \001(\0132"
  "\022.HmiWidget.TLayout\022\033\n\004size\030\003 \001(\0132\r.TDat"
  "aBinding\022$\n\rstretchFactor\030\004 \001(\0132\r.TDataB"
  "inding\022!\n\nsizePolicy\030\005 \001(\0132\r.TDataBindin"
  "g\022 \n\talignment\030\006 \001(\0132\r.TDataBinding\"\316\002\n\013"
  "TLayoutGrid\022(\n\004base\030\001 \001(\0132\032.HmiWidget.TL"
  "ayoutGridBase\022#\n\014numberOfRows\030\002 \001(\0132\r.TD"
  "ataBinding\022&\n\017numberOfColumns\030\003 \001(\0132\r.TD"
  "ataBinding\022.\n\007element\030\004 \003(\0132\035.HmiWidget."
  "TLayoutGridElement\0229\n\017elementTemplate\030\005 "
  "\003(\0132 .HmiWidget.TLayoutGrid.TTemplate\032]\n"
  "\tTTemplate\022 \n\nidentifier\030\001 \002(\0132\014.TIdenti"
  "fier\022.\n\007element\030\002 \002(\0132\035.HmiWidget.TLayou"
  "tGridElement\"\237\001\n\017TLayoutGridBase\022!\n\nleft"
  "Margin\030\001 \001(\0132\r.TDataBinding\022\"\n\013rightMarg"
  "in\030\002 \001(\0132\r.TDataBinding\022 \n\ttopMargin\030\003 \001"
  "(\0132\r.TDataBinding\022#\n\014bottomMargin\030\004 \001(\0132"
  "\r.TDataBinding\"\343\001\n\022TLayoutGridElement\022%\n"
  "\017childIdentifier\030\001 \001(\0132\014.TIdentifier\022(\n\014"
  "nestedLayout\030\002 \001(\0132\022.HmiWidget.TLayout\022\032"
  "\n\003row\030\003 \001(\0132\r.TDataBinding\022\035\n\006column\030\004 \001"
  "(\0132\r.TDataBinding\022\036\n\007rowSpan\030\005 \001(\0132\r.TDa"
  "taBinding\022!\n\ncolumnSpan\030\006 \001(\0132\r.TDataBin"
  "ding\"\254\002\n\rTLayoutMatrix\022*\n\004base\030\001 \001(\0132\034.H"
  "miWidget.TLayoutMatrixBase\022\037\n\010cellSize\030\002"
  " \002(\0132\r.TDataBinding\0220\n\007element\030\003 \003(\0132\037.H"
  "miWidget.TLayoutMatrixElement\022;\n\017element"
  "Template\030\004 \003(\0132\".HmiWidget.TLayoutMatrix"
  ".TTemplate\032_\n\tTTemplate\022 \n\nidentifier\030\001 "
  "\002(\0132\014.TIdentifier\0220\n\007element\030\002 \002(\0132\037.Hmi"
  "Widget.TLayoutMatrixElement\"\213\002\n\021TLayoutM"
  "atrixBase\022!\n\nleftMargin\030\001 \001(\0132\r.TDataBin"
  "ding\022\"\n\013rightMargin\030\002 \001(\0132\r.TDataBinding"
  "\022 \n\ttopMargin\030\003 \001(\0132\r.TDataBinding\022#\n\014bo"
  "ttomMargin\030\004 \001(\0132\r.TDataBinding\022#\n\014orien"
  "tationX\030\005 \001(\0132\r.TDataBinding\022#\n\014orientat"
  "ionY\030\006 \001(\0132\r.TDataBinding\022\036\n\007spacing\030\007 \001"
  "(\0132\r.TDataBinding\"\211\001\n\024TLayoutMatrixEleme"
  "nt\022%\n\017childIdentifier\030\001 \001(\0132\014.TIdentifie"
  "r\022(\n\014nestedLayout\030\002 \001(\0132\022.HmiWidget.TLay"
  "out\022 \n\talignment\030\003 \001(\0132\r.TDataBinding\"\326\002"
  "\n\024TLayoutMatrixDynamic\0221\n\004base\030\001 \001(\0132#.H"
  "miWidget.TLayoutMatrixDynamicBase\022&\n\017def"
  "aultCellSize\030\002 \001(\0132\r.TDataBinding\0227\n\007ele"
  "ment\030\003 \003(\0132&.HmiWidget.TLayoutMatrixDyna"
  "micElement\022B\n\017elementTemplate\030\004 \003(\0132).Hm"
  "iWidget.TLayoutMatrixDynamic.TTemplate\032f"
  "\n\tTTemplate\022 \n\nidentifier\030\001 \002(\0132\014.TIdent"
  "ifier\0227\n\007element\030\002 \002(\0132&.HmiWidget.TLayo"
  "utMatrixDynamicElement\"\222\002\n\030TLayoutMatrix"
  "DynamicBase\022!\n\nleftMargin\030\001 \001(\0132\r.TDataB"
  "inding\022\"\n\013rightMargin\030\002 \001(\0132\r.TDataBindi"
  "ng\022 \n\ttopMargin\030\003 \001(\0132\r.TDataBinding\022#\n\014"
  "bottomMargin\030\004 \001(\0132\r.TDataBinding\022#\n\014ori"
  "entationX\030\005 \001(\0132\r.TDataBinding\022#\n\014orient"
  "ationY\030\006 \001(\0132\r.TDataBinding\022\036\n\007spacing\030\007"
  " \001(\0132\r.TDataBinding\"\366\001\n\033TLayoutMatrixDyn"
  "amicElement\022%\n\017childIdentifier\030\001 \001(\0132\014.T"
  "Identifier\022(\n\014nestedLayout\030\002 \001(\0132\022.HmiWi"
  "dget.TLayout\022 \n\talignment\030\003 \001(\0132\r.TDataB"
  "inding\022!\n\nsizePolicy\030\004 \001(\0132\r.TDataBindin"
  "g\022\033\n\004size\030\005 \001(\0132\r.TDataBinding\022$\n\rstretc"
  "hFactor\030\006 \001(\0132\r.TDataBinding\"\225\002\n\017TLayout"
  "MenuBelt\022,\n\004base\030\001 \001(\0132\036.HmiWidget.TLayo"
  "utMenuBeltBase\0222\n\007element\030\002 \003(\0132!.HmiWid"
  "get.TLayoutMenuBeltElement\022=\n\017elementTem"
  "plate\030\003 \003(\0132$.HmiWidget.TLayoutMenuBelt."
  "TTemplate\032a\n\tTTemplate\022 \n\nidentifier\030\001 \002"
  "(\0132\014.TIdentifier\0222\n\007element\030\002 \002(\0132!.HmiW"
  "idget.TLayoutMenuBeltElement\"\333\002\n\023TLayout"
  "MenuBeltBase\022!\n\nleftMargin\030\001 \001(\0132\r.TData"
  "Binding\022\"\n\013rightMargin\030\002 \001(\0132\r.TDataBind"
  "ing\022 \n\ttopMargin\030\003 \001(\0132\r.TDataBinding\022#\n"
  "\014bottomMargin\030\004 \001(\0132\r.TDataBinding\022\037\n\010pa"
  "geSize\030\005 \001(\0132\r.TDataBinding\022$\n\rpageBlock"
  "Size\030\006 \001(\0132\r.TDataBinding\022#\n\014elementShif"
  "t\030\007 \001(\0132\r.TDataBinding\022\"\n\013pageSpacing\030\010 "
  "\001(\0132\r.TDataBinding\022&\n\017verticalSpacing\030\t "
  "\001(\0132\r.TDataBinding\"\313\001\n\026TLayoutMenuBeltEl"
  "ement\022%\n\017childIdentifier\030\001 \001(\0132\014.TIdenti"
  "fier\022(\n\014nestedLayout\030\002 \001(\0132\022.HmiWidget.T"
  "Layout\022\033\n\004size\030\003 \001(\0132\r.TDataBinding\022!\n\ns"
  "izePolicy\030\004 \001(\0132\r.TDataBinding\022 \n\talignm"
  "ent\030\005 \001(\0132\r.TDataBinding*\202\003\n\021TETriggerCa"
  "tegory\022$\n TETriggerCategory_OnWidgetUpda"
  "te\020\000\022\'\n#TETriggerCategory_OnControllerIn"
  "put\020\001\022\"\n\036TETriggerCategory_OnTouchInput\020"
  "\002\022%\n!TETriggerCategory_OnWidgetRemoved\020\003"
  "\022$\n TETriggerCategory_OnWidgetHidden\020\004\022#"
  "\n\037TETriggerCategory_OnWidgetShown\020\005\022-\n)T"
  "ETriggerCategory_OnWidgetRenderingActive"
  "\020\006\022/\n+TETriggerCategory_OnWidgetRenderin"
  "gInactive\020\007\022(\n$TETriggerCategory_OnWidge"
  "tPostLayout\020\010*e\n\021TETriggerExecMode\022+\n\'TE"
  "TriggerExecMode_ConditionDirtyAndTrue\020\000\022"
  "#\n\037TETriggerExecMode_ConditionTrue\020\001*\315\001\n"
  "\023TETouchTargetDomain\022\033\n\027TETouchTargetDom"
  "ain_Hmi\020\001\022\034\n\030TETouchTargetDomain_Navi\020\002\022"
  ".\n*TETouchTargetDomain_NaviPreview_DEPRE"
  "CATED\020\003\022*\n&TETouchTargetDomain_Browser_D"
  "EPRECATED\020\004\022\037\n\033TETouchTargetDomain_CarPl"
  "ay\020\005*\320\001\n\023TETouchVolumeSource\022\"\n\036TETouchV"
  "olumeSource_LayoutSize\020\001\022/\n+TETouchVolum"
  "eSource_GeometryBBox_DEPRECATED\020\002\022$\n TET"
  "ouchVolumeSource_CustomVolume\020\003\022\035\n\031TETou"
  "chVolumeSource_Child\020\004\022\037\n\033TETouchVolumeS"
  "ource_Polygon\020\005*i\n\020TELevelSelection\022\034\n\030T"
  "ELevelSelection_Default\020\001\022\034\n\030TELevelSele"
  "ction_Current\020\002\022\031\n\025TELevelSelection_Next"
  "\020\003*W\n\022TEAssignmentTarget\022\034\n\030TEAssignment"
  "Target_Local\020\001\022#\n\037TEAssignmentTarget_Dat"
  "aExchange\020\002*\235\001\n\016TESignalTarget\022\027\n\023TESign"
  "alTarget_Self\020\000\022\030\n\024TESignalTarget_Child\020"
  "\001\022\031\n\025TESignalTarget_Parent\020\002\022\032\n\026TESignal"
  "Target_Parents\020\003\022!\n\035TESignalTarget_SelfA"
  "ndParents\020\004*k\n\021TEAnimationAction\022\033\n\027TEAn"
  "imationAction_Start\020\000\022\032\n\026TEAnimationActi"
  "on_Stop\020\001\022\035\n\031TEAnimationAction_GoToEnd\020\002"
  "*\226\001\n\033TEAnimationBindingBehaviour\022&\n\"TEAn"
  "imationBindingBehaviour_Ignore\020\000\022&\n\"TEAn"
  "imationBindingBehaviour_Update\020\001\022\'\n#TEAn"
  "imationBindingBehaviour_Restart\020\002*\345\002\n\021TE"
  "AnimationSignal\022,\n(TEAnimationSignal_Sig"
  "nalAnimationStarted\020\000\022,\n(TEAnimationSign"
  "al_SignalAnimationStopped\020\001\0223\n/TEAnimati"
  "onSignal_SignalAnimationEndOfAnimation\020\002"
  "\0228\n4TEAnimationSignal_SignalAnimationCur"
  "rentValueChanged\020\003\022*\n&TEAnimationSignal_"
  "SignalAnimationReset\020\004\022,\n(TEAnimationSig"
  "nal_SignalAnimationAborted\020\005\022+\n\'TEAnimat"
  "ionSignal_SignalAnimationResume\020\006*\203\002\n\017TE"
  "AnimationSlot\022&\n\"TEAnimationSlot_SlotAni"
  "mationStart\020\000\022%\n!TEAnimationSlot_SlotAni"
  "mationStop\020\001\022(\n$TEAnimationSlot_SlotAnim"
  "ationGotoEnd\020\002\022&\n\"TEAnimationSlot_SlotAn"
  "imationReset\020\003\022&\n\"TEAnimationSlot_SlotAn"
  "imationAbort\020\004\022\'\n#TEAnimationSlot_SlotAn"
  "imationResume\020\005*\217\001\n\023TELayoutOrientation\022"
  "\034\n\030TELayoutOrientation_Left\020\000\022\035\n\031TELayou"
  "tOrientation_Right\020\001\022\033\n\027TELayoutOrientat"
  "ion_Top\020\002\022\036\n\032TELayoutOrientation_Bottom\020"
  "\003:;\n\006script\022\016.TDataProvider\030\n \001(\0132\033.HmiW"
  "idget.TScriptReference:/\n\tanimation\022\016.TD"
  "ataProvider\030\013 \001(\0132\014.TIdentifier:9\n\005curve"
  "\022\016.TDataProvider\030\014 \001(\0132\032.HmiWidget.TCurv"
  "eReference"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_HmiWidget_2eproto_deps[3] = {
  &::descriptor_table_Common_2eproto,
  &::descriptor_table_HmiBase_2eproto,
  &::descriptor_table_Numeric_2eproto,
};
static ::_pbi::once_flag descriptor_table_HmiWidget_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_HmiWidget_2eproto = {
    false, false, 26970, descriptor_table_protodef_HmiWidget_2eproto,
    "HmiWidget.proto",
    &descriptor_table_HmiWidget_2eproto_once, descriptor_table_HmiWidget_2eproto_deps, 3, 119,
    schemas, file_default_instances, TableStruct_HmiWidget_2eproto::offsets,
    file_level_metadata_HmiWidget_2eproto, file_level_enum_descriptors_HmiWidget_2eproto,
    file_level_service_descriptors_HmiWidget_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_HmiWidget_2eproto_getter() {
  return &descriptor_table_HmiWidget_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_HmiWidget_2eproto(&descriptor_table_HmiWidget_2eproto);
namespace HmiWidget {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TETriggerCategory_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_HmiWidget_2eproto);
  return file_level_enum_descriptors_HmiWidget_2eproto[0];
}
bool TETriggerCategory_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TETriggerExecMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_HmiWidget_2eproto);
  return file_level_enum_descriptors_HmiWidget_2eproto[1];
}
bool TETriggerExecMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TETouchTargetDomain_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_HmiWidget_2eproto);
  return file_level_enum_descriptors_HmiWidget_2eproto[2];
}
bool TETouchTargetDomain_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TETouchVolumeSource_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_HmiWidget_2eproto);
  return file_level_enum_descriptors_HmiWidget_2eproto[3];
}
bool TETouchVolumeSource_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TELevelSelection_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_HmiWidget_2eproto);
  return file_level_enum_descriptors_HmiWidget_2eproto[4];
}
bool TELevelSelection_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TEAssignmentTarget_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_HmiWidget_2eproto);
  return file_level_enum_descriptors_HmiWidget_2eproto[5];
}
bool TEAssignmentTarget_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TESignalTarget_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_HmiWidget_2eproto);
  return file_level_enum_descriptors_HmiWidget_2eproto[6];
}
bool TESignalTarget_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TEAnimationAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_HmiWidget_2eproto);
  return file_level_enum_descriptors_HmiWidget_2eproto[7];
}
bool TEAnimationAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TEAnimationBindingBehaviour_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_HmiWidget_2eproto);
  return file_level_enum_descriptors_HmiWidget_2eproto[8];
}
bool TEAnimationBindingBehaviour_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TEAnimationSignal_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_HmiWidget_2eproto);
  return file_level_enum_descriptors_HmiWidget_2eproto[9];
}
bool TEAnimationSignal_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TEAnimationSlot_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_HmiWidget_2eproto);
  return file_level_enum_descriptors_HmiWidget_2eproto[10];
}
bool TEAnimationSlot_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TELayoutOrientation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_HmiWidget_2eproto);
  return file_level_enum_descriptors_HmiWidget_2eproto[11];
}
bool TELayoutOrientation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class TNodeParam::_Internal {
 public:
  using HasBits = decltype(std::declval<TNodeParam>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TNodeParam, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TNodeParam* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& node(const TNodeParam* msg);
  static void set_has_node(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::HmiWidget::TNodeTransform& transform(const TNodeParam* msg);
  static void set_has_transform(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::HmiWidget::TRenderLayerProperties& renderlayerproperties(const TNodeParam* msg);
  static void set_has_renderlayerproperties(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::HmiWidget::TNodeProperties& nodeproperties(const TNodeParam* msg);
  static void set_has_nodeproperties(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::HmiWidget::TCameraNodeProperties& cameranodeproperties(const TNodeParam* msg);
  static void set_has_cameranodeproperties(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::HmiWidget::TTextNodeProperties& textnodeproperties(const TNodeParam* msg);
  static void set_has_textnodeproperties(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TIdentifier&
TNodeParam::_Internal::identifier(const TNodeParam* msg) {
  return *msg->_impl_.identifier_;
}
const ::TDataBinding&
TNodeParam::_Internal::node(const TNodeParam* msg) {
  return *msg->_impl_.node_;
}
const ::HmiWidget::TNodeTransform&
TNodeParam::_Internal::transform(const TNodeParam* msg) {
  return *msg->_impl_.transform_;
}
const ::HmiWidget::TRenderLayerProperties&
TNodeParam::_Internal::renderlayerproperties(const TNodeParam* msg) {
  return *msg->_impl_.renderlayerproperties_;
}
const ::HmiWidget::TNodeProperties&
TNodeParam::_Internal::nodeproperties(const TNodeParam* msg) {
  return *msg->_impl_.nodeproperties_;
}
const ::HmiWidget::TCameraNodeProperties&
TNodeParam::_Internal::cameranodeproperties(const TNodeParam* msg) {
  return *msg->_impl_.cameranodeproperties_;
}
const ::HmiWidget::TTextNodeProperties&
TNodeParam::_Internal::textnodeproperties(const TNodeParam* msg) {
  return *msg->_impl_.textnodeproperties_;
}
void TNodeParam::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TNodeParam::clear_node() {
  if (_impl_.node_ != nullptr) _impl_.node_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TNodeParam::clear_useimport() {
  _impl_.useimport_.Clear();
}
TNodeParam::TNodeParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TNodeParam)
}
TNodeParam::TNodeParam(const TNodeParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TNodeParam* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uniform_){from._impl_.uniform_}
    , decltype(_impl_.useimport_){from._impl_.useimport_}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.node_){nullptr}
    , decltype(_impl_.transform_){nullptr}
    , decltype(_impl_.renderlayerproperties_){nullptr}
    , decltype(_impl_.nodeproperties_){nullptr}
    , decltype(_impl_.cameranodeproperties_){nullptr}
    , decltype(_impl_.textnodeproperties_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_node()) {
    _this->_impl_.node_ = new ::TDataBinding(*from._impl_.node_);
  }
  if (from._internal_has_transform()) {
    _this->_impl_.transform_ = new ::HmiWidget::TNodeTransform(*from._impl_.transform_);
  }
  if (from._internal_has_renderlayerproperties()) {
    _this->_impl_.renderlayerproperties_ = new ::HmiWidget::TRenderLayerProperties(*from._impl_.renderlayerproperties_);
  }
  if (from._internal_has_nodeproperties()) {
    _this->_impl_.nodeproperties_ = new ::HmiWidget::TNodeProperties(*from._impl_.nodeproperties_);
  }
  if (from._internal_has_cameranodeproperties()) {
    _this->_impl_.cameranodeproperties_ = new ::HmiWidget::TCameraNodeProperties(*from._impl_.cameranodeproperties_);
  }
  if (from._internal_has_textnodeproperties()) {
    _this->_impl_.textnodeproperties_ = new ::HmiWidget::TTextNodeProperties(*from._impl_.textnodeproperties_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TNodeParam)
}

inline void TNodeParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uniform_){arena}
    , decltype(_impl_.useimport_){arena}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.node_){nullptr}
    , decltype(_impl_.transform_){nullptr}
    , decltype(_impl_.renderlayerproperties_){nullptr}
    , decltype(_impl_.nodeproperties_){nullptr}
    , decltype(_impl_.cameranodeproperties_){nullptr}
    , decltype(_impl_.textnodeproperties_){nullptr}
  };
}

TNodeParam::~TNodeParam() {
  // @@protoc_insertion_point(destructor:HmiWidget.TNodeParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TNodeParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uniform_.~RepeatedPtrField();
  _impl_.useimport_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.node_;
  if (this != internal_default_instance()) delete _impl_.transform_;
  if (this != internal_default_instance()) delete _impl_.renderlayerproperties_;
  if (this != internal_default_instance()) delete _impl_.nodeproperties_;
  if (this != internal_default_instance()) delete _impl_.cameranodeproperties_;
  if (this != internal_default_instance()) delete _impl_.textnodeproperties_;
}

void TNodeParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TNodeParam::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TNodeParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uniform_.Clear();
  _impl_.useimport_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.node_ != nullptr);
      _impl_.node_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.transform_ != nullptr);
      _impl_.transform_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.renderlayerproperties_ != nullptr);
      _impl_.renderlayerproperties_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.nodeproperties_ != nullptr);
      _impl_.nodeproperties_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.cameranodeproperties_ != nullptr);
      _impl_.cameranodeproperties_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.textnodeproperties_ != nullptr);
      _impl_.textnodeproperties_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TNodeParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding node = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_node(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TNodeTransform transform = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transform(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TUniform uniform = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_uniform(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .TIdentifier useImport = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_useimport(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TRenderLayerProperties renderLayerProperties = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_renderlayerproperties(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TNodeProperties nodeProperties = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_nodeproperties(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TCameraNodeProperties cameraNodeProperties = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_cameranodeproperties(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TTextNodeProperties textNodeProperties = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_textnodeproperties(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TNodeParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TNodeParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding node = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::node(this),
        _Internal::node(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TNodeTransform transform = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transform(this),
        _Internal::transform(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TUniform uniform = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_uniform_size()); i < n; i++) {
    const auto& repfield = this->_internal_uniform(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .TIdentifier useImport = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_useimport_size()); i < n; i++) {
    const auto& repfield = this->_internal_useimport(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TRenderLayerProperties renderLayerProperties = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::renderlayerproperties(this),
        _Internal::renderlayerproperties(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TNodeProperties nodeProperties = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::nodeproperties(this),
        _Internal::nodeproperties(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TCameraNodeProperties cameraNodeProperties = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::cameranodeproperties(this),
        _Internal::cameranodeproperties(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TTextNodeProperties textNodeProperties = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::textnodeproperties(this),
        _Internal::textnodeproperties(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TNodeParam)
  return target;
}

size_t TNodeParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TNodeParam)
  size_t total_size = 0;

  // required .TIdentifier identifier = 1;
  if (_internal_has_identifier()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TUniform uniform = 4;
  total_size += 1UL * this->_internal_uniform_size();
  for (const auto& msg : this->_impl_.uniform_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .TIdentifier useImport = 5;
  total_size += 1UL * this->_internal_useimport_size();
  for (const auto& msg : this->_impl_.useimport_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007eu) {
    // optional .TDataBinding node = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.node_);
    }

    // optional .HmiWidget.TNodeTransform transform = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transform_);
    }

    // optional .HmiWidget.TRenderLayerProperties renderLayerProperties = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.renderlayerproperties_);
    }

    // optional .HmiWidget.TNodeProperties nodeProperties = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nodeproperties_);
    }

    // optional .HmiWidget.TCameraNodeProperties cameraNodeProperties = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.cameranodeproperties_);
    }

    // optional .HmiWidget.TTextNodeProperties textNodeProperties = 9;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.textnodeproperties_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TNodeParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TNodeParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TNodeParam::GetClassData() const { return &_class_data_; }


void TNodeParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TNodeParam*>(&to_msg);
  auto& from = static_cast<const TNodeParam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TNodeParam)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.uniform_.MergeFrom(from._impl_.uniform_);
  _this->_impl_.useimport_.MergeFrom(from._impl_.useimport_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_node()->::TDataBinding::MergeFrom(
          from._internal_node());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_transform()->::HmiWidget::TNodeTransform::MergeFrom(
          from._internal_transform());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_renderlayerproperties()->::HmiWidget::TRenderLayerProperties::MergeFrom(
          from._internal_renderlayerproperties());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_nodeproperties()->::HmiWidget::TNodeProperties::MergeFrom(
          from._internal_nodeproperties());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_cameranodeproperties()->::HmiWidget::TCameraNodeProperties::MergeFrom(
          from._internal_cameranodeproperties());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_textnodeproperties()->::HmiWidget::TTextNodeProperties::MergeFrom(
          from._internal_textnodeproperties());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TNodeParam::CopyFrom(const TNodeParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TNodeParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TNodeParam::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.uniform_))
    return false;
  if (_internal_has_node()) {
    if (!_impl_.node_->IsInitialized()) return false;
  }
  if (_internal_has_transform()) {
    if (!_impl_.transform_->IsInitialized()) return false;
  }
  if (_internal_has_renderlayerproperties()) {
    if (!_impl_.renderlayerproperties_->IsInitialized()) return false;
  }
  if (_internal_has_nodeproperties()) {
    if (!_impl_.nodeproperties_->IsInitialized()) return false;
  }
  if (_internal_has_cameranodeproperties()) {
    if (!_impl_.cameranodeproperties_->IsInitialized()) return false;
  }
  if (_internal_has_textnodeproperties()) {
    if (!_impl_.textnodeproperties_->IsInitialized()) return false;
  }
  return true;
}

void TNodeParam::InternalSwap(TNodeParam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.uniform_.InternalSwap(&other->_impl_.uniform_);
  _impl_.useimport_.InternalSwap(&other->_impl_.useimport_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TNodeParam, _impl_.textnodeproperties_)
      + sizeof(TNodeParam::_impl_.textnodeproperties_)
      - PROTOBUF_FIELD_OFFSET(TNodeParam, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TNodeParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[0]);
}

// ===================================================================

class TUniform::_Internal {
 public:
  using HasBits = decltype(std::declval<TUniform>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TUniform, _impl_._has_bits_);
  static const ::TDataBinding& name(const TUniform* msg);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& value(const TUniform* msg);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TDataBinding&
TUniform::_Internal::name(const TUniform* msg) {
  return *msg->_impl_.name_;
}
const ::TDataBinding&
TUniform::_Internal::value(const TUniform* msg) {
  return *msg->_impl_.value_;
}
void TUniform::clear_name() {
  if (_impl_.name_ != nullptr) _impl_.name_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TUniform::clear_value() {
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TUniform::TUniform(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TUniform)
}
TUniform::TUniform(const TUniform& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TUniform* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){nullptr}
    , decltype(_impl_.value_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_name()) {
    _this->_impl_.name_ = new ::TDataBinding(*from._impl_.name_);
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::TDataBinding(*from._impl_.value_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TUniform)
}

inline void TUniform::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){nullptr}
    , decltype(_impl_.value_){nullptr}
  };
}

TUniform::~TUniform() {
  // @@protoc_insertion_point(destructor:HmiWidget.TUniform)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TUniform::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.name_;
  if (this != internal_default_instance()) delete _impl_.value_;
}

void TUniform::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TUniform::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TUniform)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.name_ != nullptr);
      _impl_.name_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.value_ != nullptr);
      _impl_.value_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TUniform::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_name(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TUniform::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TUniform)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding name = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::name(this),
        _Internal::name(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TUniform)
  return target;
}

size_t TUniform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TUniform)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .TDataBinding name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.name_);
    }

    // optional .TDataBinding value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TUniform::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TUniform::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TUniform::GetClassData() const { return &_class_data_; }


void TUniform::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TUniform*>(&to_msg);
  auto& from = static_cast<const TUniform&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TUniform)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_name()->::TDataBinding::MergeFrom(
          from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_value()->::TDataBinding::MergeFrom(
          from._internal_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TUniform::CopyFrom(const TUniform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TUniform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUniform::IsInitialized() const {
  if (_internal_has_name()) {
    if (!_impl_.name_->IsInitialized()) return false;
  }
  if (_internal_has_value()) {
    if (!_impl_.value_->IsInitialized()) return false;
  }
  return true;
}

void TUniform::InternalSwap(TUniform* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TUniform, _impl_.value_)
      + sizeof(TUniform::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(TUniform, _impl_.name_)>(
          reinterpret_cast<char*>(&_impl_.name_),
          reinterpret_cast<char*>(&other->_impl_.name_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TUniform::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[1]);
}

// ===================================================================

class TNodeTransform::_Internal {
 public:
  using HasBits = decltype(std::declval<TNodeTransform>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TNodeTransform, _impl_._has_bits_);
  static const ::TDataBinding& scale(const TNodeTransform* msg);
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& rotation(const TNodeTransform* msg);
  static void set_has_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& translation(const TNodeTransform* msg);
  static void set_has_translation(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::TDataBinding&
TNodeTransform::_Internal::scale(const TNodeTransform* msg) {
  return *msg->_impl_.scale_;
}
const ::TDataBinding&
TNodeTransform::_Internal::rotation(const TNodeTransform* msg) {
  return *msg->_impl_.rotation_;
}
const ::TDataBinding&
TNodeTransform::_Internal::translation(const TNodeTransform* msg) {
  return *msg->_impl_.translation_;
}
void TNodeTransform::clear_scale() {
  if (_impl_.scale_ != nullptr) _impl_.scale_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TNodeTransform::clear_rotation() {
  if (_impl_.rotation_ != nullptr) _impl_.rotation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TNodeTransform::clear_translation() {
  if (_impl_.translation_ != nullptr) _impl_.translation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TNodeTransform::TNodeTransform(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TNodeTransform)
}
TNodeTransform::TNodeTransform(const TNodeTransform& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TNodeTransform* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.scale_){nullptr}
    , decltype(_impl_.rotation_){nullptr}
    , decltype(_impl_.translation_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scale()) {
    _this->_impl_.scale_ = new ::TDataBinding(*from._impl_.scale_);
  }
  if (from._internal_has_rotation()) {
    _this->_impl_.rotation_ = new ::TDataBinding(*from._impl_.rotation_);
  }
  if (from._internal_has_translation()) {
    _this->_impl_.translation_ = new ::TDataBinding(*from._impl_.translation_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TNodeTransform)
}

inline void TNodeTransform::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.scale_){nullptr}
    , decltype(_impl_.rotation_){nullptr}
    , decltype(_impl_.translation_){nullptr}
  };
}

TNodeTransform::~TNodeTransform() {
  // @@protoc_insertion_point(destructor:HmiWidget.TNodeTransform)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TNodeTransform::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.scale_;
  if (this != internal_default_instance()) delete _impl_.rotation_;
  if (this != internal_default_instance()) delete _impl_.translation_;
}

void TNodeTransform::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TNodeTransform::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TNodeTransform)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.scale_ != nullptr);
      _impl_.scale_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.rotation_ != nullptr);
      _impl_.rotation_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.translation_ != nullptr);
      _impl_.translation_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TNodeTransform::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding scale = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rotation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding translation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_translation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TNodeTransform::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TNodeTransform)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding scale = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::scale(this),
        _Internal::scale(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rotation = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rotation(this),
        _Internal::rotation(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding translation = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::translation(this),
        _Internal::translation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TNodeTransform)
  return target;
}

size_t TNodeTransform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TNodeTransform)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .TDataBinding scale = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scale_);
    }

    // optional .TDataBinding rotation = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rotation_);
    }

    // optional .TDataBinding translation = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.translation_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TNodeTransform::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TNodeTransform::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TNodeTransform::GetClassData() const { return &_class_data_; }


void TNodeTransform::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TNodeTransform*>(&to_msg);
  auto& from = static_cast<const TNodeTransform&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TNodeTransform)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_scale()->::TDataBinding::MergeFrom(
          from._internal_scale());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_rotation()->::TDataBinding::MergeFrom(
          from._internal_rotation());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_translation()->::TDataBinding::MergeFrom(
          from._internal_translation());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TNodeTransform::CopyFrom(const TNodeTransform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TNodeTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TNodeTransform::IsInitialized() const {
  if (_internal_has_scale()) {
    if (!_impl_.scale_->IsInitialized()) return false;
  }
  if (_internal_has_rotation()) {
    if (!_impl_.rotation_->IsInitialized()) return false;
  }
  if (_internal_has_translation()) {
    if (!_impl_.translation_->IsInitialized()) return false;
  }
  return true;
}

void TNodeTransform::InternalSwap(TNodeTransform* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TNodeTransform, _impl_.translation_)
      + sizeof(TNodeTransform::_impl_.translation_)
      - PROTOBUF_FIELD_OFFSET(TNodeTransform, _impl_.scale_)>(
          reinterpret_cast<char*>(&_impl_.scale_),
          reinterpret_cast<char*>(&other->_impl_.scale_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TNodeTransform::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[2]);
}

// ===================================================================

class TRenderLayerProperties::_Internal {
 public:
  using HasBits = decltype(std::declval<TRenderLayerProperties>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TRenderLayerProperties, _impl_._has_bits_);
  static const ::TDataBinding& renderpassenabled(const TRenderLayerProperties* msg);
  static void set_has_renderpassenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& rendertargetscale(const TRenderLayerProperties* msg);
  static void set_has_rendertargetscale(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& boundingboxrootname(const TRenderLayerProperties* msg);
  static void set_has_boundingboxrootname(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& bordersize(const TRenderLayerProperties* msg);
  static void set_has_bordersize(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::TDataBinding&
TRenderLayerProperties::_Internal::renderpassenabled(const TRenderLayerProperties* msg) {
  return *msg->_impl_.renderpassenabled_;
}
const ::TDataBinding&
TRenderLayerProperties::_Internal::rendertargetscale(const TRenderLayerProperties* msg) {
  return *msg->_impl_.rendertargetscale_;
}
const ::TDataBinding&
TRenderLayerProperties::_Internal::boundingboxrootname(const TRenderLayerProperties* msg) {
  return *msg->_impl_.boundingboxrootname_;
}
const ::TDataBinding&
TRenderLayerProperties::_Internal::bordersize(const TRenderLayerProperties* msg) {
  return *msg->_impl_.bordersize_;
}
void TRenderLayerProperties::clear_renderpassenabled() {
  if (_impl_.renderpassenabled_ != nullptr) _impl_.renderpassenabled_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TRenderLayerProperties::clear_rendertargetscale() {
  if (_impl_.rendertargetscale_ != nullptr) _impl_.rendertargetscale_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TRenderLayerProperties::clear_boundingboxrootname() {
  if (_impl_.boundingboxrootname_ != nullptr) _impl_.boundingboxrootname_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TRenderLayerProperties::clear_bordersize() {
  if (_impl_.bordersize_ != nullptr) _impl_.bordersize_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
TRenderLayerProperties::TRenderLayerProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TRenderLayerProperties)
}
TRenderLayerProperties::TRenderLayerProperties(const TRenderLayerProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TRenderLayerProperties* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.renderpassenabled_){nullptr}
    , decltype(_impl_.rendertargetscale_){nullptr}
    , decltype(_impl_.boundingboxrootname_){nullptr}
    , decltype(_impl_.bordersize_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_renderpassenabled()) {
    _this->_impl_.renderpassenabled_ = new ::TDataBinding(*from._impl_.renderpassenabled_);
  }
  if (from._internal_has_rendertargetscale()) {
    _this->_impl_.rendertargetscale_ = new ::TDataBinding(*from._impl_.rendertargetscale_);
  }
  if (from._internal_has_boundingboxrootname()) {
    _this->_impl_.boundingboxrootname_ = new ::TDataBinding(*from._impl_.boundingboxrootname_);
  }
  if (from._internal_has_bordersize()) {
    _this->_impl_.bordersize_ = new ::TDataBinding(*from._impl_.bordersize_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TRenderLayerProperties)
}

inline void TRenderLayerProperties::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.renderpassenabled_){nullptr}
    , decltype(_impl_.rendertargetscale_){nullptr}
    , decltype(_impl_.boundingboxrootname_){nullptr}
    , decltype(_impl_.bordersize_){nullptr}
  };
}

TRenderLayerProperties::~TRenderLayerProperties() {
  // @@protoc_insertion_point(destructor:HmiWidget.TRenderLayerProperties)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TRenderLayerProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.renderpassenabled_;
  if (this != internal_default_instance()) delete _impl_.rendertargetscale_;
  if (this != internal_default_instance()) delete _impl_.boundingboxrootname_;
  if (this != internal_default_instance()) delete _impl_.bordersize_;
}

void TRenderLayerProperties::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TRenderLayerProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TRenderLayerProperties)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.renderpassenabled_ != nullptr);
      _impl_.renderpassenabled_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.rendertargetscale_ != nullptr);
      _impl_.rendertargetscale_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.boundingboxrootname_ != nullptr);
      _impl_.boundingboxrootname_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.bordersize_ != nullptr);
      _impl_.bordersize_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TRenderLayerProperties::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding renderPassEnabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_renderpassenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding renderTargetScale = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rendertargetscale(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding boundingBoxRootName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_boundingboxrootname(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding borderSize = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_bordersize(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TRenderLayerProperties::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TRenderLayerProperties)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding renderPassEnabled = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::renderpassenabled(this),
        _Internal::renderpassenabled(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding renderTargetScale = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rendertargetscale(this),
        _Internal::rendertargetscale(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding boundingBoxRootName = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::boundingboxrootname(this),
        _Internal::boundingboxrootname(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding borderSize = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::bordersize(this),
        _Internal::bordersize(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TRenderLayerProperties)
  return target;
}

size_t TRenderLayerProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TRenderLayerProperties)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .TDataBinding renderPassEnabled = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.renderpassenabled_);
    }

    // optional .TDataBinding renderTargetScale = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rendertargetscale_);
    }

    // optional .TDataBinding boundingBoxRootName = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.boundingboxrootname_);
    }

    // optional .TDataBinding borderSize = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bordersize_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TRenderLayerProperties::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TRenderLayerProperties::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TRenderLayerProperties::GetClassData() const { return &_class_data_; }


void TRenderLayerProperties::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TRenderLayerProperties*>(&to_msg);
  auto& from = static_cast<const TRenderLayerProperties&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TRenderLayerProperties)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_renderpassenabled()->::TDataBinding::MergeFrom(
          from._internal_renderpassenabled());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_rendertargetscale()->::TDataBinding::MergeFrom(
          from._internal_rendertargetscale());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_boundingboxrootname()->::TDataBinding::MergeFrom(
          from._internal_boundingboxrootname());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_bordersize()->::TDataBinding::MergeFrom(
          from._internal_bordersize());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TRenderLayerProperties::CopyFrom(const TRenderLayerProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TRenderLayerProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TRenderLayerProperties::IsInitialized() const {
  if (_internal_has_renderpassenabled()) {
    if (!_impl_.renderpassenabled_->IsInitialized()) return false;
  }
  if (_internal_has_rendertargetscale()) {
    if (!_impl_.rendertargetscale_->IsInitialized()) return false;
  }
  if (_internal_has_boundingboxrootname()) {
    if (!_impl_.boundingboxrootname_->IsInitialized()) return false;
  }
  if (_internal_has_bordersize()) {
    if (!_impl_.bordersize_->IsInitialized()) return false;
  }
  return true;
}

void TRenderLayerProperties::InternalSwap(TRenderLayerProperties* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TRenderLayerProperties, _impl_.bordersize_)
      + sizeof(TRenderLayerProperties::_impl_.bordersize_)
      - PROTOBUF_FIELD_OFFSET(TRenderLayerProperties, _impl_.renderpassenabled_)>(
          reinterpret_cast<char*>(&_impl_.renderpassenabled_),
          reinterpret_cast<char*>(&other->_impl_.renderpassenabled_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TRenderLayerProperties::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[3]);
}

// ===================================================================

class TNodeProperties_TRenderPassName::_Internal {
 public:
  using HasBits = decltype(std::declval<TNodeProperties_TRenderPassName>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TNodeProperties_TRenderPassName, _impl_._has_bits_);
  static const ::TDataBinding& name(const TNodeProperties_TRenderPassName* msg);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& enabled(const TNodeProperties_TRenderPassName* msg);
  static void set_has_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TDataBinding&
TNodeProperties_TRenderPassName::_Internal::name(const TNodeProperties_TRenderPassName* msg) {
  return *msg->_impl_.name_;
}
const ::TDataBinding&
TNodeProperties_TRenderPassName::_Internal::enabled(const TNodeProperties_TRenderPassName* msg) {
  return *msg->_impl_.enabled_;
}
void TNodeProperties_TRenderPassName::clear_name() {
  if (_impl_.name_ != nullptr) _impl_.name_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TNodeProperties_TRenderPassName::clear_enabled() {
  if (_impl_.enabled_ != nullptr) _impl_.enabled_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TNodeProperties_TRenderPassName::TNodeProperties_TRenderPassName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TNodeProperties.TRenderPassName)
}
TNodeProperties_TRenderPassName::TNodeProperties_TRenderPassName(const TNodeProperties_TRenderPassName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TNodeProperties_TRenderPassName* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){nullptr}
    , decltype(_impl_.enabled_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_name()) {
    _this->_impl_.name_ = new ::TDataBinding(*from._impl_.name_);
  }
  if (from._internal_has_enabled()) {
    _this->_impl_.enabled_ = new ::TDataBinding(*from._impl_.enabled_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TNodeProperties.TRenderPassName)
}

inline void TNodeProperties_TRenderPassName::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.name_){nullptr}
    , decltype(_impl_.enabled_){nullptr}
  };
}

TNodeProperties_TRenderPassName::~TNodeProperties_TRenderPassName() {
  // @@protoc_insertion_point(destructor:HmiWidget.TNodeProperties.TRenderPassName)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TNodeProperties_TRenderPassName::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.name_;
  if (this != internal_default_instance()) delete _impl_.enabled_;
}

void TNodeProperties_TRenderPassName::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TNodeProperties_TRenderPassName::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TNodeProperties.TRenderPassName)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.name_ != nullptr);
      _impl_.name_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.enabled_ != nullptr);
      _impl_.enabled_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TNodeProperties_TRenderPassName::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TDataBinding name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_name(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding enabled = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_enabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TNodeProperties_TRenderPassName::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TNodeProperties.TRenderPassName)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TDataBinding name = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::name(this),
        _Internal::name(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding enabled = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::enabled(this),
        _Internal::enabled(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TNodeProperties.TRenderPassName)
  return target;
}

size_t TNodeProperties_TRenderPassName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TNodeProperties.TRenderPassName)
  size_t total_size = 0;

  // required .TDataBinding name = 1;
  if (_internal_has_name()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.name_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TDataBinding enabled = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.enabled_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TNodeProperties_TRenderPassName::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TNodeProperties_TRenderPassName::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TNodeProperties_TRenderPassName::GetClassData() const { return &_class_data_; }


void TNodeProperties_TRenderPassName::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TNodeProperties_TRenderPassName*>(&to_msg);
  auto& from = static_cast<const TNodeProperties_TRenderPassName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TNodeProperties.TRenderPassName)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_name()->::TDataBinding::MergeFrom(
          from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_enabled()->::TDataBinding::MergeFrom(
          from._internal_enabled());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TNodeProperties_TRenderPassName::CopyFrom(const TNodeProperties_TRenderPassName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TNodeProperties.TRenderPassName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TNodeProperties_TRenderPassName::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_name()) {
    if (!_impl_.name_->IsInitialized()) return false;
  }
  if (_internal_has_enabled()) {
    if (!_impl_.enabled_->IsInitialized()) return false;
  }
  return true;
}

void TNodeProperties_TRenderPassName::InternalSwap(TNodeProperties_TRenderPassName* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TNodeProperties_TRenderPassName, _impl_.enabled_)
      + sizeof(TNodeProperties_TRenderPassName::_impl_.enabled_)
      - PROTOBUF_FIELD_OFFSET(TNodeProperties_TRenderPassName, _impl_.name_)>(
          reinterpret_cast<char*>(&_impl_.name_),
          reinterpret_cast<char*>(&other->_impl_.name_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TNodeProperties_TRenderPassName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[4]);
}

// ===================================================================

class TNodeProperties_TBoundingVolume_TBoundingBox::_Internal {
 public:
  using HasBits = decltype(std::declval<TNodeProperties_TBoundingVolume_TBoundingBox>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TNodeProperties_TBoundingVolume_TBoundingBox, _impl_._has_bits_);
  static const ::TDataBinding& minbound(const TNodeProperties_TBoundingVolume_TBoundingBox* msg);
  static void set_has_minbound(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& maxbound(const TNodeProperties_TBoundingVolume_TBoundingBox* msg);
  static void set_has_maxbound(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TDataBinding&
TNodeProperties_TBoundingVolume_TBoundingBox::_Internal::minbound(const TNodeProperties_TBoundingVolume_TBoundingBox* msg) {
  return *msg->_impl_.minbound_;
}
const ::TDataBinding&
TNodeProperties_TBoundingVolume_TBoundingBox::_Internal::maxbound(const TNodeProperties_TBoundingVolume_TBoundingBox* msg) {
  return *msg->_impl_.maxbound_;
}
void TNodeProperties_TBoundingVolume_TBoundingBox::clear_minbound() {
  if (_impl_.minbound_ != nullptr) _impl_.minbound_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TNodeProperties_TBoundingVolume_TBoundingBox::clear_maxbound() {
  if (_impl_.maxbound_ != nullptr) _impl_.maxbound_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TNodeProperties_TBoundingVolume_TBoundingBox::TNodeProperties_TBoundingVolume_TBoundingBox(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingBox)
}
TNodeProperties_TBoundingVolume_TBoundingBox::TNodeProperties_TBoundingVolume_TBoundingBox(const TNodeProperties_TBoundingVolume_TBoundingBox& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TNodeProperties_TBoundingVolume_TBoundingBox* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.minbound_){nullptr}
    , decltype(_impl_.maxbound_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_minbound()) {
    _this->_impl_.minbound_ = new ::TDataBinding(*from._impl_.minbound_);
  }
  if (from._internal_has_maxbound()) {
    _this->_impl_.maxbound_ = new ::TDataBinding(*from._impl_.maxbound_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingBox)
}

inline void TNodeProperties_TBoundingVolume_TBoundingBox::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.minbound_){nullptr}
    , decltype(_impl_.maxbound_){nullptr}
  };
}

TNodeProperties_TBoundingVolume_TBoundingBox::~TNodeProperties_TBoundingVolume_TBoundingBox() {
  // @@protoc_insertion_point(destructor:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingBox)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TNodeProperties_TBoundingVolume_TBoundingBox::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.minbound_;
  if (this != internal_default_instance()) delete _impl_.maxbound_;
}

void TNodeProperties_TBoundingVolume_TBoundingBox::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TNodeProperties_TBoundingVolume_TBoundingBox::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingBox)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.minbound_ != nullptr);
      _impl_.minbound_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.maxbound_ != nullptr);
      _impl_.maxbound_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TNodeProperties_TBoundingVolume_TBoundingBox::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding minBound = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_minbound(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding maxBound = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_maxbound(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TNodeProperties_TBoundingVolume_TBoundingBox::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingBox)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding minBound = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::minbound(this),
        _Internal::minbound(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding maxBound = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::maxbound(this),
        _Internal::maxbound(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingBox)
  return target;
}

size_t TNodeProperties_TBoundingVolume_TBoundingBox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingBox)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .TDataBinding minBound = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.minbound_);
    }

    // optional .TDataBinding maxBound = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.maxbound_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TNodeProperties_TBoundingVolume_TBoundingBox::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TNodeProperties_TBoundingVolume_TBoundingBox::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TNodeProperties_TBoundingVolume_TBoundingBox::GetClassData() const { return &_class_data_; }


void TNodeProperties_TBoundingVolume_TBoundingBox::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TNodeProperties_TBoundingVolume_TBoundingBox*>(&to_msg);
  auto& from = static_cast<const TNodeProperties_TBoundingVolume_TBoundingBox&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingBox)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_minbound()->::TDataBinding::MergeFrom(
          from._internal_minbound());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_maxbound()->::TDataBinding::MergeFrom(
          from._internal_maxbound());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TNodeProperties_TBoundingVolume_TBoundingBox::CopyFrom(const TNodeProperties_TBoundingVolume_TBoundingBox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingBox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TNodeProperties_TBoundingVolume_TBoundingBox::IsInitialized() const {
  if (_internal_has_minbound()) {
    if (!_impl_.minbound_->IsInitialized()) return false;
  }
  if (_internal_has_maxbound()) {
    if (!_impl_.maxbound_->IsInitialized()) return false;
  }
  return true;
}

void TNodeProperties_TBoundingVolume_TBoundingBox::InternalSwap(TNodeProperties_TBoundingVolume_TBoundingBox* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TNodeProperties_TBoundingVolume_TBoundingBox, _impl_.maxbound_)
      + sizeof(TNodeProperties_TBoundingVolume_TBoundingBox::_impl_.maxbound_)
      - PROTOBUF_FIELD_OFFSET(TNodeProperties_TBoundingVolume_TBoundingBox, _impl_.minbound_)>(
          reinterpret_cast<char*>(&_impl_.minbound_),
          reinterpret_cast<char*>(&other->_impl_.minbound_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TNodeProperties_TBoundingVolume_TBoundingBox::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[5]);
}

// ===================================================================

class TNodeProperties_TBoundingVolume_TBoundingSphere::_Internal {
 public:
  using HasBits = decltype(std::declval<TNodeProperties_TBoundingVolume_TBoundingSphere>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TNodeProperties_TBoundingVolume_TBoundingSphere, _impl_._has_bits_);
  static const ::TDataBinding& centerposition(const TNodeProperties_TBoundingVolume_TBoundingSphere* msg);
  static void set_has_centerposition(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& radius(const TNodeProperties_TBoundingVolume_TBoundingSphere* msg);
  static void set_has_radius(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TDataBinding&
TNodeProperties_TBoundingVolume_TBoundingSphere::_Internal::centerposition(const TNodeProperties_TBoundingVolume_TBoundingSphere* msg) {
  return *msg->_impl_.centerposition_;
}
const ::TDataBinding&
TNodeProperties_TBoundingVolume_TBoundingSphere::_Internal::radius(const TNodeProperties_TBoundingVolume_TBoundingSphere* msg) {
  return *msg->_impl_.radius_;
}
void TNodeProperties_TBoundingVolume_TBoundingSphere::clear_centerposition() {
  if (_impl_.centerposition_ != nullptr) _impl_.centerposition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TNodeProperties_TBoundingVolume_TBoundingSphere::clear_radius() {
  if (_impl_.radius_ != nullptr) _impl_.radius_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TNodeProperties_TBoundingVolume_TBoundingSphere::TNodeProperties_TBoundingVolume_TBoundingSphere(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingSphere)
}
TNodeProperties_TBoundingVolume_TBoundingSphere::TNodeProperties_TBoundingVolume_TBoundingSphere(const TNodeProperties_TBoundingVolume_TBoundingSphere& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TNodeProperties_TBoundingVolume_TBoundingSphere* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.centerposition_){nullptr}
    , decltype(_impl_.radius_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_centerposition()) {
    _this->_impl_.centerposition_ = new ::TDataBinding(*from._impl_.centerposition_);
  }
  if (from._internal_has_radius()) {
    _this->_impl_.radius_ = new ::TDataBinding(*from._impl_.radius_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingSphere)
}

inline void TNodeProperties_TBoundingVolume_TBoundingSphere::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.centerposition_){nullptr}
    , decltype(_impl_.radius_){nullptr}
  };
}

TNodeProperties_TBoundingVolume_TBoundingSphere::~TNodeProperties_TBoundingVolume_TBoundingSphere() {
  // @@protoc_insertion_point(destructor:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingSphere)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TNodeProperties_TBoundingVolume_TBoundingSphere::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.centerposition_;
  if (this != internal_default_instance()) delete _impl_.radius_;
}

void TNodeProperties_TBoundingVolume_TBoundingSphere::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TNodeProperties_TBoundingVolume_TBoundingSphere::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingSphere)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.centerposition_ != nullptr);
      _impl_.centerposition_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.radius_ != nullptr);
      _impl_.radius_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TNodeProperties_TBoundingVolume_TBoundingSphere::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding centerPosition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_centerposition(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding radius = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_radius(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TNodeProperties_TBoundingVolume_TBoundingSphere::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingSphere)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding centerPosition = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::centerposition(this),
        _Internal::centerposition(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding radius = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::radius(this),
        _Internal::radius(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingSphere)
  return target;
}

size_t TNodeProperties_TBoundingVolume_TBoundingSphere::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingSphere)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .TDataBinding centerPosition = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.centerposition_);
    }

    // optional .TDataBinding radius = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.radius_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TNodeProperties_TBoundingVolume_TBoundingSphere::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TNodeProperties_TBoundingVolume_TBoundingSphere::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TNodeProperties_TBoundingVolume_TBoundingSphere::GetClassData() const { return &_class_data_; }


void TNodeProperties_TBoundingVolume_TBoundingSphere::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TNodeProperties_TBoundingVolume_TBoundingSphere*>(&to_msg);
  auto& from = static_cast<const TNodeProperties_TBoundingVolume_TBoundingSphere&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingSphere)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_centerposition()->::TDataBinding::MergeFrom(
          from._internal_centerposition());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_radius()->::TDataBinding::MergeFrom(
          from._internal_radius());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TNodeProperties_TBoundingVolume_TBoundingSphere::CopyFrom(const TNodeProperties_TBoundingVolume_TBoundingSphere& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TNodeProperties.TBoundingVolume.TBoundingSphere)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TNodeProperties_TBoundingVolume_TBoundingSphere::IsInitialized() const {
  if (_internal_has_centerposition()) {
    if (!_impl_.centerposition_->IsInitialized()) return false;
  }
  if (_internal_has_radius()) {
    if (!_impl_.radius_->IsInitialized()) return false;
  }
  return true;
}

void TNodeProperties_TBoundingVolume_TBoundingSphere::InternalSwap(TNodeProperties_TBoundingVolume_TBoundingSphere* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TNodeProperties_TBoundingVolume_TBoundingSphere, _impl_.radius_)
      + sizeof(TNodeProperties_TBoundingVolume_TBoundingSphere::_impl_.radius_)
      - PROTOBUF_FIELD_OFFSET(TNodeProperties_TBoundingVolume_TBoundingSphere, _impl_.centerposition_)>(
          reinterpret_cast<char*>(&_impl_.centerposition_),
          reinterpret_cast<char*>(&other->_impl_.centerposition_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TNodeProperties_TBoundingVolume_TBoundingSphere::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[6]);
}

// ===================================================================

class TNodeProperties_TBoundingVolume::_Internal {
 public:
  using HasBits = decltype(std::declval<TNodeProperties_TBoundingVolume>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TNodeProperties_TBoundingVolume, _impl_._has_bits_);
  static const ::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingBox& boundingbox(const TNodeProperties_TBoundingVolume* msg);
  static void set_has_boundingbox(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingSphere& boundingsphere(const TNodeProperties_TBoundingVolume* msg);
  static void set_has_boundingsphere(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingBox&
TNodeProperties_TBoundingVolume::_Internal::boundingbox(const TNodeProperties_TBoundingVolume* msg) {
  return *msg->_impl_.boundingbox_;
}
const ::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingSphere&
TNodeProperties_TBoundingVolume::_Internal::boundingsphere(const TNodeProperties_TBoundingVolume* msg) {
  return *msg->_impl_.boundingsphere_;
}
TNodeProperties_TBoundingVolume::TNodeProperties_TBoundingVolume(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TNodeProperties.TBoundingVolume)
}
TNodeProperties_TBoundingVolume::TNodeProperties_TBoundingVolume(const TNodeProperties_TBoundingVolume& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TNodeProperties_TBoundingVolume* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.boundingbox_){nullptr}
    , decltype(_impl_.boundingsphere_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_boundingbox()) {
    _this->_impl_.boundingbox_ = new ::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingBox(*from._impl_.boundingbox_);
  }
  if (from._internal_has_boundingsphere()) {
    _this->_impl_.boundingsphere_ = new ::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingSphere(*from._impl_.boundingsphere_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TNodeProperties.TBoundingVolume)
}

inline void TNodeProperties_TBoundingVolume::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.boundingbox_){nullptr}
    , decltype(_impl_.boundingsphere_){nullptr}
  };
}

TNodeProperties_TBoundingVolume::~TNodeProperties_TBoundingVolume() {
  // @@protoc_insertion_point(destructor:HmiWidget.TNodeProperties.TBoundingVolume)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TNodeProperties_TBoundingVolume::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.boundingbox_;
  if (this != internal_default_instance()) delete _impl_.boundingsphere_;
}

void TNodeProperties_TBoundingVolume::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TNodeProperties_TBoundingVolume::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TNodeProperties.TBoundingVolume)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.boundingbox_ != nullptr);
      _impl_.boundingbox_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.boundingsphere_ != nullptr);
      _impl_.boundingsphere_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TNodeProperties_TBoundingVolume::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .HmiWidget.TNodeProperties.TBoundingVolume.TBoundingBox boundingBox = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_boundingbox(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TNodeProperties.TBoundingVolume.TBoundingSphere boundingSphere = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_boundingsphere(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TNodeProperties_TBoundingVolume::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TNodeProperties.TBoundingVolume)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HmiWidget.TNodeProperties.TBoundingVolume.TBoundingBox boundingBox = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::boundingbox(this),
        _Internal::boundingbox(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TNodeProperties.TBoundingVolume.TBoundingSphere boundingSphere = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::boundingsphere(this),
        _Internal::boundingsphere(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TNodeProperties.TBoundingVolume)
  return target;
}

size_t TNodeProperties_TBoundingVolume::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TNodeProperties.TBoundingVolume)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .HmiWidget.TNodeProperties.TBoundingVolume.TBoundingBox boundingBox = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.boundingbox_);
    }

    // optional .HmiWidget.TNodeProperties.TBoundingVolume.TBoundingSphere boundingSphere = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.boundingsphere_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TNodeProperties_TBoundingVolume::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TNodeProperties_TBoundingVolume::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TNodeProperties_TBoundingVolume::GetClassData() const { return &_class_data_; }


void TNodeProperties_TBoundingVolume::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TNodeProperties_TBoundingVolume*>(&to_msg);
  auto& from = static_cast<const TNodeProperties_TBoundingVolume&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TNodeProperties.TBoundingVolume)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_boundingbox()->::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingBox::MergeFrom(
          from._internal_boundingbox());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_boundingsphere()->::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingSphere::MergeFrom(
          from._internal_boundingsphere());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TNodeProperties_TBoundingVolume::CopyFrom(const TNodeProperties_TBoundingVolume& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TNodeProperties.TBoundingVolume)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TNodeProperties_TBoundingVolume::IsInitialized() const {
  if (_internal_has_boundingbox()) {
    if (!_impl_.boundingbox_->IsInitialized()) return false;
  }
  if (_internal_has_boundingsphere()) {
    if (!_impl_.boundingsphere_->IsInitialized()) return false;
  }
  return true;
}

void TNodeProperties_TBoundingVolume::InternalSwap(TNodeProperties_TBoundingVolume* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TNodeProperties_TBoundingVolume, _impl_.boundingsphere_)
      + sizeof(TNodeProperties_TBoundingVolume::_impl_.boundingsphere_)
      - PROTOBUF_FIELD_OFFSET(TNodeProperties_TBoundingVolume, _impl_.boundingbox_)>(
          reinterpret_cast<char*>(&_impl_.boundingbox_),
          reinterpret_cast<char*>(&other->_impl_.boundingbox_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TNodeProperties_TBoundingVolume::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[7]);
}

// ===================================================================

class TNodeProperties::_Internal {
 public:
  using HasBits = decltype(std::declval<TNodeProperties>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TNodeProperties, _impl_._has_bits_);
  static const ::TDataBinding& visible(const TNodeProperties* msg);
  static void set_has_visible(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& renderorderrank(const TNodeProperties* msg);
  static void set_has_renderorderrank(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& childsortorderrank(const TNodeProperties* msg);
  static void set_has_childsortorderrank(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& scopemask(const TNodeProperties* msg);
  static void set_has_scopemask(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& renderorderbin(const TNodeProperties* msg);
  static void set_has_renderorderbin(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& material(const TNodeProperties* msg);
  static void set_has_material(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& renderpassname(const TNodeProperties* msg);
  static void set_has_renderpassname(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TDataBinding& renderpassenabled(const TNodeProperties* msg);
  static void set_has_renderpassenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::HmiWidget::TNodeProperties_TBoundingVolume& boundingvolume(const TNodeProperties* msg);
  static void set_has_boundingvolume(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

const ::TDataBinding&
TNodeProperties::_Internal::visible(const TNodeProperties* msg) {
  return *msg->_impl_.visible_;
}
const ::TDataBinding&
TNodeProperties::_Internal::renderorderrank(const TNodeProperties* msg) {
  return *msg->_impl_.renderorderrank_;
}
const ::TDataBinding&
TNodeProperties::_Internal::childsortorderrank(const TNodeProperties* msg) {
  return *msg->_impl_.childsortorderrank_;
}
const ::TDataBinding&
TNodeProperties::_Internal::scopemask(const TNodeProperties* msg) {
  return *msg->_impl_.scopemask_;
}
const ::TDataBinding&
TNodeProperties::_Internal::renderorderbin(const TNodeProperties* msg) {
  return *msg->_impl_.renderorderbin_;
}
const ::TDataBinding&
TNodeProperties::_Internal::material(const TNodeProperties* msg) {
  return *msg->_impl_.material_;
}
const ::TDataBinding&
TNodeProperties::_Internal::renderpassname(const TNodeProperties* msg) {
  return *msg->_impl_.renderpassname_;
}
const ::TDataBinding&
TNodeProperties::_Internal::renderpassenabled(const TNodeProperties* msg) {
  return *msg->_impl_.renderpassenabled_;
}
const ::HmiWidget::TNodeProperties_TBoundingVolume&
TNodeProperties::_Internal::boundingvolume(const TNodeProperties* msg) {
  return *msg->_impl_.boundingvolume_;
}
void TNodeProperties::clear_visible() {
  if (_impl_.visible_ != nullptr) _impl_.visible_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TNodeProperties::clear_renderorderrank() {
  if (_impl_.renderorderrank_ != nullptr) _impl_.renderorderrank_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TNodeProperties::clear_childsortorderrank() {
  if (_impl_.childsortorderrank_ != nullptr) _impl_.childsortorderrank_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TNodeProperties::clear_scopemask() {
  if (_impl_.scopemask_ != nullptr) _impl_.scopemask_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TNodeProperties::clear_renderorderbin() {
  if (_impl_.renderorderbin_ != nullptr) _impl_.renderorderbin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TNodeProperties::clear_material() {
  if (_impl_.material_ != nullptr) _impl_.material_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TNodeProperties::clear_renderpassname() {
  if (_impl_.renderpassname_ != nullptr) _impl_.renderpassname_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void TNodeProperties::clear_renderpassenabled() {
  if (_impl_.renderpassenabled_ != nullptr) _impl_.renderpassenabled_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
TNodeProperties::TNodeProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TNodeProperties)
}
TNodeProperties::TNodeProperties(const TNodeProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TNodeProperties* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.renderpassnameext_){from._impl_.renderpassnameext_}
    , decltype(_impl_.renderpassenabledext_){from._impl_.renderpassenabledext_}
    , decltype(_impl_.visible_){nullptr}
    , decltype(_impl_.renderorderrank_){nullptr}
    , decltype(_impl_.childsortorderrank_){nullptr}
    , decltype(_impl_.scopemask_){nullptr}
    , decltype(_impl_.renderorderbin_){nullptr}
    , decltype(_impl_.material_){nullptr}
    , decltype(_impl_.renderpassname_){nullptr}
    , decltype(_impl_.renderpassenabled_){nullptr}
    , decltype(_impl_.boundingvolume_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_visible()) {
    _this->_impl_.visible_ = new ::TDataBinding(*from._impl_.visible_);
  }
  if (from._internal_has_renderorderrank()) {
    _this->_impl_.renderorderrank_ = new ::TDataBinding(*from._impl_.renderorderrank_);
  }
  if (from._internal_has_childsortorderrank()) {
    _this->_impl_.childsortorderrank_ = new ::TDataBinding(*from._impl_.childsortorderrank_);
  }
  if (from._internal_has_scopemask()) {
    _this->_impl_.scopemask_ = new ::TDataBinding(*from._impl_.scopemask_);
  }
  if (from._internal_has_renderorderbin()) {
    _this->_impl_.renderorderbin_ = new ::TDataBinding(*from._impl_.renderorderbin_);
  }
  if (from._internal_has_material()) {
    _this->_impl_.material_ = new ::TDataBinding(*from._impl_.material_);
  }
  if (from._internal_has_renderpassname()) {
    _this->_impl_.renderpassname_ = new ::TDataBinding(*from._impl_.renderpassname_);
  }
  if (from._internal_has_renderpassenabled()) {
    _this->_impl_.renderpassenabled_ = new ::TDataBinding(*from._impl_.renderpassenabled_);
  }
  if (from._internal_has_boundingvolume()) {
    _this->_impl_.boundingvolume_ = new ::HmiWidget::TNodeProperties_TBoundingVolume(*from._impl_.boundingvolume_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TNodeProperties)
}

inline void TNodeProperties::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.renderpassnameext_){arena}
    , decltype(_impl_.renderpassenabledext_){arena}
    , decltype(_impl_.visible_){nullptr}
    , decltype(_impl_.renderorderrank_){nullptr}
    , decltype(_impl_.childsortorderrank_){nullptr}
    , decltype(_impl_.scopemask_){nullptr}
    , decltype(_impl_.renderorderbin_){nullptr}
    , decltype(_impl_.material_){nullptr}
    , decltype(_impl_.renderpassname_){nullptr}
    , decltype(_impl_.renderpassenabled_){nullptr}
    , decltype(_impl_.boundingvolume_){nullptr}
  };
}

TNodeProperties::~TNodeProperties() {
  // @@protoc_insertion_point(destructor:HmiWidget.TNodeProperties)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TNodeProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.renderpassnameext_.~RepeatedPtrField();
  _impl_.renderpassenabledext_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.visible_;
  if (this != internal_default_instance()) delete _impl_.renderorderrank_;
  if (this != internal_default_instance()) delete _impl_.childsortorderrank_;
  if (this != internal_default_instance()) delete _impl_.scopemask_;
  if (this != internal_default_instance()) delete _impl_.renderorderbin_;
  if (this != internal_default_instance()) delete _impl_.material_;
  if (this != internal_default_instance()) delete _impl_.renderpassname_;
  if (this != internal_default_instance()) delete _impl_.renderpassenabled_;
  if (this != internal_default_instance()) delete _impl_.boundingvolume_;
}

void TNodeProperties::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TNodeProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TNodeProperties)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.renderpassnameext_.Clear();
  _impl_.renderpassenabledext_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.visible_ != nullptr);
      _impl_.visible_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.renderorderrank_ != nullptr);
      _impl_.renderorderrank_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.childsortorderrank_ != nullptr);
      _impl_.childsortorderrank_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.scopemask_ != nullptr);
      _impl_.scopemask_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.renderorderbin_ != nullptr);
      _impl_.renderorderbin_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.material_ != nullptr);
      _impl_.material_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.renderpassname_ != nullptr);
      _impl_.renderpassname_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.renderpassenabled_ != nullptr);
      _impl_.renderpassenabled_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(_impl_.boundingvolume_ != nullptr);
    _impl_.boundingvolume_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TNodeProperties::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding visible = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_visible(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding renderOrderRank = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_renderorderrank(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding childSortOrderRank = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_childsortorderrank(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding scopeMask = 4 [deprecated = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_scopemask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding renderOrderBin = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_renderorderbin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding material = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_material(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding renderPassName = 7 [deprecated = true];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_renderpassname(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding renderPassEnabled = 8 [deprecated = true];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_renderpassenabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TNodeProperties.TRenderPassName renderPassNameEXT = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_renderpassnameext(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TNodeProperties.TBoundingVolume boundingVolume = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_boundingvolume(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TNodeProperties.TRenderPassName renderPassEnabledEXT = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_renderpassenabledext(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TNodeProperties::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TNodeProperties)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding visible = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::visible(this),
        _Internal::visible(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding renderOrderRank = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::renderorderrank(this),
        _Internal::renderorderrank(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding childSortOrderRank = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::childsortorderrank(this),
        _Internal::childsortorderrank(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding scopeMask = 4 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::scopemask(this),
        _Internal::scopemask(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding renderOrderBin = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::renderorderbin(this),
        _Internal::renderorderbin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding material = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::material(this),
        _Internal::material(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding renderPassName = 7 [deprecated = true];
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::renderpassname(this),
        _Internal::renderpassname(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding renderPassEnabled = 8 [deprecated = true];
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::renderpassenabled(this),
        _Internal::renderpassenabled(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TNodeProperties.TRenderPassName renderPassNameEXT = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_renderpassnameext_size()); i < n; i++) {
    const auto& repfield = this->_internal_renderpassnameext(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TNodeProperties.TBoundingVolume boundingVolume = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::boundingvolume(this),
        _Internal::boundingvolume(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TNodeProperties.TRenderPassName renderPassEnabledEXT = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_renderpassenabledext_size()); i < n; i++) {
    const auto& repfield = this->_internal_renderpassenabledext(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TNodeProperties)
  return target;
}

size_t TNodeProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TNodeProperties)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TNodeProperties.TRenderPassName renderPassNameEXT = 9;
  total_size += 1UL * this->_internal_renderpassnameext_size();
  for (const auto& msg : this->_impl_.renderpassnameext_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TNodeProperties.TRenderPassName renderPassEnabledEXT = 11;
  total_size += 1UL * this->_internal_renderpassenabledext_size();
  for (const auto& msg : this->_impl_.renderpassenabledext_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TDataBinding visible = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.visible_);
    }

    // optional .TDataBinding renderOrderRank = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.renderorderrank_);
    }

    // optional .TDataBinding childSortOrderRank = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childsortorderrank_);
    }

    // optional .TDataBinding scopeMask = 4 [deprecated = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scopemask_);
    }

    // optional .TDataBinding renderOrderBin = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.renderorderbin_);
    }

    // optional .TDataBinding material = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.material_);
    }

    // optional .TDataBinding renderPassName = 7 [deprecated = true];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.renderpassname_);
    }

    // optional .TDataBinding renderPassEnabled = 8 [deprecated = true];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.renderpassenabled_);
    }

  }
  // optional .HmiWidget.TNodeProperties.TBoundingVolume boundingVolume = 10;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.boundingvolume_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TNodeProperties::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TNodeProperties::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TNodeProperties::GetClassData() const { return &_class_data_; }


void TNodeProperties::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TNodeProperties*>(&to_msg);
  auto& from = static_cast<const TNodeProperties&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TNodeProperties)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.renderpassnameext_.MergeFrom(from._impl_.renderpassnameext_);
  _this->_impl_.renderpassenabledext_.MergeFrom(from._impl_.renderpassenabledext_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_visible()->::TDataBinding::MergeFrom(
          from._internal_visible());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_renderorderrank()->::TDataBinding::MergeFrom(
          from._internal_renderorderrank());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_childsortorderrank()->::TDataBinding::MergeFrom(
          from._internal_childsortorderrank());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_scopemask()->::TDataBinding::MergeFrom(
          from._internal_scopemask());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_renderorderbin()->::TDataBinding::MergeFrom(
          from._internal_renderorderbin());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_material()->::TDataBinding::MergeFrom(
          from._internal_material());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_renderpassname()->::TDataBinding::MergeFrom(
          from._internal_renderpassname());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_renderpassenabled()->::TDataBinding::MergeFrom(
          from._internal_renderpassenabled());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_mutable_boundingvolume()->::HmiWidget::TNodeProperties_TBoundingVolume::MergeFrom(
        from._internal_boundingvolume());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TNodeProperties::CopyFrom(const TNodeProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TNodeProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TNodeProperties::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.renderpassnameext_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.renderpassenabledext_))
    return false;
  if (_internal_has_visible()) {
    if (!_impl_.visible_->IsInitialized()) return false;
  }
  if (_internal_has_renderorderrank()) {
    if (!_impl_.renderorderrank_->IsInitialized()) return false;
  }
  if (_internal_has_childsortorderrank()) {
    if (!_impl_.childsortorderrank_->IsInitialized()) return false;
  }
  if (_internal_has_scopemask()) {
    if (!_impl_.scopemask_->IsInitialized()) return false;
  }
  if (_internal_has_renderorderbin()) {
    if (!_impl_.renderorderbin_->IsInitialized()) return false;
  }
  if (_internal_has_material()) {
    if (!_impl_.material_->IsInitialized()) return false;
  }
  if (_internal_has_renderpassname()) {
    if (!_impl_.renderpassname_->IsInitialized()) return false;
  }
  if (_internal_has_renderpassenabled()) {
    if (!_impl_.renderpassenabled_->IsInitialized()) return false;
  }
  if (_internal_has_boundingvolume()) {
    if (!_impl_.boundingvolume_->IsInitialized()) return false;
  }
  return true;
}

void TNodeProperties::InternalSwap(TNodeProperties* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.renderpassnameext_.InternalSwap(&other->_impl_.renderpassnameext_);
  _impl_.renderpassenabledext_.InternalSwap(&other->_impl_.renderpassenabledext_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TNodeProperties, _impl_.boundingvolume_)
      + sizeof(TNodeProperties::_impl_.boundingvolume_)
      - PROTOBUF_FIELD_OFFSET(TNodeProperties, _impl_.visible_)>(
          reinterpret_cast<char*>(&_impl_.visible_),
          reinterpret_cast<char*>(&other->_impl_.visible_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TNodeProperties::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[8]);
}

// ===================================================================

class TTextNodeProperties::_Internal {
 public:
  using HasBits = decltype(std::declval<TTextNodeProperties>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TTextNodeProperties, _impl_._has_bits_);
  static const ::TDataBinding& textcontent(const TTextNodeProperties* msg);
  static void set_has_textcontent(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TDataBinding&
TTextNodeProperties::_Internal::textcontent(const TTextNodeProperties* msg) {
  return *msg->_impl_.textcontent_;
}
void TTextNodeProperties::clear_textcontent() {
  if (_impl_.textcontent_ != nullptr) _impl_.textcontent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TTextNodeProperties::TTextNodeProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TTextNodeProperties)
}
TTextNodeProperties::TTextNodeProperties(const TTextNodeProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TTextNodeProperties* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.textcontent_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_textcontent()) {
    _this->_impl_.textcontent_ = new ::TDataBinding(*from._impl_.textcontent_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TTextNodeProperties)
}

inline void TTextNodeProperties::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.textcontent_){nullptr}
  };
}

TTextNodeProperties::~TTextNodeProperties() {
  // @@protoc_insertion_point(destructor:HmiWidget.TTextNodeProperties)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TTextNodeProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.textcontent_;
}

void TTextNodeProperties::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TTextNodeProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TTextNodeProperties)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.textcontent_ != nullptr);
    _impl_.textcontent_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TTextNodeProperties::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding textContent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_textcontent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TTextNodeProperties::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TTextNodeProperties)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding textContent = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::textcontent(this),
        _Internal::textcontent(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TTextNodeProperties)
  return target;
}

size_t TTextNodeProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TTextNodeProperties)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .TDataBinding textContent = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.textcontent_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TTextNodeProperties::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TTextNodeProperties::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TTextNodeProperties::GetClassData() const { return &_class_data_; }


void TTextNodeProperties::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TTextNodeProperties*>(&to_msg);
  auto& from = static_cast<const TTextNodeProperties&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TTextNodeProperties)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_textcontent()) {
    _this->_internal_mutable_textcontent()->::TDataBinding::MergeFrom(
        from._internal_textcontent());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TTextNodeProperties::CopyFrom(const TTextNodeProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TTextNodeProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTextNodeProperties::IsInitialized() const {
  if (_internal_has_textcontent()) {
    if (!_impl_.textcontent_->IsInitialized()) return false;
  }
  return true;
}

void TTextNodeProperties::InternalSwap(TTextNodeProperties* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.textcontent_, other->_impl_.textcontent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TTextNodeProperties::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[9]);
}

// ===================================================================

class TCameraNodeProperties::_Internal {
 public:
  using HasBits = decltype(std::declval<TCameraNodeProperties>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TCameraNodeProperties, _impl_._has_bits_);
  static const ::TDataBinding& projectiontype(const TCameraNodeProperties* msg);
  static void set_has_projectiontype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& horizontalfov(const TCameraNodeProperties* msg);
  static void set_has_horizontalfov(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& aspectratio(const TCameraNodeProperties* msg);
  static void set_has_aspectratio(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& horizontalfocallength(const TCameraNodeProperties* msg);
  static void set_has_horizontalfocallength(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& viewport(const TCameraNodeProperties* msg);
  static void set_has_viewport(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& nearplane(const TCameraNodeProperties* msg);
  static void set_has_nearplane(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& farplane(const TCameraNodeProperties* msg);
  static void set_has_farplane(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TDataBinding& rightplane(const TCameraNodeProperties* msg);
  static void set_has_rightplane(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TDataBinding& leftplane(const TCameraNodeProperties* msg);
  static void set_has_leftplane(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::TDataBinding& topplane(const TCameraNodeProperties* msg);
  static void set_has_topplane(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::TDataBinding& bottomplane(const TCameraNodeProperties* msg);
  static void set_has_bottomplane(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
};

const ::TDataBinding&
TCameraNodeProperties::_Internal::projectiontype(const TCameraNodeProperties* msg) {
  return *msg->_impl_.projectiontype_;
}
const ::TDataBinding&
TCameraNodeProperties::_Internal::horizontalfov(const TCameraNodeProperties* msg) {
  return *msg->_impl_.horizontalfov_;
}
const ::TDataBinding&
TCameraNodeProperties::_Internal::aspectratio(const TCameraNodeProperties* msg) {
  return *msg->_impl_.aspectratio_;
}
const ::TDataBinding&
TCameraNodeProperties::_Internal::horizontalfocallength(const TCameraNodeProperties* msg) {
  return *msg->_impl_.horizontalfocallength_;
}
const ::TDataBinding&
TCameraNodeProperties::_Internal::viewport(const TCameraNodeProperties* msg) {
  return *msg->_impl_.viewport_;
}
const ::TDataBinding&
TCameraNodeProperties::_Internal::nearplane(const TCameraNodeProperties* msg) {
  return *msg->_impl_.nearplane_;
}
const ::TDataBinding&
TCameraNodeProperties::_Internal::farplane(const TCameraNodeProperties* msg) {
  return *msg->_impl_.farplane_;
}
const ::TDataBinding&
TCameraNodeProperties::_Internal::rightplane(const TCameraNodeProperties* msg) {
  return *msg->_impl_.rightplane_;
}
const ::TDataBinding&
TCameraNodeProperties::_Internal::leftplane(const TCameraNodeProperties* msg) {
  return *msg->_impl_.leftplane_;
}
const ::TDataBinding&
TCameraNodeProperties::_Internal::topplane(const TCameraNodeProperties* msg) {
  return *msg->_impl_.topplane_;
}
const ::TDataBinding&
TCameraNodeProperties::_Internal::bottomplane(const TCameraNodeProperties* msg) {
  return *msg->_impl_.bottomplane_;
}
void TCameraNodeProperties::clear_projectiontype() {
  if (_impl_.projectiontype_ != nullptr) _impl_.projectiontype_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TCameraNodeProperties::clear_horizontalfov() {
  if (_impl_.horizontalfov_ != nullptr) _impl_.horizontalfov_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TCameraNodeProperties::clear_aspectratio() {
  if (_impl_.aspectratio_ != nullptr) _impl_.aspectratio_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TCameraNodeProperties::clear_horizontalfocallength() {
  if (_impl_.horizontalfocallength_ != nullptr) _impl_.horizontalfocallength_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TCameraNodeProperties::clear_viewport() {
  if (_impl_.viewport_ != nullptr) _impl_.viewport_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TCameraNodeProperties::clear_nearplane() {
  if (_impl_.nearplane_ != nullptr) _impl_.nearplane_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TCameraNodeProperties::clear_farplane() {
  if (_impl_.farplane_ != nullptr) _impl_.farplane_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void TCameraNodeProperties::clear_rightplane() {
  if (_impl_.rightplane_ != nullptr) _impl_.rightplane_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void TCameraNodeProperties::clear_leftplane() {
  if (_impl_.leftplane_ != nullptr) _impl_.leftplane_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void TCameraNodeProperties::clear_topplane() {
  if (_impl_.topplane_ != nullptr) _impl_.topplane_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void TCameraNodeProperties::clear_bottomplane() {
  if (_impl_.bottomplane_ != nullptr) _impl_.bottomplane_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
TCameraNodeProperties::TCameraNodeProperties(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TCameraNodeProperties)
}
TCameraNodeProperties::TCameraNodeProperties(const TCameraNodeProperties& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TCameraNodeProperties* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.projectiontype_){nullptr}
    , decltype(_impl_.horizontalfov_){nullptr}
    , decltype(_impl_.aspectratio_){nullptr}
    , decltype(_impl_.horizontalfocallength_){nullptr}
    , decltype(_impl_.viewport_){nullptr}
    , decltype(_impl_.nearplane_){nullptr}
    , decltype(_impl_.farplane_){nullptr}
    , decltype(_impl_.rightplane_){nullptr}
    , decltype(_impl_.leftplane_){nullptr}
    , decltype(_impl_.topplane_){nullptr}
    , decltype(_impl_.bottomplane_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_projectiontype()) {
    _this->_impl_.projectiontype_ = new ::TDataBinding(*from._impl_.projectiontype_);
  }
  if (from._internal_has_horizontalfov()) {
    _this->_impl_.horizontalfov_ = new ::TDataBinding(*from._impl_.horizontalfov_);
  }
  if (from._internal_has_aspectratio()) {
    _this->_impl_.aspectratio_ = new ::TDataBinding(*from._impl_.aspectratio_);
  }
  if (from._internal_has_horizontalfocallength()) {
    _this->_impl_.horizontalfocallength_ = new ::TDataBinding(*from._impl_.horizontalfocallength_);
  }
  if (from._internal_has_viewport()) {
    _this->_impl_.viewport_ = new ::TDataBinding(*from._impl_.viewport_);
  }
  if (from._internal_has_nearplane()) {
    _this->_impl_.nearplane_ = new ::TDataBinding(*from._impl_.nearplane_);
  }
  if (from._internal_has_farplane()) {
    _this->_impl_.farplane_ = new ::TDataBinding(*from._impl_.farplane_);
  }
  if (from._internal_has_rightplane()) {
    _this->_impl_.rightplane_ = new ::TDataBinding(*from._impl_.rightplane_);
  }
  if (from._internal_has_leftplane()) {
    _this->_impl_.leftplane_ = new ::TDataBinding(*from._impl_.leftplane_);
  }
  if (from._internal_has_topplane()) {
    _this->_impl_.topplane_ = new ::TDataBinding(*from._impl_.topplane_);
  }
  if (from._internal_has_bottomplane()) {
    _this->_impl_.bottomplane_ = new ::TDataBinding(*from._impl_.bottomplane_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TCameraNodeProperties)
}

inline void TCameraNodeProperties::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.projectiontype_){nullptr}
    , decltype(_impl_.horizontalfov_){nullptr}
    , decltype(_impl_.aspectratio_){nullptr}
    , decltype(_impl_.horizontalfocallength_){nullptr}
    , decltype(_impl_.viewport_){nullptr}
    , decltype(_impl_.nearplane_){nullptr}
    , decltype(_impl_.farplane_){nullptr}
    , decltype(_impl_.rightplane_){nullptr}
    , decltype(_impl_.leftplane_){nullptr}
    , decltype(_impl_.topplane_){nullptr}
    , decltype(_impl_.bottomplane_){nullptr}
  };
}

TCameraNodeProperties::~TCameraNodeProperties() {
  // @@protoc_insertion_point(destructor:HmiWidget.TCameraNodeProperties)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TCameraNodeProperties::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.projectiontype_;
  if (this != internal_default_instance()) delete _impl_.horizontalfov_;
  if (this != internal_default_instance()) delete _impl_.aspectratio_;
  if (this != internal_default_instance()) delete _impl_.horizontalfocallength_;
  if (this != internal_default_instance()) delete _impl_.viewport_;
  if (this != internal_default_instance()) delete _impl_.nearplane_;
  if (this != internal_default_instance()) delete _impl_.farplane_;
  if (this != internal_default_instance()) delete _impl_.rightplane_;
  if (this != internal_default_instance()) delete _impl_.leftplane_;
  if (this != internal_default_instance()) delete _impl_.topplane_;
  if (this != internal_default_instance()) delete _impl_.bottomplane_;
}

void TCameraNodeProperties::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TCameraNodeProperties::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TCameraNodeProperties)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.projectiontype_ != nullptr);
      _impl_.projectiontype_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.horizontalfov_ != nullptr);
      _impl_.horizontalfov_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.aspectratio_ != nullptr);
      _impl_.aspectratio_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.horizontalfocallength_ != nullptr);
      _impl_.horizontalfocallength_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.viewport_ != nullptr);
      _impl_.viewport_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.nearplane_ != nullptr);
      _impl_.nearplane_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.farplane_ != nullptr);
      _impl_.farplane_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.rightplane_ != nullptr);
      _impl_.rightplane_->Clear();
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.leftplane_ != nullptr);
      _impl_.leftplane_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.topplane_ != nullptr);
      _impl_.topplane_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.bottomplane_ != nullptr);
      _impl_.bottomplane_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TCameraNodeProperties::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding projectionType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectiontype(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding horizontalFOV = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_horizontalfov(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding aspectRatio = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_aspectratio(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding horizontalFocalLength = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_horizontalfocallength(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding viewport = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewport(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding nearPlane = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_nearplane(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding farPlane = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_farplane(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rightPlane = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_rightplane(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding leftPlane = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_leftplane(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding topPlane = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_topplane(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding bottomPlane = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_bottomplane(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TCameraNodeProperties::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TCameraNodeProperties)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding projectionType = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::projectiontype(this),
        _Internal::projectiontype(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding horizontalFOV = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::horizontalfov(this),
        _Internal::horizontalfov(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding aspectRatio = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::aspectratio(this),
        _Internal::aspectratio(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding horizontalFocalLength = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::horizontalfocallength(this),
        _Internal::horizontalfocallength(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding viewport = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::viewport(this),
        _Internal::viewport(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding nearPlane = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::nearplane(this),
        _Internal::nearplane(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding farPlane = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::farplane(this),
        _Internal::farplane(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rightPlane = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::rightplane(this),
        _Internal::rightplane(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding leftPlane = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::leftplane(this),
        _Internal::leftplane(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding topPlane = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::topplane(this),
        _Internal::topplane(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding bottomPlane = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::bottomplane(this),
        _Internal::bottomplane(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TCameraNodeProperties)
  return target;
}

size_t TCameraNodeProperties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TCameraNodeProperties)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TDataBinding projectionType = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.projectiontype_);
    }

    // optional .TDataBinding horizontalFOV = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.horizontalfov_);
    }

    // optional .TDataBinding aspectRatio = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.aspectratio_);
    }

    // optional .TDataBinding horizontalFocalLength = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.horizontalfocallength_);
    }

    // optional .TDataBinding viewport = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.viewport_);
    }

    // optional .TDataBinding nearPlane = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nearplane_);
    }

    // optional .TDataBinding farPlane = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.farplane_);
    }

    // optional .TDataBinding rightPlane = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rightplane_);
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional .TDataBinding leftPlane = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.leftplane_);
    }

    // optional .TDataBinding topPlane = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.topplane_);
    }

    // optional .TDataBinding bottomPlane = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bottomplane_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TCameraNodeProperties::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TCameraNodeProperties::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TCameraNodeProperties::GetClassData() const { return &_class_data_; }


void TCameraNodeProperties::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TCameraNodeProperties*>(&to_msg);
  auto& from = static_cast<const TCameraNodeProperties&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TCameraNodeProperties)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_projectiontype()->::TDataBinding::MergeFrom(
          from._internal_projectiontype());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_horizontalfov()->::TDataBinding::MergeFrom(
          from._internal_horizontalfov());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_aspectratio()->::TDataBinding::MergeFrom(
          from._internal_aspectratio());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_horizontalfocallength()->::TDataBinding::MergeFrom(
          from._internal_horizontalfocallength());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_viewport()->::TDataBinding::MergeFrom(
          from._internal_viewport());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_nearplane()->::TDataBinding::MergeFrom(
          from._internal_nearplane());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_farplane()->::TDataBinding::MergeFrom(
          from._internal_farplane());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_rightplane()->::TDataBinding::MergeFrom(
          from._internal_rightplane());
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_leftplane()->::TDataBinding::MergeFrom(
          from._internal_leftplane());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_topplane()->::TDataBinding::MergeFrom(
          from._internal_topplane());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_bottomplane()->::TDataBinding::MergeFrom(
          from._internal_bottomplane());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TCameraNodeProperties::CopyFrom(const TCameraNodeProperties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TCameraNodeProperties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCameraNodeProperties::IsInitialized() const {
  if (_internal_has_projectiontype()) {
    if (!_impl_.projectiontype_->IsInitialized()) return false;
  }
  if (_internal_has_horizontalfov()) {
    if (!_impl_.horizontalfov_->IsInitialized()) return false;
  }
  if (_internal_has_aspectratio()) {
    if (!_impl_.aspectratio_->IsInitialized()) return false;
  }
  if (_internal_has_horizontalfocallength()) {
    if (!_impl_.horizontalfocallength_->IsInitialized()) return false;
  }
  if (_internal_has_viewport()) {
    if (!_impl_.viewport_->IsInitialized()) return false;
  }
  if (_internal_has_nearplane()) {
    if (!_impl_.nearplane_->IsInitialized()) return false;
  }
  if (_internal_has_farplane()) {
    if (!_impl_.farplane_->IsInitialized()) return false;
  }
  if (_internal_has_rightplane()) {
    if (!_impl_.rightplane_->IsInitialized()) return false;
  }
  if (_internal_has_leftplane()) {
    if (!_impl_.leftplane_->IsInitialized()) return false;
  }
  if (_internal_has_topplane()) {
    if (!_impl_.topplane_->IsInitialized()) return false;
  }
  if (_internal_has_bottomplane()) {
    if (!_impl_.bottomplane_->IsInitialized()) return false;
  }
  return true;
}

void TCameraNodeProperties::InternalSwap(TCameraNodeProperties* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TCameraNodeProperties, _impl_.bottomplane_)
      + sizeof(TCameraNodeProperties::_impl_.bottomplane_)
      - PROTOBUF_FIELD_OFFSET(TCameraNodeProperties, _impl_.projectiontype_)>(
          reinterpret_cast<char*>(&_impl_.projectiontype_),
          reinterpret_cast<char*>(&other->_impl_.projectiontype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TCameraNodeProperties::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[10]);
}

// ===================================================================

class TResourceParam::_Internal {
 public:
  using HasBits = decltype(std::declval<TResourceParam>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TResourceParam, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TResourceParam* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& resource(const TResourceParam* msg);
  static void set_has_resource(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::HmiWidget::TAppearanceParam& appearance(const TResourceParam* msg);
  static void set_has_appearance(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::HmiWidget::TRenderPassParam& renderpass(const TResourceParam* msg);
  static void set_has_renderpass(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::HmiWidget::TBlitPassParam& blitpass(const TResourceParam* msg);
  static void set_has_blitpass(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TIdentifier&
TResourceParam::_Internal::identifier(const TResourceParam* msg) {
  return *msg->_impl_.identifier_;
}
const ::TDataBinding&
TResourceParam::_Internal::resource(const TResourceParam* msg) {
  return *msg->_impl_.resource_;
}
const ::HmiWidget::TAppearanceParam&
TResourceParam::_Internal::appearance(const TResourceParam* msg) {
  return *msg->_impl_.appearance_;
}
const ::HmiWidget::TRenderPassParam&
TResourceParam::_Internal::renderpass(const TResourceParam* msg) {
  return *msg->_impl_.renderpass_;
}
const ::HmiWidget::TBlitPassParam&
TResourceParam::_Internal::blitpass(const TResourceParam* msg) {
  return *msg->_impl_.blitpass_;
}
void TResourceParam::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TResourceParam::clear_resource() {
  if (_impl_.resource_ != nullptr) _impl_.resource_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TResourceParam::TResourceParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TResourceParam)
}
TResourceParam::TResourceParam(const TResourceParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TResourceParam* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.resource_){nullptr}
    , decltype(_impl_.appearance_){nullptr}
    , decltype(_impl_.renderpass_){nullptr}
    , decltype(_impl_.blitpass_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_resource()) {
    _this->_impl_.resource_ = new ::TDataBinding(*from._impl_.resource_);
  }
  if (from._internal_has_appearance()) {
    _this->_impl_.appearance_ = new ::HmiWidget::TAppearanceParam(*from._impl_.appearance_);
  }
  if (from._internal_has_renderpass()) {
    _this->_impl_.renderpass_ = new ::HmiWidget::TRenderPassParam(*from._impl_.renderpass_);
  }
  if (from._internal_has_blitpass()) {
    _this->_impl_.blitpass_ = new ::HmiWidget::TBlitPassParam(*from._impl_.blitpass_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TResourceParam)
}

inline void TResourceParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.resource_){nullptr}
    , decltype(_impl_.appearance_){nullptr}
    , decltype(_impl_.renderpass_){nullptr}
    , decltype(_impl_.blitpass_){nullptr}
  };
}

TResourceParam::~TResourceParam() {
  // @@protoc_insertion_point(destructor:HmiWidget.TResourceParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TResourceParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.resource_;
  if (this != internal_default_instance()) delete _impl_.appearance_;
  if (this != internal_default_instance()) delete _impl_.renderpass_;
  if (this != internal_default_instance()) delete _impl_.blitpass_;
}

void TResourceParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TResourceParam::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TResourceParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.resource_ != nullptr);
      _impl_.resource_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.appearance_ != nullptr);
      _impl_.appearance_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.renderpass_ != nullptr);
      _impl_.renderpass_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.blitpass_ != nullptr);
      _impl_.blitpass_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TResourceParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding resource = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_resource(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TAppearanceParam appearance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_appearance(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TRenderPassParam renderPass = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_renderpass(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TBlitPassParam blitPass = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_blitpass(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TResourceParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TResourceParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding resource = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::resource(this),
        _Internal::resource(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TAppearanceParam appearance = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::appearance(this),
        _Internal::appearance(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TRenderPassParam renderPass = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::renderpass(this),
        _Internal::renderpass(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TBlitPassParam blitPass = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::blitpass(this),
        _Internal::blitpass(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TResourceParam)
  return target;
}

size_t TResourceParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TResourceParam)
  size_t total_size = 0;

  // required .TIdentifier identifier = 1;
  if (_internal_has_identifier()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001eu) {
    // optional .TDataBinding resource = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.resource_);
    }

    // optional .HmiWidget.TAppearanceParam appearance = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.appearance_);
    }

    // optional .HmiWidget.TRenderPassParam renderPass = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.renderpass_);
    }

    // optional .HmiWidget.TBlitPassParam blitPass = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.blitpass_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TResourceParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TResourceParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TResourceParam::GetClassData() const { return &_class_data_; }


void TResourceParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TResourceParam*>(&to_msg);
  auto& from = static_cast<const TResourceParam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TResourceParam)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_resource()->::TDataBinding::MergeFrom(
          from._internal_resource());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_appearance()->::HmiWidget::TAppearanceParam::MergeFrom(
          from._internal_appearance());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_renderpass()->::HmiWidget::TRenderPassParam::MergeFrom(
          from._internal_renderpass());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_blitpass()->::HmiWidget::TBlitPassParam::MergeFrom(
          from._internal_blitpass());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TResourceParam::CopyFrom(const TResourceParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TResourceParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TResourceParam::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_resource()) {
    if (!_impl_.resource_->IsInitialized()) return false;
  }
  if (_internal_has_appearance()) {
    if (!_impl_.appearance_->IsInitialized()) return false;
  }
  if (_internal_has_renderpass()) {
    if (!_impl_.renderpass_->IsInitialized()) return false;
  }
  if (_internal_has_blitpass()) {
    if (!_impl_.blitpass_->IsInitialized()) return false;
  }
  return true;
}

void TResourceParam::InternalSwap(TResourceParam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TResourceParam, _impl_.blitpass_)
      + sizeof(TResourceParam::_impl_.blitpass_)
      - PROTOBUF_FIELD_OFFSET(TResourceParam, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TResourceParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[11]);
}

// ===================================================================

class TAppearanceParam::_Internal {
 public:
};

TAppearanceParam::TAppearanceParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TAppearanceParam)
}
TAppearanceParam::TAppearanceParam(const TAppearanceParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TAppearanceParam* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uniform_){from._impl_.uniform_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TAppearanceParam)
}

inline void TAppearanceParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uniform_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TAppearanceParam::~TAppearanceParam() {
  // @@protoc_insertion_point(destructor:HmiWidget.TAppearanceParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TAppearanceParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uniform_.~RepeatedPtrField();
}

void TAppearanceParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TAppearanceParam::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TAppearanceParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uniform_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TAppearanceParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .HmiWidget.TUniform uniform = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_uniform(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TAppearanceParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TAppearanceParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HmiWidget.TUniform uniform = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_uniform_size()); i < n; i++) {
    const auto& repfield = this->_internal_uniform(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TAppearanceParam)
  return target;
}

size_t TAppearanceParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TAppearanceParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TUniform uniform = 1;
  total_size += 1UL * this->_internal_uniform_size();
  for (const auto& msg : this->_impl_.uniform_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TAppearanceParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TAppearanceParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TAppearanceParam::GetClassData() const { return &_class_data_; }


void TAppearanceParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TAppearanceParam*>(&to_msg);
  auto& from = static_cast<const TAppearanceParam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TAppearanceParam)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.uniform_.MergeFrom(from._impl_.uniform_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TAppearanceParam::CopyFrom(const TAppearanceParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TAppearanceParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAppearanceParam::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.uniform_))
    return false;
  return true;
}

void TAppearanceParam::InternalSwap(TAppearanceParam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.uniform_.InternalSwap(&other->_impl_.uniform_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TAppearanceParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[12]);
}

// ===================================================================

class TRenderPassParam::_Internal {
 public:
  using HasBits = decltype(std::declval<TRenderPassParam>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TRenderPassParam, _impl_._has_bits_);
  static const ::TDataBinding& enabled(const TRenderPassParam* msg);
  static void set_has_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& renderorderrank(const TRenderPassParam* msg);
  static void set_has_renderorderrank(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& viewportoffset(const TRenderPassParam* msg);
  static void set_has_viewportoffset(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& viewportsize(const TRenderPassParam* msg);
  static void set_has_viewportsize(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::TDataBinding&
TRenderPassParam::_Internal::enabled(const TRenderPassParam* msg) {
  return *msg->_impl_.enabled_;
}
const ::TDataBinding&
TRenderPassParam::_Internal::renderorderrank(const TRenderPassParam* msg) {
  return *msg->_impl_.renderorderrank_;
}
const ::TDataBinding&
TRenderPassParam::_Internal::viewportoffset(const TRenderPassParam* msg) {
  return *msg->_impl_.viewportoffset_;
}
const ::TDataBinding&
TRenderPassParam::_Internal::viewportsize(const TRenderPassParam* msg) {
  return *msg->_impl_.viewportsize_;
}
void TRenderPassParam::clear_enabled() {
  if (_impl_.enabled_ != nullptr) _impl_.enabled_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TRenderPassParam::clear_renderorderrank() {
  if (_impl_.renderorderrank_ != nullptr) _impl_.renderorderrank_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TRenderPassParam::clear_viewportoffset() {
  if (_impl_.viewportoffset_ != nullptr) _impl_.viewportoffset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TRenderPassParam::clear_viewportsize() {
  if (_impl_.viewportsize_ != nullptr) _impl_.viewportsize_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
TRenderPassParam::TRenderPassParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TRenderPassParam)
}
TRenderPassParam::TRenderPassParam(const TRenderPassParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TRenderPassParam* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.enabled_){nullptr}
    , decltype(_impl_.renderorderrank_){nullptr}
    , decltype(_impl_.viewportoffset_){nullptr}
    , decltype(_impl_.viewportsize_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_enabled()) {
    _this->_impl_.enabled_ = new ::TDataBinding(*from._impl_.enabled_);
  }
  if (from._internal_has_renderorderrank()) {
    _this->_impl_.renderorderrank_ = new ::TDataBinding(*from._impl_.renderorderrank_);
  }
  if (from._internal_has_viewportoffset()) {
    _this->_impl_.viewportoffset_ = new ::TDataBinding(*from._impl_.viewportoffset_);
  }
  if (from._internal_has_viewportsize()) {
    _this->_impl_.viewportsize_ = new ::TDataBinding(*from._impl_.viewportsize_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TRenderPassParam)
}

inline void TRenderPassParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.enabled_){nullptr}
    , decltype(_impl_.renderorderrank_){nullptr}
    , decltype(_impl_.viewportoffset_){nullptr}
    , decltype(_impl_.viewportsize_){nullptr}
  };
}

TRenderPassParam::~TRenderPassParam() {
  // @@protoc_insertion_point(destructor:HmiWidget.TRenderPassParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TRenderPassParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.enabled_;
  if (this != internal_default_instance()) delete _impl_.renderorderrank_;
  if (this != internal_default_instance()) delete _impl_.viewportoffset_;
  if (this != internal_default_instance()) delete _impl_.viewportsize_;
}

void TRenderPassParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TRenderPassParam::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TRenderPassParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.enabled_ != nullptr);
      _impl_.enabled_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.renderorderrank_ != nullptr);
      _impl_.renderorderrank_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.viewportoffset_ != nullptr);
      _impl_.viewportoffset_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.viewportsize_ != nullptr);
      _impl_.viewportsize_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TRenderPassParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding enabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_enabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding renderOrderRank = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_renderorderrank(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding viewportOffset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewportoffset(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding viewportSize = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_viewportsize(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TRenderPassParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TRenderPassParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding enabled = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::enabled(this),
        _Internal::enabled(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding renderOrderRank = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::renderorderrank(this),
        _Internal::renderorderrank(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding viewportOffset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::viewportoffset(this),
        _Internal::viewportoffset(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding viewportSize = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::viewportsize(this),
        _Internal::viewportsize(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TRenderPassParam)
  return target;
}

size_t TRenderPassParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TRenderPassParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .TDataBinding enabled = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.enabled_);
    }

    // optional .TDataBinding renderOrderRank = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.renderorderrank_);
    }

    // optional .TDataBinding viewportOffset = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.viewportoffset_);
    }

    // optional .TDataBinding viewportSize = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.viewportsize_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TRenderPassParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TRenderPassParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TRenderPassParam::GetClassData() const { return &_class_data_; }


void TRenderPassParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TRenderPassParam*>(&to_msg);
  auto& from = static_cast<const TRenderPassParam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TRenderPassParam)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_enabled()->::TDataBinding::MergeFrom(
          from._internal_enabled());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_renderorderrank()->::TDataBinding::MergeFrom(
          from._internal_renderorderrank());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_viewportoffset()->::TDataBinding::MergeFrom(
          from._internal_viewportoffset());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_viewportsize()->::TDataBinding::MergeFrom(
          from._internal_viewportsize());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TRenderPassParam::CopyFrom(const TRenderPassParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TRenderPassParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TRenderPassParam::IsInitialized() const {
  if (_internal_has_enabled()) {
    if (!_impl_.enabled_->IsInitialized()) return false;
  }
  if (_internal_has_renderorderrank()) {
    if (!_impl_.renderorderrank_->IsInitialized()) return false;
  }
  if (_internal_has_viewportoffset()) {
    if (!_impl_.viewportoffset_->IsInitialized()) return false;
  }
  if (_internal_has_viewportsize()) {
    if (!_impl_.viewportsize_->IsInitialized()) return false;
  }
  return true;
}

void TRenderPassParam::InternalSwap(TRenderPassParam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TRenderPassParam, _impl_.viewportsize_)
      + sizeof(TRenderPassParam::_impl_.viewportsize_)
      - PROTOBUF_FIELD_OFFSET(TRenderPassParam, _impl_.enabled_)>(
          reinterpret_cast<char*>(&_impl_.enabled_),
          reinterpret_cast<char*>(&other->_impl_.enabled_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TRenderPassParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[13]);
}

// ===================================================================

class TBlitPassParam::_Internal {
 public:
  using HasBits = decltype(std::declval<TBlitPassParam>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TBlitPassParam, _impl_._has_bits_);
  static const ::TDataBinding& enabled(const TBlitPassParam* msg);
  static void set_has_enabled(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& renderorderrank(const TBlitPassParam* msg);
  static void set_has_renderorderrank(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TDataBinding&
TBlitPassParam::_Internal::enabled(const TBlitPassParam* msg) {
  return *msg->_impl_.enabled_;
}
const ::TDataBinding&
TBlitPassParam::_Internal::renderorderrank(const TBlitPassParam* msg) {
  return *msg->_impl_.renderorderrank_;
}
void TBlitPassParam::clear_enabled() {
  if (_impl_.enabled_ != nullptr) _impl_.enabled_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TBlitPassParam::clear_renderorderrank() {
  if (_impl_.renderorderrank_ != nullptr) _impl_.renderorderrank_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TBlitPassParam::TBlitPassParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TBlitPassParam)
}
TBlitPassParam::TBlitPassParam(const TBlitPassParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TBlitPassParam* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.enabled_){nullptr}
    , decltype(_impl_.renderorderrank_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_enabled()) {
    _this->_impl_.enabled_ = new ::TDataBinding(*from._impl_.enabled_);
  }
  if (from._internal_has_renderorderrank()) {
    _this->_impl_.renderorderrank_ = new ::TDataBinding(*from._impl_.renderorderrank_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TBlitPassParam)
}

inline void TBlitPassParam::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.enabled_){nullptr}
    , decltype(_impl_.renderorderrank_){nullptr}
  };
}

TBlitPassParam::~TBlitPassParam() {
  // @@protoc_insertion_point(destructor:HmiWidget.TBlitPassParam)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TBlitPassParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.enabled_;
  if (this != internal_default_instance()) delete _impl_.renderorderrank_;
}

void TBlitPassParam::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TBlitPassParam::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TBlitPassParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.enabled_ != nullptr);
      _impl_.enabled_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.renderorderrank_ != nullptr);
      _impl_.renderorderrank_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TBlitPassParam::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding enabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_enabled(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding renderOrderRank = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_renderorderrank(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TBlitPassParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TBlitPassParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding enabled = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::enabled(this),
        _Internal::enabled(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding renderOrderRank = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::renderorderrank(this),
        _Internal::renderorderrank(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TBlitPassParam)
  return target;
}

size_t TBlitPassParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TBlitPassParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .TDataBinding enabled = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.enabled_);
    }

    // optional .TDataBinding renderOrderRank = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.renderorderrank_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TBlitPassParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TBlitPassParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TBlitPassParam::GetClassData() const { return &_class_data_; }


void TBlitPassParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TBlitPassParam*>(&to_msg);
  auto& from = static_cast<const TBlitPassParam&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TBlitPassParam)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_enabled()->::TDataBinding::MergeFrom(
          from._internal_enabled());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_renderorderrank()->::TDataBinding::MergeFrom(
          from._internal_renderorderrank());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TBlitPassParam::CopyFrom(const TBlitPassParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TBlitPassParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TBlitPassParam::IsInitialized() const {
  if (_internal_has_enabled()) {
    if (!_impl_.enabled_->IsInitialized()) return false;
  }
  if (_internal_has_renderorderrank()) {
    if (!_impl_.renderorderrank_->IsInitialized()) return false;
  }
  return true;
}

void TBlitPassParam::InternalSwap(TBlitPassParam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TBlitPassParam, _impl_.renderorderrank_)
      + sizeof(TBlitPassParam::_impl_.renderorderrank_)
      - PROTOBUF_FIELD_OFFSET(TBlitPassParam, _impl_.enabled_)>(
          reinterpret_cast<char*>(&_impl_.enabled_),
          reinterpret_cast<char*>(&other->_impl_.enabled_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TBlitPassParam::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[14]);
}

// ===================================================================

class TDataChangeTrigger::_Internal {
 public:
  using HasBits = decltype(std::declval<TDataChangeTrigger>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TDataChangeTrigger, _impl_._has_bits_);
  static const ::HmiWidget::TCommand& command(const TDataChangeTrigger* msg);
  static void set_has_command(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::TCommand&
TDataChangeTrigger::_Internal::command(const TDataChangeTrigger* msg) {
  return *msg->_impl_.command_;
}
void TDataChangeTrigger::clear_value() {
  _impl_.value_.Clear();
}
TDataChangeTrigger::TDataChangeTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TDataChangeTrigger)
}
TDataChangeTrigger::TDataChangeTrigger(const TDataChangeTrigger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TDataChangeTrigger* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.value_){from._impl_.value_}
    , decltype(_impl_.command_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_command()) {
    _this->_impl_.command_ = new ::HmiWidget::TCommand(*from._impl_.command_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TDataChangeTrigger)
}

inline void TDataChangeTrigger::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.value_){arena}
    , decltype(_impl_.command_){nullptr}
  };
}

TDataChangeTrigger::~TDataChangeTrigger() {
  // @@protoc_insertion_point(destructor:HmiWidget.TDataChangeTrigger)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TDataChangeTrigger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.command_;
}

void TDataChangeTrigger::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TDataChangeTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TDataChangeTrigger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.command_ != nullptr);
    _impl_.command_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TDataChangeTrigger::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TDataBinding value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_value(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TCommand command = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_command(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TDataChangeTrigger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TDataChangeTrigger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TDataBinding value = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_value_size()); i < n; i++) {
    const auto& repfield = this->_internal_value(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.TCommand command = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::command(this),
        _Internal::command(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TDataChangeTrigger)
  return target;
}

size_t TDataChangeTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TDataChangeTrigger)
  size_t total_size = 0;

  // required .HmiWidget.TCommand command = 2;
  if (_internal_has_command()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.command_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TDataBinding value = 1;
  total_size += 1UL * this->_internal_value_size();
  for (const auto& msg : this->_impl_.value_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TDataChangeTrigger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TDataChangeTrigger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TDataChangeTrigger::GetClassData() const { return &_class_data_; }


void TDataChangeTrigger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TDataChangeTrigger*>(&to_msg);
  auto& from = static_cast<const TDataChangeTrigger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TDataChangeTrigger)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.value_.MergeFrom(from._impl_.value_);
  if (from._internal_has_command()) {
    _this->_internal_mutable_command()->::HmiWidget::TCommand::MergeFrom(
        from._internal_command());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TDataChangeTrigger::CopyFrom(const TDataChangeTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TDataChangeTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDataChangeTrigger::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.value_))
    return false;
  if (_internal_has_command()) {
    if (!_impl_.command_->IsInitialized()) return false;
  }
  return true;
}

void TDataChangeTrigger::InternalSwap(TDataChangeTrigger* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
  swap(_impl_.command_, other->_impl_.command_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TDataChangeTrigger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[15]);
}

// ===================================================================

class TConditionalTrigger::_Internal {
 public:
  using HasBits = decltype(std::declval<TConditionalTrigger>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TConditionalTrigger, _impl_._has_bits_);
  static const ::TDataBinding& condition(const TConditionalTrigger* msg);
  static void set_has_condition(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TCommand& command(const TConditionalTrigger* msg);
  static void set_has_command(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::HmiWidget::TCommand& elsecommand(const TConditionalTrigger* msg);
  static void set_has_elsecommand(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_execmode(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_elsecommandonfallbackonly(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TDataBinding&
TConditionalTrigger::_Internal::condition(const TConditionalTrigger* msg) {
  return *msg->_impl_.condition_;
}
const ::HmiWidget::TCommand&
TConditionalTrigger::_Internal::command(const TConditionalTrigger* msg) {
  return *msg->_impl_.command_;
}
const ::HmiWidget::TCommand&
TConditionalTrigger::_Internal::elsecommand(const TConditionalTrigger* msg) {
  return *msg->_impl_.elsecommand_;
}
void TConditionalTrigger::clear_condition() {
  if (_impl_.condition_ != nullptr) _impl_.condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TConditionalTrigger::TConditionalTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TConditionalTrigger)
}
TConditionalTrigger::TConditionalTrigger(const TConditionalTrigger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TConditionalTrigger* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.condition_){nullptr}
    , decltype(_impl_.command_){nullptr}
    , decltype(_impl_.elsecommand_){nullptr}
    , decltype(_impl_.execmode_){}
    , decltype(_impl_.elsecommandonfallbackonly_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_condition()) {
    _this->_impl_.condition_ = new ::TDataBinding(*from._impl_.condition_);
  }
  if (from._internal_has_command()) {
    _this->_impl_.command_ = new ::HmiWidget::TCommand(*from._impl_.command_);
  }
  if (from._internal_has_elsecommand()) {
    _this->_impl_.elsecommand_ = new ::HmiWidget::TCommand(*from._impl_.elsecommand_);
  }
  ::memcpy(&_impl_.execmode_, &from._impl_.execmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.elsecommandonfallbackonly_) -
    reinterpret_cast<char*>(&_impl_.execmode_)) + sizeof(_impl_.elsecommandonfallbackonly_));
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TConditionalTrigger)
}

inline void TConditionalTrigger::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.condition_){nullptr}
    , decltype(_impl_.command_){nullptr}
    , decltype(_impl_.elsecommand_){nullptr}
    , decltype(_impl_.execmode_){0}
    , decltype(_impl_.elsecommandonfallbackonly_){false}
  };
}

TConditionalTrigger::~TConditionalTrigger() {
  // @@protoc_insertion_point(destructor:HmiWidget.TConditionalTrigger)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TConditionalTrigger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.condition_;
  if (this != internal_default_instance()) delete _impl_.command_;
  if (this != internal_default_instance()) delete _impl_.elsecommand_;
}

void TConditionalTrigger::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TConditionalTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TConditionalTrigger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.condition_ != nullptr);
      _impl_.condition_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.command_ != nullptr);
      _impl_.command_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.elsecommand_ != nullptr);
      _impl_.elsecommand_->Clear();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.execmode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.elsecommandonfallbackonly_) -
        reinterpret_cast<char*>(&_impl_.execmode_)) + sizeof(_impl_.elsecommandonfallbackonly_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TConditionalTrigger::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TDataBinding condition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_condition(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TCommand command = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_command(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TCommand elseCommand = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_elsecommand(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TETriggerExecMode execMode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TETriggerExecMode_IsValid(val))) {
            _internal_set_execmode(static_cast<::HmiWidget::TETriggerExecMode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional bool elseCommandOnFallBackOnly = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_elsecommandonfallbackonly(&has_bits);
          _impl_.elsecommandonfallbackonly_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TConditionalTrigger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TConditionalTrigger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TDataBinding condition = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::condition(this),
        _Internal::condition(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TCommand command = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::command(this),
        _Internal::command(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TCommand elseCommand = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::elsecommand(this),
        _Internal::elsecommand(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TETriggerExecMode execMode = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_execmode(), target);
  }

  // optional bool elseCommandOnFallBackOnly = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_elsecommandonfallbackonly(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TConditionalTrigger)
  return target;
}

size_t TConditionalTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TConditionalTrigger)
  size_t total_size = 0;

  // required .TDataBinding condition = 1;
  if (_internal_has_condition()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.condition_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001eu) {
    // optional .HmiWidget.TCommand command = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.command_);
    }

    // optional .HmiWidget.TCommand elseCommand = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.elsecommand_);
    }

    // optional .HmiWidget.TETriggerExecMode execMode = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_execmode());
    }

    // optional bool elseCommandOnFallBackOnly = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TConditionalTrigger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TConditionalTrigger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TConditionalTrigger::GetClassData() const { return &_class_data_; }


void TConditionalTrigger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TConditionalTrigger*>(&to_msg);
  auto& from = static_cast<const TConditionalTrigger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TConditionalTrigger)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_condition()->::TDataBinding::MergeFrom(
          from._internal_condition());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_command()->::HmiWidget::TCommand::MergeFrom(
          from._internal_command());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_elsecommand()->::HmiWidget::TCommand::MergeFrom(
          from._internal_elsecommand());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.execmode_ = from._impl_.execmode_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.elsecommandonfallbackonly_ = from._impl_.elsecommandonfallbackonly_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TConditionalTrigger::CopyFrom(const TConditionalTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TConditionalTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TConditionalTrigger::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_condition()) {
    if (!_impl_.condition_->IsInitialized()) return false;
  }
  if (_internal_has_command()) {
    if (!_impl_.command_->IsInitialized()) return false;
  }
  if (_internal_has_elsecommand()) {
    if (!_impl_.elsecommand_->IsInitialized()) return false;
  }
  return true;
}

void TConditionalTrigger::InternalSwap(TConditionalTrigger* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TConditionalTrigger, _impl_.elsecommandonfallbackonly_)
      + sizeof(TConditionalTrigger::_impl_.elsecommandonfallbackonly_)
      - PROTOBUF_FIELD_OFFSET(TConditionalTrigger, _impl_.condition_)>(
          reinterpret_cast<char*>(&_impl_.condition_),
          reinterpret_cast<char*>(&other->_impl_.condition_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TConditionalTrigger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[16]);
}

// ===================================================================

class TTrigger::_Internal {
 public:
  using HasBits = decltype(std::declval<TTrigger>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TTrigger, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TTrigger* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_category(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::HmiWidget::TDataChangeTrigger& datachangetrigger(const TTrigger* msg);
  static void set_has_datachangetrigger(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::HmiWidget::TConditionalTrigger& conditionaltrigger(const TTrigger* msg);
  static void set_has_conditionaltrigger(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TIdentifier&
TTrigger::_Internal::identifier(const TTrigger* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TDataChangeTrigger&
TTrigger::_Internal::datachangetrigger(const TTrigger* msg) {
  return *msg->_impl_.datachangetrigger_;
}
const ::HmiWidget::TConditionalTrigger&
TTrigger::_Internal::conditionaltrigger(const TTrigger* msg) {
  return *msg->_impl_.conditionaltrigger_;
}
void TTrigger::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TTrigger::TTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TTrigger)
}
TTrigger::TTrigger(const TTrigger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TTrigger* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.datachangetrigger_){nullptr}
    , decltype(_impl_.conditionaltrigger_){nullptr}
    , decltype(_impl_.category_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_datachangetrigger()) {
    _this->_impl_.datachangetrigger_ = new ::HmiWidget::TDataChangeTrigger(*from._impl_.datachangetrigger_);
  }
  if (from._internal_has_conditionaltrigger()) {
    _this->_impl_.conditionaltrigger_ = new ::HmiWidget::TConditionalTrigger(*from._impl_.conditionaltrigger_);
  }
  _this->_impl_.category_ = from._impl_.category_;
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TTrigger)
}

inline void TTrigger::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.datachangetrigger_){nullptr}
    , decltype(_impl_.conditionaltrigger_){nullptr}
    , decltype(_impl_.category_){0}
  };
}

TTrigger::~TTrigger() {
  // @@protoc_insertion_point(destructor:HmiWidget.TTrigger)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TTrigger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.datachangetrigger_;
  if (this != internal_default_instance()) delete _impl_.conditionaltrigger_;
}

void TTrigger::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TTrigger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.datachangetrigger_ != nullptr);
      _impl_.datachangetrigger_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.conditionaltrigger_ != nullptr);
      _impl_.conditionaltrigger_->Clear();
    }
  }
  _impl_.category_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TTrigger::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TETriggerCategory category = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TETriggerCategory_IsValid(val))) {
            _internal_set_category(static_cast<::HmiWidget::TETriggerCategory>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TDataChangeTrigger dataChangeTrigger = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_datachangetrigger(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TConditionalTrigger conditionalTrigger = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_conditionaltrigger(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TTrigger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TTrigger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TETriggerCategory category = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_category(), target);
  }

  // optional .HmiWidget.TDataChangeTrigger dataChangeTrigger = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::datachangetrigger(this),
        _Internal::datachangetrigger(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TConditionalTrigger conditionalTrigger = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::conditionaltrigger(this),
        _Internal::conditionaltrigger(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TTrigger)
  return target;
}

size_t TTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TTrigger)
  size_t total_size = 0;

  // required .TIdentifier identifier = 1;
  if (_internal_has_identifier()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000eu) {
    // optional .HmiWidget.TDataChangeTrigger dataChangeTrigger = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.datachangetrigger_);
    }

    // optional .HmiWidget.TConditionalTrigger conditionalTrigger = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.conditionaltrigger_);
    }

    // optional .HmiWidget.TETriggerCategory category = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_category());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TTrigger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TTrigger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TTrigger::GetClassData() const { return &_class_data_; }


void TTrigger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TTrigger*>(&to_msg);
  auto& from = static_cast<const TTrigger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TTrigger)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_datachangetrigger()->::HmiWidget::TDataChangeTrigger::MergeFrom(
          from._internal_datachangetrigger());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_conditionaltrigger()->::HmiWidget::TConditionalTrigger::MergeFrom(
          from._internal_conditionaltrigger());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.category_ = from._impl_.category_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TTrigger::CopyFrom(const TTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTrigger::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_datachangetrigger()) {
    if (!_impl_.datachangetrigger_->IsInitialized()) return false;
  }
  if (_internal_has_conditionaltrigger()) {
    if (!_impl_.conditionaltrigger_->IsInitialized()) return false;
  }
  return true;
}

void TTrigger::InternalSwap(TTrigger* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TTrigger, _impl_.category_)
      + sizeof(TTrigger::_impl_.category_)
      - PROTOBUF_FIELD_OFFSET(TTrigger, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TTrigger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[17]);
}

// ===================================================================

class TPolyLine::_Internal {
 public:
};

void TPolyLine::clear_point() {
  _impl_.point_.Clear();
}
void TPolyLine::clear_pointbinding() {
  _impl_.pointbinding_.Clear();
}
TPolyLine::TPolyLine(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TPolyLine)
}
TPolyLine::TPolyLine(const TPolyLine& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TPolyLine* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.point_){from._impl_.point_}
    , decltype(_impl_.pointbinding_){from._impl_.pointbinding_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TPolyLine)
}

inline void TPolyLine::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.point_){arena}
    , decltype(_impl_.pointbinding_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TPolyLine::~TPolyLine() {
  // @@protoc_insertion_point(destructor:HmiWidget.TPolyLine)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TPolyLine::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.point_.~RepeatedPtrField();
  _impl_.pointbinding_.~RepeatedPtrField();
}

void TPolyLine::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TPolyLine::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TPolyLine)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.point_.Clear();
  _impl_.pointbinding_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPolyLine::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TVector3f point = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_point(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .TDataBinding pointBinding = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pointbinding(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TPolyLine::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TPolyLine)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TVector3f point = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_point_size()); i < n; i++) {
    const auto& repfield = this->_internal_point(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .TDataBinding pointBinding = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_pointbinding_size()); i < n; i++) {
    const auto& repfield = this->_internal_pointbinding(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TPolyLine)
  return target;
}

size_t TPolyLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TPolyLine)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TVector3f point = 1;
  total_size += 1UL * this->_internal_point_size();
  for (const auto& msg : this->_impl_.point_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .TDataBinding pointBinding = 2;
  total_size += 1UL * this->_internal_pointbinding_size();
  for (const auto& msg : this->_impl_.pointbinding_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TPolyLine::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TPolyLine::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TPolyLine::GetClassData() const { return &_class_data_; }


void TPolyLine::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TPolyLine*>(&to_msg);
  auto& from = static_cast<const TPolyLine&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TPolyLine)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.point_.MergeFrom(from._impl_.point_);
  _this->_impl_.pointbinding_.MergeFrom(from._impl_.pointbinding_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TPolyLine::CopyFrom(const TPolyLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TPolyLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPolyLine::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.point_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.pointbinding_))
    return false;
  return true;
}

void TPolyLine::InternalSwap(TPolyLine* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.point_.InternalSwap(&other->_impl_.point_);
  _impl_.pointbinding_.InternalSwap(&other->_impl_.pointbinding_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TPolyLine::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[18]);
}

// ===================================================================

class TInputConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<TInputConfig>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TInputConfig, _impl_._has_bits_);
  static void set_has_receivedirectinput(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_touchscreentargetdomain(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_touchcontrollertargetdomain(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_significantmovementoverwrite(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_passtouch(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_alwaystouch(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_touchvolumesource(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_defaulttouchhandled(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ignorecontroller(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_ignorefocusontouch(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::HmiWidget::TPolyLine& touchareapolygon(const TInputConfig* msg);
  static void set_has_touchareapolygon(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_blocktouchtoparents(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::HmiWidget::TPolyLine&
TInputConfig::_Internal::touchareapolygon(const TInputConfig* msg) {
  return *msg->_impl_.touchareapolygon_;
}
void TInputConfig::clear_touchvolumechildidentifier() {
  _impl_.touchvolumechildidentifier_.Clear();
}
TInputConfig::TInputConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TInputConfig)
}
TInputConfig::TInputConfig(const TInputConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TInputConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.receivegesture_){from._impl_.receivegesture_}
    , decltype(_impl_.ignoretouch_){from._impl_.ignoretouch_}
    , decltype(_impl_.receivegesturepad_){from._impl_.receivegesturepad_}
    , decltype(_impl_.receivegesturescreen_){from._impl_.receivegesturescreen_}
    , decltype(_impl_.touchvolumechildidentifier_){from._impl_.touchvolumechildidentifier_}
    , decltype(_impl_.touchareapolygon_){nullptr}
    , decltype(_impl_.receivedirectinput_){}
    , decltype(_impl_.passtouch_){}
    , decltype(_impl_.alwaystouch_){}
    , decltype(_impl_.defaulttouchhandled_){}
    , decltype(_impl_.ignorecontroller_){}
    , decltype(_impl_.ignorefocusontouch_){}
    , decltype(_impl_.blocktouchtoparents_){}
    , decltype(_impl_.significantmovementoverwrite_){}
    , decltype(_impl_.touchvolumesource_){}
    , decltype(_impl_.touchscreentargetdomain_){}
    , decltype(_impl_.touchcontrollertargetdomain_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_touchareapolygon()) {
    _this->_impl_.touchareapolygon_ = new ::HmiWidget::TPolyLine(*from._impl_.touchareapolygon_);
  }
  ::memcpy(&_impl_.receivedirectinput_, &from._impl_.receivedirectinput_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.touchcontrollertargetdomain_) -
    reinterpret_cast<char*>(&_impl_.receivedirectinput_)) + sizeof(_impl_.touchcontrollertargetdomain_));
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TInputConfig)
}

inline void TInputConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.receivegesture_){arena}
    , decltype(_impl_.ignoretouch_){arena}
    , decltype(_impl_.receivegesturepad_){arena}
    , decltype(_impl_.receivegesturescreen_){arena}
    , decltype(_impl_.touchvolumechildidentifier_){arena}
    , decltype(_impl_.touchareapolygon_){nullptr}
    , decltype(_impl_.receivedirectinput_){false}
    , decltype(_impl_.passtouch_){false}
    , decltype(_impl_.alwaystouch_){false}
    , decltype(_impl_.defaulttouchhandled_){false}
    , decltype(_impl_.ignorecontroller_){false}
    , decltype(_impl_.ignorefocusontouch_){false}
    , decltype(_impl_.blocktouchtoparents_){false}
    , decltype(_impl_.significantmovementoverwrite_){0}
    , decltype(_impl_.touchvolumesource_){1}
    , decltype(_impl_.touchscreentargetdomain_){1}
    , decltype(_impl_.touchcontrollertargetdomain_){1}
  };
}

TInputConfig::~TInputConfig() {
  // @@protoc_insertion_point(destructor:HmiWidget.TInputConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TInputConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.receivegesture_.~RepeatedField();
  _impl_.ignoretouch_.~RepeatedField();
  _impl_.receivegesturepad_.~RepeatedField();
  _impl_.receivegesturescreen_.~RepeatedField();
  _impl_.touchvolumechildidentifier_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.touchareapolygon_;
}

void TInputConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TInputConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TInputConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.receivegesture_.Clear();
  _impl_.ignoretouch_.Clear();
  _impl_.receivegesturepad_.Clear();
  _impl_.receivegesturescreen_.Clear();
  _impl_.touchvolumechildidentifier_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.touchareapolygon_ != nullptr);
    _impl_.touchareapolygon_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.receivedirectinput_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.blocktouchtoparents_) -
        reinterpret_cast<char*>(&_impl_.receivedirectinput_)) + sizeof(_impl_.blocktouchtoparents_));
  }
  if (cached_has_bits & 0x00000f00u) {
    _impl_.significantmovementoverwrite_ = 0;
    _impl_.touchvolumesource_ = 1;
    _impl_.touchscreentargetdomain_ = 1;
    _impl_.touchcontrollertargetdomain_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TInputConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool receiveDirectInput = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_receivedirectinput(&has_bits);
          _impl_.receivedirectinput_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TETouchGesture receiveGesture = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::TETouchGesture_IsValid(val))) {
              _internal_add_receivegesture(static_cast<::TETouchGesture>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(_internal_mutable_receivegesture(), ptr, ctx, ::TETouchGesture_IsValid, &_internal_metadata_, 2);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TETouchDevice ignoreTouch = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::TETouchDevice_IsValid(val))) {
              _internal_add_ignoretouch(static_cast<::TETouchDevice>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<uint8_t>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(_internal_mutable_ignoretouch(), ptr, ctx, ::TETouchDevice_IsValid, &_internal_metadata_, 3);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TETouchTargetDomain touchScreenTargetDomain = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TETouchTargetDomain_IsValid(val))) {
            _internal_set_touchscreentargetdomain(static_cast<::HmiWidget::TETouchTargetDomain>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TETouchTargetDomain touchControllerTargetDomain = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TETouchTargetDomain_IsValid(val))) {
            _internal_set_touchcontrollertargetdomain(static_cast<::HmiWidget::TETouchTargetDomain>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional bool passTouch = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_passtouch(&has_bits);
          _impl_.passtouch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TETouchVolumeSource touchVolumeSource = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TETouchVolumeSource_IsValid(val))) {
            _internal_set_touchvolumesource(static_cast<::HmiWidget::TETouchVolumeSource>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .TETouchGesture receiveGesturePad = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          ptr -= 1;
          do {
            ptr += 1;
            uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::TETouchGesture_IsValid(val))) {
              _internal_add_receivegesturepad(static_cast<::TETouchGesture>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<64>(ptr));
        } else if (static_cast<uint8_t>(tag) == 66) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(_internal_mutable_receivegesturepad(), ptr, ctx, ::TETouchGesture_IsValid, &_internal_metadata_, 8);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TETouchGesture receiveGestureScreen = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          ptr -= 1;
          do {
            ptr += 1;
            uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::TETouchGesture_IsValid(val))) {
              _internal_add_receivegesturescreen(static_cast<::TETouchGesture>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<72>(ptr));
        } else if (static_cast<uint8_t>(tag) == 74) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(_internal_mutable_receivegesturescreen(), ptr, ctx, ::TETouchGesture_IsValid, &_internal_metadata_, 9);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TIdentifier touchVolumeChildIdentifier = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_touchvolumechildidentifier(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool defaultTouchHandled = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_defaulttouchhandled(&has_bits);
          _impl_.defaulttouchhandled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool ignoreController = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _Internal::set_has_ignorecontroller(&has_bits);
          _impl_.ignorecontroller_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool alwaysTouch = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _Internal::set_has_alwaystouch(&has_bits);
          _impl_.alwaystouch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool ignoreFocusOnTouch = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _Internal::set_has_ignorefocusontouch(&has_bits);
          _impl_.ignorefocusontouch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TPolyLine touchAreaPolygon = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_touchareapolygon(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 significantMovementOverwrite = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _Internal::set_has_significantmovementoverwrite(&has_bits);
          _impl_.significantmovementoverwrite_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool blockTouchToParents = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _Internal::set_has_blocktouchtoparents(&has_bits);
          _impl_.blocktouchtoparents_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TInputConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TInputConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool receiveDirectInput = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_receivedirectinput(), target);
  }

  // repeated .TETouchGesture receiveGesture = 2;
  for (int i = 0, n = this->_internal_receivegesture_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_receivegesture(i), target);
  }

  // repeated .TETouchDevice ignoreTouch = 3;
  for (int i = 0, n = this->_internal_ignoretouch_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_ignoretouch(i), target);
  }

  // optional .HmiWidget.TETouchTargetDomain touchScreenTargetDomain = 4;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_touchscreentargetdomain(), target);
  }

  // optional .HmiWidget.TETouchTargetDomain touchControllerTargetDomain = 5;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_touchcontrollertargetdomain(), target);
  }

  // optional bool passTouch = 6;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_passtouch(), target);
  }

  // optional .HmiWidget.TETouchVolumeSource touchVolumeSource = 7;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      7, this->_internal_touchvolumesource(), target);
  }

  // repeated .TETouchGesture receiveGesturePad = 8;
  for (int i = 0, n = this->_internal_receivegesturepad_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        8, this->_internal_receivegesturepad(i), target);
  }

  // repeated .TETouchGesture receiveGestureScreen = 9;
  for (int i = 0, n = this->_internal_receivegesturescreen_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_receivegesturescreen(i), target);
  }

  // repeated .TIdentifier touchVolumeChildIdentifier = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_touchvolumechildidentifier_size()); i < n; i++) {
    const auto& repfield = this->_internal_touchvolumechildidentifier(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bool defaultTouchHandled = 11;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(11, this->_internal_defaulttouchhandled(), target);
  }

  // optional bool ignoreController = 12;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_ignorecontroller(), target);
  }

  // optional bool alwaysTouch = 13;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(13, this->_internal_alwaystouch(), target);
  }

  // optional bool ignoreFocusOnTouch = 14;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_ignorefocusontouch(), target);
  }

  // optional .HmiWidget.TPolyLine touchAreaPolygon = 15;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::touchareapolygon(this),
        _Internal::touchareapolygon(this).GetCachedSize(), target, stream);
  }

  // optional int32 significantMovementOverwrite = 16;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(16, this->_internal_significantmovementoverwrite(), target);
  }

  // optional bool blockTouchToParents = 17;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(17, this->_internal_blocktouchtoparents(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TInputConfig)
  return target;
}

size_t TInputConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TInputConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TETouchGesture receiveGesture = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_receivegesture_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_receivegesture(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .TETouchDevice ignoreTouch = 3;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_ignoretouch_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_ignoretouch(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .TETouchGesture receiveGesturePad = 8;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_receivegesturepad_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_receivegesturepad(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .TETouchGesture receiveGestureScreen = 9;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_receivegesturescreen_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_receivegesturescreen(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  // repeated .TIdentifier touchVolumeChildIdentifier = 10;
  total_size += 1UL * this->_internal_touchvolumechildidentifier_size();
  for (const auto& msg : this->_impl_.touchvolumechildidentifier_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .HmiWidget.TPolyLine touchAreaPolygon = 15;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.touchareapolygon_);
    }

    // optional bool receiveDirectInput = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool passTouch = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool alwaysTouch = 13;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool defaultTouchHandled = 11;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool ignoreController = 12;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool ignoreFocusOnTouch = 14;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool blockTouchToParents = 17;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional int32 significantMovementOverwrite = 16;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::Int32Size(
          this->_internal_significantmovementoverwrite());
    }

    // optional .HmiWidget.TETouchVolumeSource touchVolumeSource = 7;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_touchvolumesource());
    }

    // optional .HmiWidget.TETouchTargetDomain touchScreenTargetDomain = 4;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_touchscreentargetdomain());
    }

    // optional .HmiWidget.TETouchTargetDomain touchControllerTargetDomain = 5;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_touchcontrollertargetdomain());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TInputConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TInputConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TInputConfig::GetClassData() const { return &_class_data_; }


void TInputConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TInputConfig*>(&to_msg);
  auto& from = static_cast<const TInputConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TInputConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.receivegesture_.MergeFrom(from._impl_.receivegesture_);
  _this->_impl_.ignoretouch_.MergeFrom(from._impl_.ignoretouch_);
  _this->_impl_.receivegesturepad_.MergeFrom(from._impl_.receivegesturepad_);
  _this->_impl_.receivegesturescreen_.MergeFrom(from._impl_.receivegesturescreen_);
  _this->_impl_.touchvolumechildidentifier_.MergeFrom(from._impl_.touchvolumechildidentifier_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_touchareapolygon()->::HmiWidget::TPolyLine::MergeFrom(
          from._internal_touchareapolygon());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.receivedirectinput_ = from._impl_.receivedirectinput_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.passtouch_ = from._impl_.passtouch_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.alwaystouch_ = from._impl_.alwaystouch_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.defaulttouchhandled_ = from._impl_.defaulttouchhandled_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.ignorecontroller_ = from._impl_.ignorecontroller_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.ignorefocusontouch_ = from._impl_.ignorefocusontouch_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.blocktouchtoparents_ = from._impl_.blocktouchtoparents_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.significantmovementoverwrite_ = from._impl_.significantmovementoverwrite_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.touchvolumesource_ = from._impl_.touchvolumesource_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.touchscreentargetdomain_ = from._impl_.touchscreentargetdomain_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.touchcontrollertargetdomain_ = from._impl_.touchcontrollertargetdomain_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TInputConfig::CopyFrom(const TInputConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TInputConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInputConfig::IsInitialized() const {
  if (_internal_has_touchareapolygon()) {
    if (!_impl_.touchareapolygon_->IsInitialized()) return false;
  }
  return true;
}

void TInputConfig::InternalSwap(TInputConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.receivegesture_.InternalSwap(&other->_impl_.receivegesture_);
  _impl_.ignoretouch_.InternalSwap(&other->_impl_.ignoretouch_);
  _impl_.receivegesturepad_.InternalSwap(&other->_impl_.receivegesturepad_);
  _impl_.receivegesturescreen_.InternalSwap(&other->_impl_.receivegesturescreen_);
  _impl_.touchvolumechildidentifier_.InternalSwap(&other->_impl_.touchvolumechildidentifier_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TInputConfig, _impl_.significantmovementoverwrite_)
      + sizeof(TInputConfig::_impl_.significantmovementoverwrite_)
      - PROTOBUF_FIELD_OFFSET(TInputConfig, _impl_.touchareapolygon_)>(
          reinterpret_cast<char*>(&_impl_.touchareapolygon_),
          reinterpret_cast<char*>(&other->_impl_.touchareapolygon_));
  swap(_impl_.touchvolumesource_, other->_impl_.touchvolumesource_);
  swap(_impl_.touchscreentargetdomain_, other->_impl_.touchscreentargetdomain_);
  swap(_impl_.touchcontrollertargetdomain_, other->_impl_.touchcontrollertargetdomain_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TInputConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[19]);
}

// ===================================================================

class TImportDefinition::_Internal {
 public:
  using HasBits = decltype(std::declval<TImportDefinition>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TImportDefinition, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TImportDefinition* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TForwardSignals& forwardsignals(const TImportDefinition* msg);
  static void set_has_forwardsignals(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::HmiWidget::TInputConfig& input(const TImportDefinition* msg);
  static void set_has_input(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::HmiWidget::TRequestLayout& requestlayout(const TImportDefinition* msg);
  static void set_has_requestlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::HmiWidget::TDefaultChildModelBindings& defaultchildmodelbindings(const TImportDefinition* msg);
  static void set_has_defaultchildmodelbindings(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::HmiWidget::TNodeTransform& transform(const TImportDefinition* msg);
  static void set_has_transform(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::HmiWidget::TRenderLayerProperties& renderlayerproperties(const TImportDefinition* msg);
  static void set_has_renderlayerproperties(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::HmiWidget::TNodeProperties& nodeproperties(const TImportDefinition* msg);
  static void set_has_nodeproperties(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::HmiWidget::TCameraNodeProperties& cameranodeproperties(const TImportDefinition* msg);
  static void set_has_cameranodeproperties(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::HmiWidget::TWidgetAnimation& widgetanimation(const TImportDefinition* msg);
  static void set_has_widgetanimation(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

const ::TIdentifier&
TImportDefinition::_Internal::identifier(const TImportDefinition* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TForwardSignals&
TImportDefinition::_Internal::forwardsignals(const TImportDefinition* msg) {
  return *msg->_impl_.forwardsignals_;
}
const ::HmiWidget::TInputConfig&
TImportDefinition::_Internal::input(const TImportDefinition* msg) {
  return *msg->_impl_.input_;
}
const ::HmiWidget::TRequestLayout&
TImportDefinition::_Internal::requestlayout(const TImportDefinition* msg) {
  return *msg->_impl_.requestlayout_;
}
const ::HmiWidget::TDefaultChildModelBindings&
TImportDefinition::_Internal::defaultchildmodelbindings(const TImportDefinition* msg) {
  return *msg->_impl_.defaultchildmodelbindings_;
}
const ::HmiWidget::TNodeTransform&
TImportDefinition::_Internal::transform(const TImportDefinition* msg) {
  return *msg->_impl_.transform_;
}
const ::HmiWidget::TRenderLayerProperties&
TImportDefinition::_Internal::renderlayerproperties(const TImportDefinition* msg) {
  return *msg->_impl_.renderlayerproperties_;
}
const ::HmiWidget::TNodeProperties&
TImportDefinition::_Internal::nodeproperties(const TImportDefinition* msg) {
  return *msg->_impl_.nodeproperties_;
}
const ::HmiWidget::TCameraNodeProperties&
TImportDefinition::_Internal::cameranodeproperties(const TImportDefinition* msg) {
  return *msg->_impl_.cameranodeproperties_;
}
const ::HmiWidget::TWidgetAnimation&
TImportDefinition::_Internal::widgetanimation(const TImportDefinition* msg) {
  return *msg->_impl_.widgetanimation_;
}
void TImportDefinition::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TImportDefinition::clear_useimport() {
  _impl_.useimport_.Clear();
}
TImportDefinition::TImportDefinition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TImportDefinition)
}
TImportDefinition::TImportDefinition(const TImportDefinition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TImportDefinition* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.useimport_){from._impl_.useimport_}
    , decltype(_impl_.child_){from._impl_.child_}
    , decltype(_impl_.externalmodelvalue_){from._impl_.externalmodelvalue_}
    , decltype(_impl_.internalmodelvalue_){from._impl_.internalmodelvalue_}
    , decltype(_impl_.nodeparam_){from._impl_.nodeparam_}
    , decltype(_impl_.slot_){from._impl_.slot_}
    , decltype(_impl_.layout_){from._impl_.layout_}
    , decltype(_impl_.script_){from._impl_.script_}
    , decltype(_impl_.triggeredslot_){from._impl_.triggeredslot_}
    , decltype(_impl_.compositeanimation_){from._impl_.compositeanimation_}
    , decltype(_impl_.trigger_){from._impl_.trigger_}
    , decltype(_impl_.curve_){from._impl_.curve_}
    , decltype(_impl_.addmodelbindingstochild_){from._impl_.addmodelbindingstochild_}
    , decltype(_impl_.resourceparam_){from._impl_.resourceparam_}
    , decltype(_impl_.modelbinding_){from._impl_.modelbinding_}
    , decltype(_impl_.uniform_){from._impl_.uniform_}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.forwardsignals_){nullptr}
    , decltype(_impl_.input_){nullptr}
    , decltype(_impl_.requestlayout_){nullptr}
    , decltype(_impl_.defaultchildmodelbindings_){nullptr}
    , decltype(_impl_.transform_){nullptr}
    , decltype(_impl_.renderlayerproperties_){nullptr}
    , decltype(_impl_.nodeproperties_){nullptr}
    , decltype(_impl_.cameranodeproperties_){nullptr}
    , decltype(_impl_.widgetanimation_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_forwardsignals()) {
    _this->_impl_.forwardsignals_ = new ::HmiWidget::TForwardSignals(*from._impl_.forwardsignals_);
  }
  if (from._internal_has_input()) {
    _this->_impl_.input_ = new ::HmiWidget::TInputConfig(*from._impl_.input_);
  }
  if (from._internal_has_requestlayout()) {
    _this->_impl_.requestlayout_ = new ::HmiWidget::TRequestLayout(*from._impl_.requestlayout_);
  }
  if (from._internal_has_defaultchildmodelbindings()) {
    _this->_impl_.defaultchildmodelbindings_ = new ::HmiWidget::TDefaultChildModelBindings(*from._impl_.defaultchildmodelbindings_);
  }
  if (from._internal_has_transform()) {
    _this->_impl_.transform_ = new ::HmiWidget::TNodeTransform(*from._impl_.transform_);
  }
  if (from._internal_has_renderlayerproperties()) {
    _this->_impl_.renderlayerproperties_ = new ::HmiWidget::TRenderLayerProperties(*from._impl_.renderlayerproperties_);
  }
  if (from._internal_has_nodeproperties()) {
    _this->_impl_.nodeproperties_ = new ::HmiWidget::TNodeProperties(*from._impl_.nodeproperties_);
  }
  if (from._internal_has_cameranodeproperties()) {
    _this->_impl_.cameranodeproperties_ = new ::HmiWidget::TCameraNodeProperties(*from._impl_.cameranodeproperties_);
  }
  if (from._internal_has_widgetanimation()) {
    _this->_impl_.widgetanimation_ = new ::HmiWidget::TWidgetAnimation(*from._impl_.widgetanimation_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TImportDefinition)
}

inline void TImportDefinition::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.useimport_){arena}
    , decltype(_impl_.child_){arena}
    , decltype(_impl_.externalmodelvalue_){arena}
    , decltype(_impl_.internalmodelvalue_){arena}
    , decltype(_impl_.nodeparam_){arena}
    , decltype(_impl_.slot_){arena}
    , decltype(_impl_.layout_){arena}
    , decltype(_impl_.script_){arena}
    , decltype(_impl_.triggeredslot_){arena}
    , decltype(_impl_.compositeanimation_){arena}
    , decltype(_impl_.trigger_){arena}
    , decltype(_impl_.curve_){arena}
    , decltype(_impl_.addmodelbindingstochild_){arena}
    , decltype(_impl_.resourceparam_){arena}
    , decltype(_impl_.modelbinding_){arena}
    , decltype(_impl_.uniform_){arena}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.forwardsignals_){nullptr}
    , decltype(_impl_.input_){nullptr}
    , decltype(_impl_.requestlayout_){nullptr}
    , decltype(_impl_.defaultchildmodelbindings_){nullptr}
    , decltype(_impl_.transform_){nullptr}
    , decltype(_impl_.renderlayerproperties_){nullptr}
    , decltype(_impl_.nodeproperties_){nullptr}
    , decltype(_impl_.cameranodeproperties_){nullptr}
    , decltype(_impl_.widgetanimation_){nullptr}
  };
}

TImportDefinition::~TImportDefinition() {
  // @@protoc_insertion_point(destructor:HmiWidget.TImportDefinition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TImportDefinition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.useimport_.~RepeatedPtrField();
  _impl_.child_.~RepeatedPtrField();
  _impl_.externalmodelvalue_.~RepeatedPtrField();
  _impl_.internalmodelvalue_.~RepeatedPtrField();
  _impl_.nodeparam_.~RepeatedPtrField();
  _impl_.slot_.~RepeatedPtrField();
  _impl_.layout_.~RepeatedPtrField();
  _impl_.script_.~RepeatedPtrField();
  _impl_.triggeredslot_.~RepeatedPtrField();
  _impl_.compositeanimation_.~RepeatedPtrField();
  _impl_.trigger_.~RepeatedPtrField();
  _impl_.curve_.~RepeatedPtrField();
  _impl_.addmodelbindingstochild_.~RepeatedPtrField();
  _impl_.resourceparam_.~RepeatedPtrField();
  _impl_.modelbinding_.~RepeatedPtrField();
  _impl_.uniform_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.forwardsignals_;
  if (this != internal_default_instance()) delete _impl_.input_;
  if (this != internal_default_instance()) delete _impl_.requestlayout_;
  if (this != internal_default_instance()) delete _impl_.defaultchildmodelbindings_;
  if (this != internal_default_instance()) delete _impl_.transform_;
  if (this != internal_default_instance()) delete _impl_.renderlayerproperties_;
  if (this != internal_default_instance()) delete _impl_.nodeproperties_;
  if (this != internal_default_instance()) delete _impl_.cameranodeproperties_;
  if (this != internal_default_instance()) delete _impl_.widgetanimation_;
}

void TImportDefinition::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TImportDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TImportDefinition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.useimport_.Clear();
  _impl_.child_.Clear();
  _impl_.externalmodelvalue_.Clear();
  _impl_.internalmodelvalue_.Clear();
  _impl_.nodeparam_.Clear();
  _impl_.slot_.Clear();
  _impl_.layout_.Clear();
  _impl_.script_.Clear();
  _impl_.triggeredslot_.Clear();
  _impl_.compositeanimation_.Clear();
  _impl_.trigger_.Clear();
  _impl_.curve_.Clear();
  _impl_.addmodelbindingstochild_.Clear();
  _impl_.resourceparam_.Clear();
  _impl_.modelbinding_.Clear();
  _impl_.uniform_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.forwardsignals_ != nullptr);
      _impl_.forwardsignals_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.input_ != nullptr);
      _impl_.input_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.requestlayout_ != nullptr);
      _impl_.requestlayout_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.defaultchildmodelbindings_ != nullptr);
      _impl_.defaultchildmodelbindings_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.transform_ != nullptr);
      _impl_.transform_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.renderlayerproperties_ != nullptr);
      _impl_.renderlayerproperties_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.nodeproperties_ != nullptr);
      _impl_.nodeproperties_->Clear();
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.cameranodeproperties_ != nullptr);
      _impl_.cameranodeproperties_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.widgetanimation_ != nullptr);
      _impl_.widgetanimation_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TImportDefinition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TIdentifier useImport = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_useimport(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TChildWidget child = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_child(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TExternalModelParameter externalModelValue = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_externalmodelvalue(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<170>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TInternalModelParameter internalModelValue = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_internalmodelvalue(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<178>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TNodeParam nodeParam = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 194)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_nodeparam(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<194>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TSlot slot = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_slot(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<202>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayout layout = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 210)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_layout(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<210>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TScript script = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 218)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_script(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<218>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TTriggeredSlot triggeredSlot = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 226)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_triggeredslot(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<226>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TCompositeAnimation compositeAnimation = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_compositeanimation(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<242>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TTrigger trigger = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 250)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_trigger(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<250>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TForwardSignals forwardSignals = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 2)) {
          ptr = ctx->ParseMessage(_internal_mutable_forwardsignals(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TInputConfig input = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_input(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TCurve curve = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_curve(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<274>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TRequestLayout requestLayout = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TDefaultChildModelBindings defaultChildModelBindings = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultchildmodelbindings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TAddModelBindingsToChild addModelBindingsToChild = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_addmodelbindingstochild(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<298>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TResourceParam resourceParam = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_resourceparam(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<306>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TChildModelParameter modelbinding = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_modelbinding(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<802>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TUniform uniform = 200;
      case 200:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_uniform(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<1602>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TNodeTransform transform = 201;
      case 201:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_transform(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TRenderLayerProperties renderLayerProperties = 202;
      case 202:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_renderlayerproperties(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TNodeProperties nodeProperties = 203;
      case 203:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_nodeproperties(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TCameraNodeProperties cameraNodeProperties = 204;
      case 204:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_cameranodeproperties(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TWidgetAnimation widgetAnimation = 300;
      case 300:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_widgetanimation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TImportDefinition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TImportDefinition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // repeated .TIdentifier useImport = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_useimport_size()); i < n; i++) {
    const auto& repfield = this->_internal_useimport(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TChildWidget child = 20;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_child_size()); i < n; i++) {
    const auto& repfield = this->_internal_child(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(20, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TExternalModelParameter externalModelValue = 21;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_externalmodelvalue_size()); i < n; i++) {
    const auto& repfield = this->_internal_externalmodelvalue(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(21, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TInternalModelParameter internalModelValue = 22;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_internalmodelvalue_size()); i < n; i++) {
    const auto& repfield = this->_internal_internalmodelvalue(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(22, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TNodeParam nodeParam = 24;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_nodeparam_size()); i < n; i++) {
    const auto& repfield = this->_internal_nodeparam(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(24, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TSlot slot = 25;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_slot_size()); i < n; i++) {
    const auto& repfield = this->_internal_slot(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(25, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayout layout = 26;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_layout_size()); i < n; i++) {
    const auto& repfield = this->_internal_layout(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(26, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TScript script = 27;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_script_size()); i < n; i++) {
    const auto& repfield = this->_internal_script(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(27, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TTriggeredSlot triggeredSlot = 28;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_triggeredslot_size()); i < n; i++) {
    const auto& repfield = this->_internal_triggeredslot(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(28, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TCompositeAnimation compositeAnimation = 30;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_compositeanimation_size()); i < n; i++) {
    const auto& repfield = this->_internal_compositeanimation(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(30, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TTrigger trigger = 31;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trigger_size()); i < n; i++) {
    const auto& repfield = this->_internal_trigger(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(31, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TForwardSignals forwardSignals = 32;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(32, _Internal::forwardsignals(this),
        _Internal::forwardsignals(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TInputConfig input = 33;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(33, _Internal::input(this),
        _Internal::input(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TCurve curve = 34;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_curve_size()); i < n; i++) {
    const auto& repfield = this->_internal_curve(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(34, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TRequestLayout requestLayout = 35;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(35, _Internal::requestlayout(this),
        _Internal::requestlayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TDefaultChildModelBindings defaultChildModelBindings = 36;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(36, _Internal::defaultchildmodelbindings(this),
        _Internal::defaultchildmodelbindings(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TAddModelBindingsToChild addModelBindingsToChild = 37;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_addmodelbindingstochild_size()); i < n; i++) {
    const auto& repfield = this->_internal_addmodelbindingstochild(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(37, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TResourceParam resourceParam = 38;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resourceparam_size()); i < n; i++) {
    const auto& repfield = this->_internal_resourceparam(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(38, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TChildModelParameter modelbinding = 100;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_modelbinding_size()); i < n; i++) {
    const auto& repfield = this->_internal_modelbinding(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(100, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TUniform uniform = 200;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_uniform_size()); i < n; i++) {
    const auto& repfield = this->_internal_uniform(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(200, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TNodeTransform transform = 201;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(201, _Internal::transform(this),
        _Internal::transform(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TRenderLayerProperties renderLayerProperties = 202;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(202, _Internal::renderlayerproperties(this),
        _Internal::renderlayerproperties(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TNodeProperties nodeProperties = 203;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(203, _Internal::nodeproperties(this),
        _Internal::nodeproperties(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TCameraNodeProperties cameraNodeProperties = 204;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(204, _Internal::cameranodeproperties(this),
        _Internal::cameranodeproperties(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TWidgetAnimation widgetAnimation = 300;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(300, _Internal::widgetanimation(this),
        _Internal::widgetanimation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TImportDefinition)
  return target;
}

size_t TImportDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TImportDefinition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TIdentifier useImport = 10;
  total_size += 1UL * this->_internal_useimport_size();
  for (const auto& msg : this->_impl_.useimport_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TChildWidget child = 20;
  total_size += 2UL * this->_internal_child_size();
  for (const auto& msg : this->_impl_.child_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TExternalModelParameter externalModelValue = 21;
  total_size += 2UL * this->_internal_externalmodelvalue_size();
  for (const auto& msg : this->_impl_.externalmodelvalue_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TInternalModelParameter internalModelValue = 22;
  total_size += 2UL * this->_internal_internalmodelvalue_size();
  for (const auto& msg : this->_impl_.internalmodelvalue_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TNodeParam nodeParam = 24;
  total_size += 2UL * this->_internal_nodeparam_size();
  for (const auto& msg : this->_impl_.nodeparam_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TSlot slot = 25;
  total_size += 2UL * this->_internal_slot_size();
  for (const auto& msg : this->_impl_.slot_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayout layout = 26;
  total_size += 2UL * this->_internal_layout_size();
  for (const auto& msg : this->_impl_.layout_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TScript script = 27;
  total_size += 2UL * this->_internal_script_size();
  for (const auto& msg : this->_impl_.script_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TTriggeredSlot triggeredSlot = 28;
  total_size += 2UL * this->_internal_triggeredslot_size();
  for (const auto& msg : this->_impl_.triggeredslot_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TCompositeAnimation compositeAnimation = 30;
  total_size += 2UL * this->_internal_compositeanimation_size();
  for (const auto& msg : this->_impl_.compositeanimation_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TTrigger trigger = 31;
  total_size += 2UL * this->_internal_trigger_size();
  for (const auto& msg : this->_impl_.trigger_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TCurve curve = 34;
  total_size += 2UL * this->_internal_curve_size();
  for (const auto& msg : this->_impl_.curve_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TAddModelBindingsToChild addModelBindingsToChild = 37;
  total_size += 2UL * this->_internal_addmodelbindingstochild_size();
  for (const auto& msg : this->_impl_.addmodelbindingstochild_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TResourceParam resourceParam = 38;
  total_size += 2UL * this->_internal_resourceparam_size();
  for (const auto& msg : this->_impl_.resourceparam_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TChildModelParameter modelbinding = 100;
  total_size += 2UL * this->_internal_modelbinding_size();
  for (const auto& msg : this->_impl_.modelbinding_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TUniform uniform = 200;
  total_size += 2UL * this->_internal_uniform_size();
  for (const auto& msg : this->_impl_.uniform_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TIdentifier identifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.identifier_);
    }

    // optional .HmiWidget.TForwardSignals forwardSignals = 32;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.forwardsignals_);
    }

    // optional .HmiWidget.TInputConfig input = 33;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.input_);
    }

    // optional .HmiWidget.TRequestLayout requestLayout = 35;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.requestlayout_);
    }

    // optional .HmiWidget.TDefaultChildModelBindings defaultChildModelBindings = 36;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.defaultchildmodelbindings_);
    }

    // optional .HmiWidget.TNodeTransform transform = 201;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transform_);
    }

    // optional .HmiWidget.TRenderLayerProperties renderLayerProperties = 202;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.renderlayerproperties_);
    }

    // optional .HmiWidget.TNodeProperties nodeProperties = 203;
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nodeproperties_);
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional .HmiWidget.TCameraNodeProperties cameraNodeProperties = 204;
    if (cached_has_bits & 0x00000100u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.cameranodeproperties_);
    }

    // optional .HmiWidget.TWidgetAnimation widgetAnimation = 300;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.widgetanimation_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TImportDefinition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TImportDefinition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TImportDefinition::GetClassData() const { return &_class_data_; }


void TImportDefinition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TImportDefinition*>(&to_msg);
  auto& from = static_cast<const TImportDefinition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TImportDefinition)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.useimport_.MergeFrom(from._impl_.useimport_);
  _this->_impl_.child_.MergeFrom(from._impl_.child_);
  _this->_impl_.externalmodelvalue_.MergeFrom(from._impl_.externalmodelvalue_);
  _this->_impl_.internalmodelvalue_.MergeFrom(from._impl_.internalmodelvalue_);
  _this->_impl_.nodeparam_.MergeFrom(from._impl_.nodeparam_);
  _this->_impl_.slot_.MergeFrom(from._impl_.slot_);
  _this->_impl_.layout_.MergeFrom(from._impl_.layout_);
  _this->_impl_.script_.MergeFrom(from._impl_.script_);
  _this->_impl_.triggeredslot_.MergeFrom(from._impl_.triggeredslot_);
  _this->_impl_.compositeanimation_.MergeFrom(from._impl_.compositeanimation_);
  _this->_impl_.trigger_.MergeFrom(from._impl_.trigger_);
  _this->_impl_.curve_.MergeFrom(from._impl_.curve_);
  _this->_impl_.addmodelbindingstochild_.MergeFrom(from._impl_.addmodelbindingstochild_);
  _this->_impl_.resourceparam_.MergeFrom(from._impl_.resourceparam_);
  _this->_impl_.modelbinding_.MergeFrom(from._impl_.modelbinding_);
  _this->_impl_.uniform_.MergeFrom(from._impl_.uniform_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_forwardsignals()->::HmiWidget::TForwardSignals::MergeFrom(
          from._internal_forwardsignals());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_input()->::HmiWidget::TInputConfig::MergeFrom(
          from._internal_input());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_requestlayout()->::HmiWidget::TRequestLayout::MergeFrom(
          from._internal_requestlayout());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_defaultchildmodelbindings()->::HmiWidget::TDefaultChildModelBindings::MergeFrom(
          from._internal_defaultchildmodelbindings());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_transform()->::HmiWidget::TNodeTransform::MergeFrom(
          from._internal_transform());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_renderlayerproperties()->::HmiWidget::TRenderLayerProperties::MergeFrom(
          from._internal_renderlayerproperties());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_nodeproperties()->::HmiWidget::TNodeProperties::MergeFrom(
          from._internal_nodeproperties());
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_cameranodeproperties()->::HmiWidget::TCameraNodeProperties::MergeFrom(
          from._internal_cameranodeproperties());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_widgetanimation()->::HmiWidget::TWidgetAnimation::MergeFrom(
          from._internal_widgetanimation());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TImportDefinition::CopyFrom(const TImportDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TImportDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TImportDefinition::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.child_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.externalmodelvalue_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.internalmodelvalue_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.nodeparam_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.slot_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.layout_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.script_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.triggeredslot_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.compositeanimation_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.trigger_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.curve_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.addmodelbindingstochild_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.resourceparam_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.modelbinding_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.uniform_))
    return false;
  if (_internal_has_input()) {
    if (!_impl_.input_->IsInitialized()) return false;
  }
  if (_internal_has_requestlayout()) {
    if (!_impl_.requestlayout_->IsInitialized()) return false;
  }
  if (_internal_has_defaultchildmodelbindings()) {
    if (!_impl_.defaultchildmodelbindings_->IsInitialized()) return false;
  }
  if (_internal_has_transform()) {
    if (!_impl_.transform_->IsInitialized()) return false;
  }
  if (_internal_has_renderlayerproperties()) {
    if (!_impl_.renderlayerproperties_->IsInitialized()) return false;
  }
  if (_internal_has_nodeproperties()) {
    if (!_impl_.nodeproperties_->IsInitialized()) return false;
  }
  if (_internal_has_cameranodeproperties()) {
    if (!_impl_.cameranodeproperties_->IsInitialized()) return false;
  }
  if (_internal_has_widgetanimation()) {
    if (!_impl_.widgetanimation_->IsInitialized()) return false;
  }
  return true;
}

void TImportDefinition::InternalSwap(TImportDefinition* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.useimport_.InternalSwap(&other->_impl_.useimport_);
  _impl_.child_.InternalSwap(&other->_impl_.child_);
  _impl_.externalmodelvalue_.InternalSwap(&other->_impl_.externalmodelvalue_);
  _impl_.internalmodelvalue_.InternalSwap(&other->_impl_.internalmodelvalue_);
  _impl_.nodeparam_.InternalSwap(&other->_impl_.nodeparam_);
  _impl_.slot_.InternalSwap(&other->_impl_.slot_);
  _impl_.layout_.InternalSwap(&other->_impl_.layout_);
  _impl_.script_.InternalSwap(&other->_impl_.script_);
  _impl_.triggeredslot_.InternalSwap(&other->_impl_.triggeredslot_);
  _impl_.compositeanimation_.InternalSwap(&other->_impl_.compositeanimation_);
  _impl_.trigger_.InternalSwap(&other->_impl_.trigger_);
  _impl_.curve_.InternalSwap(&other->_impl_.curve_);
  _impl_.addmodelbindingstochild_.InternalSwap(&other->_impl_.addmodelbindingstochild_);
  _impl_.resourceparam_.InternalSwap(&other->_impl_.resourceparam_);
  _impl_.modelbinding_.InternalSwap(&other->_impl_.modelbinding_);
  _impl_.uniform_.InternalSwap(&other->_impl_.uniform_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TImportDefinition, _impl_.widgetanimation_)
      + sizeof(TImportDefinition::_impl_.widgetanimation_)
      - PROTOBUF_FIELD_OFFSET(TImportDefinition, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TImportDefinition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[20]);
}

// ===================================================================

class TDefaultChildModelBindings::_Internal {
 public:
};

void TDefaultChildModelBindings::clear_useimport() {
  _impl_.useimport_.Clear();
}
TDefaultChildModelBindings::TDefaultChildModelBindings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TDefaultChildModelBindings)
}
TDefaultChildModelBindings::TDefaultChildModelBindings(const TDefaultChildModelBindings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TDefaultChildModelBindings* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.modelbinding_){from._impl_.modelbinding_}
    , decltype(_impl_.useimport_){from._impl_.useimport_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TDefaultChildModelBindings)
}

inline void TDefaultChildModelBindings::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.modelbinding_){arena}
    , decltype(_impl_.useimport_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TDefaultChildModelBindings::~TDefaultChildModelBindings() {
  // @@protoc_insertion_point(destructor:HmiWidget.TDefaultChildModelBindings)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TDefaultChildModelBindings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.modelbinding_.~RepeatedPtrField();
  _impl_.useimport_.~RepeatedPtrField();
}

void TDefaultChildModelBindings::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TDefaultChildModelBindings::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TDefaultChildModelBindings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modelbinding_.Clear();
  _impl_.useimport_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TDefaultChildModelBindings::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .HmiWidget.TChildModelParameter modelbinding = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_modelbinding(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .TIdentifier useImport = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_useimport(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TDefaultChildModelBindings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TDefaultChildModelBindings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HmiWidget.TChildModelParameter modelbinding = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_modelbinding_size()); i < n; i++) {
    const auto& repfield = this->_internal_modelbinding(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .TIdentifier useImport = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_useimport_size()); i < n; i++) {
    const auto& repfield = this->_internal_useimport(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TDefaultChildModelBindings)
  return target;
}

size_t TDefaultChildModelBindings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TDefaultChildModelBindings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TChildModelParameter modelbinding = 1;
  total_size += 1UL * this->_internal_modelbinding_size();
  for (const auto& msg : this->_impl_.modelbinding_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .TIdentifier useImport = 2;
  total_size += 1UL * this->_internal_useimport_size();
  for (const auto& msg : this->_impl_.useimport_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TDefaultChildModelBindings::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TDefaultChildModelBindings::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TDefaultChildModelBindings::GetClassData() const { return &_class_data_; }


void TDefaultChildModelBindings::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TDefaultChildModelBindings*>(&to_msg);
  auto& from = static_cast<const TDefaultChildModelBindings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TDefaultChildModelBindings)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.modelbinding_.MergeFrom(from._impl_.modelbinding_);
  _this->_impl_.useimport_.MergeFrom(from._impl_.useimport_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TDefaultChildModelBindings::CopyFrom(const TDefaultChildModelBindings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TDefaultChildModelBindings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDefaultChildModelBindings::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.modelbinding_))
    return false;
  return true;
}

void TDefaultChildModelBindings::InternalSwap(TDefaultChildModelBindings* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.modelbinding_.InternalSwap(&other->_impl_.modelbinding_);
  _impl_.useimport_.InternalSwap(&other->_impl_.useimport_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TDefaultChildModelBindings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[21]);
}

// ===================================================================

class TAddModelBindingsToChild::_Internal {
 public:
  using HasBits = decltype(std::declval<TAddModelBindingsToChild>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TAddModelBindingsToChild, _impl_._has_bits_);
  static const ::TIdentifier& childidentifier(const TAddModelBindingsToChild* msg);
  static void set_has_childidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_autobindallexternals(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TIdentifier&
TAddModelBindingsToChild::_Internal::childidentifier(const TAddModelBindingsToChild* msg) {
  return *msg->_impl_.childidentifier_;
}
void TAddModelBindingsToChild::clear_childidentifier() {
  if (_impl_.childidentifier_ != nullptr) _impl_.childidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TAddModelBindingsToChild::clear_exemptedexternalkey() {
  _impl_.exemptedexternalkey_.Clear();
}
TAddModelBindingsToChild::TAddModelBindingsToChild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TAddModelBindingsToChild)
}
TAddModelBindingsToChild::TAddModelBindingsToChild(const TAddModelBindingsToChild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TAddModelBindingsToChild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.modelbinding_){from._impl_.modelbinding_}
    , decltype(_impl_.exemptedexternalkey_){from._impl_.exemptedexternalkey_}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.autobindallexternals_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_childidentifier()) {
    _this->_impl_.childidentifier_ = new ::TIdentifier(*from._impl_.childidentifier_);
  }
  _this->_impl_.autobindallexternals_ = from._impl_.autobindallexternals_;
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TAddModelBindingsToChild)
}

inline void TAddModelBindingsToChild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.modelbinding_){arena}
    , decltype(_impl_.exemptedexternalkey_){arena}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.autobindallexternals_){false}
  };
}

TAddModelBindingsToChild::~TAddModelBindingsToChild() {
  // @@protoc_insertion_point(destructor:HmiWidget.TAddModelBindingsToChild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TAddModelBindingsToChild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.modelbinding_.~RepeatedPtrField();
  _impl_.exemptedexternalkey_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.childidentifier_;
}

void TAddModelBindingsToChild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TAddModelBindingsToChild::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TAddModelBindingsToChild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modelbinding_.Clear();
  _impl_.exemptedexternalkey_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.childidentifier_ != nullptr);
    _impl_.childidentifier_->Clear();
  }
  _impl_.autobindallexternals_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TAddModelBindingsToChild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier childIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_childidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TChildModelParameter modelbinding = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_modelbinding(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool autoBindAllExternals = 3 [default = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_autobindallexternals(&has_bits);
          _impl_.autobindallexternals_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TIdentifier exemptedExternalKey = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_exemptedexternalkey(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TAddModelBindingsToChild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TAddModelBindingsToChild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier childIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::childidentifier(this),
        _Internal::childidentifier(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TChildModelParameter modelbinding = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_modelbinding_size()); i < n; i++) {
    const auto& repfield = this->_internal_modelbinding(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional bool autoBindAllExternals = 3 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_autobindallexternals(), target);
  }

  // repeated .TIdentifier exemptedExternalKey = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_exemptedexternalkey_size()); i < n; i++) {
    const auto& repfield = this->_internal_exemptedexternalkey(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TAddModelBindingsToChild)
  return target;
}

size_t TAddModelBindingsToChild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TAddModelBindingsToChild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TChildModelParameter modelbinding = 2;
  total_size += 1UL * this->_internal_modelbinding_size();
  for (const auto& msg : this->_impl_.modelbinding_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .TIdentifier exemptedExternalKey = 4;
  total_size += 1UL * this->_internal_exemptedexternalkey_size();
  for (const auto& msg : this->_impl_.exemptedexternalkey_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .TIdentifier childIdentifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childidentifier_);
    }

    // optional bool autoBindAllExternals = 3 [default = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TAddModelBindingsToChild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TAddModelBindingsToChild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TAddModelBindingsToChild::GetClassData() const { return &_class_data_; }


void TAddModelBindingsToChild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TAddModelBindingsToChild*>(&to_msg);
  auto& from = static_cast<const TAddModelBindingsToChild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TAddModelBindingsToChild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.modelbinding_.MergeFrom(from._impl_.modelbinding_);
  _this->_impl_.exemptedexternalkey_.MergeFrom(from._impl_.exemptedexternalkey_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_childidentifier()->::TIdentifier::MergeFrom(
          from._internal_childidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.autobindallexternals_ = from._impl_.autobindallexternals_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TAddModelBindingsToChild::CopyFrom(const TAddModelBindingsToChild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TAddModelBindingsToChild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAddModelBindingsToChild::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.modelbinding_))
    return false;
  return true;
}

void TAddModelBindingsToChild::InternalSwap(TAddModelBindingsToChild* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.modelbinding_.InternalSwap(&other->_impl_.modelbinding_);
  _impl_.exemptedexternalkey_.InternalSwap(&other->_impl_.exemptedexternalkey_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TAddModelBindingsToChild, _impl_.autobindallexternals_)
      + sizeof(TAddModelBindingsToChild::_impl_.autobindallexternals_)
      - PROTOBUF_FIELD_OFFSET(TAddModelBindingsToChild, _impl_.childidentifier_)>(
          reinterpret_cast<char*>(&_impl_.childidentifier_),
          reinterpret_cast<char*>(&other->_impl_.childidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TAddModelBindingsToChild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[22]);
}

// ===================================================================

class TWidget_TPrototypeAsset::_Internal {
 public:
  using HasBits = decltype(std::declval<TWidget_TPrototypeAsset>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TWidget_TPrototypeAsset, _impl_._has_bits_);
  static void set_has_resourceid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_assetidlegacy(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_resourceidnumericlegacy(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_resourceidnumeric(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& binding(const TWidget_TPrototypeAsset* msg);
  static void set_has_binding(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::TDataBinding&
TWidget_TPrototypeAsset::_Internal::binding(const TWidget_TPrototypeAsset* msg) {
  return *msg->_impl_.binding_;
}
void TWidget_TPrototypeAsset::clear_binding() {
  if (_impl_.binding_ != nullptr) _impl_.binding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TWidget_TPrototypeAsset::TWidget_TPrototypeAsset(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TWidget.TPrototypeAsset)
}
TWidget_TPrototypeAsset::TWidget_TPrototypeAsset(const TWidget_TPrototypeAsset& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TWidget_TPrototypeAsset* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.resourceid_){}
    , decltype(_impl_.assetidlegacy_){}
    , decltype(_impl_.binding_){nullptr}
    , decltype(_impl_.resourceidnumeric_){}
    , decltype(_impl_.resourceidnumericlegacy_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.resourceid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resourceid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_resourceid()) {
    _this->_impl_.resourceid_.Set(from._internal_resourceid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.assetidlegacy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assetidlegacy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_assetidlegacy()) {
    _this->_impl_.assetidlegacy_.Set(from._internal_assetidlegacy(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_binding()) {
    _this->_impl_.binding_ = new ::TDataBinding(*from._impl_.binding_);
  }
  ::memcpy(&_impl_.resourceidnumeric_, &from._impl_.resourceidnumeric_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.resourceidnumericlegacy_) -
    reinterpret_cast<char*>(&_impl_.resourceidnumeric_)) + sizeof(_impl_.resourceidnumericlegacy_));
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TWidget.TPrototypeAsset)
}

inline void TWidget_TPrototypeAsset::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.resourceid_){}
    , decltype(_impl_.assetidlegacy_){}
    , decltype(_impl_.binding_){nullptr}
    , decltype(_impl_.resourceidnumeric_){uint64_t{0u}}
    , decltype(_impl_.resourceidnumericlegacy_){0u}
  };
  _impl_.resourceid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resourceid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.assetidlegacy_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.assetidlegacy_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TWidget_TPrototypeAsset::~TWidget_TPrototypeAsset() {
  // @@protoc_insertion_point(destructor:HmiWidget.TWidget.TPrototypeAsset)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TWidget_TPrototypeAsset::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resourceid_.Destroy();
  _impl_.assetidlegacy_.Destroy();
  if (this != internal_default_instance()) delete _impl_.binding_;
}

void TWidget_TPrototypeAsset::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TWidget_TPrototypeAsset::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TWidget.TPrototypeAsset)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.resourceid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.assetidlegacy_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.binding_ != nullptr);
      _impl_.binding_->Clear();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.resourceidnumeric_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.resourceidnumericlegacy_) -
        reinterpret_cast<char*>(&_impl_.resourceidnumeric_)) + sizeof(_impl_.resourceidnumericlegacy_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TWidget_TPrototypeAsset::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string ResourceId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_resourceid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "HmiWidget.TWidget.TPrototypeAsset.ResourceId");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string AssetIdLegacy = 2 [deprecated = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_assetidlegacy();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "HmiWidget.TWidget.TPrototypeAsset.AssetIdLegacy");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional fixed32 ResourceIdNumericLegacy = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _Internal::set_has_resourceidnumericlegacy(&has_bits);
          _impl_.resourceidnumericlegacy_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint32_t>(ptr);
          ptr += sizeof(uint32_t);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding binding = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_binding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional fixed64 ResourceIdNumeric = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          _Internal::set_has_resourceidnumeric(&has_bits);
          _impl_.resourceidnumeric_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TWidget_TPrototypeAsset::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TWidget.TPrototypeAsset)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string ResourceId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_resourceid().data(), static_cast<int>(this->_internal_resourceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "HmiWidget.TWidget.TPrototypeAsset.ResourceId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_resourceid(), target);
  }

  // optional string AssetIdLegacy = 2 [deprecated = true];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_assetidlegacy().data(), static_cast<int>(this->_internal_assetidlegacy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "HmiWidget.TWidget.TPrototypeAsset.AssetIdLegacy");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_assetidlegacy(), target);
  }

  // optional fixed32 ResourceIdNumericLegacy = 3 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(3, this->_internal_resourceidnumericlegacy(), target);
  }

  // optional .TDataBinding binding = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::binding(this),
        _Internal::binding(this).GetCachedSize(), target, stream);
  }

  // optional fixed64 ResourceIdNumeric = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(5, this->_internal_resourceidnumeric(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TWidget.TPrototypeAsset)
  return target;
}

size_t TWidget_TPrototypeAsset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TWidget.TPrototypeAsset)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string ResourceId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_resourceid());
    }

    // optional string AssetIdLegacy = 2 [deprecated = true];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_assetidlegacy());
    }

    // optional .TDataBinding binding = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.binding_);
    }

    // optional fixed64 ResourceIdNumeric = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional fixed32 ResourceIdNumericLegacy = 3 [deprecated = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 4;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TWidget_TPrototypeAsset::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TWidget_TPrototypeAsset::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TWidget_TPrototypeAsset::GetClassData() const { return &_class_data_; }


void TWidget_TPrototypeAsset::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TWidget_TPrototypeAsset*>(&to_msg);
  auto& from = static_cast<const TWidget_TPrototypeAsset&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TWidget.TPrototypeAsset)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_resourceid(from._internal_resourceid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_assetidlegacy(from._internal_assetidlegacy());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_binding()->::TDataBinding::MergeFrom(
          from._internal_binding());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.resourceidnumeric_ = from._impl_.resourceidnumeric_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.resourceidnumericlegacy_ = from._impl_.resourceidnumericlegacy_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TWidget_TPrototypeAsset::CopyFrom(const TWidget_TPrototypeAsset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TWidget.TPrototypeAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TWidget_TPrototypeAsset::IsInitialized() const {
  if (_internal_has_binding()) {
    if (!_impl_.binding_->IsInitialized()) return false;
  }
  return true;
}

void TWidget_TPrototypeAsset::InternalSwap(TWidget_TPrototypeAsset* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.resourceid_, lhs_arena,
      &other->_impl_.resourceid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.assetidlegacy_, lhs_arena,
      &other->_impl_.assetidlegacy_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TWidget_TPrototypeAsset, _impl_.resourceidnumericlegacy_)
      + sizeof(TWidget_TPrototypeAsset::_impl_.resourceidnumericlegacy_)
      - PROTOBUF_FIELD_OFFSET(TWidget_TPrototypeAsset, _impl_.binding_)>(
          reinterpret_cast<char*>(&_impl_.binding_),
          reinterpret_cast<char*>(&other->_impl_.binding_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TWidget_TPrototypeAsset::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[23]);
}

// ===================================================================

class TWidget::_Internal {
 public:
  using HasBits = decltype(std::declval<TWidget>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TWidget, _impl_._has_bits_);
  static const ::TIdentifier& type(const TWidget* msg);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TIdentifier& prototype(const TWidget* msg);
  static void set_has_prototype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::HmiWidget::TWidget_TPrototypeAsset& prototypeasset(const TWidget* msg);
  static void set_has_prototypeasset(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_prototypelevelselection(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::HmiWidget::TDefaultChildModelBindings& defaultchildmodelbindings(const TWidget* msg);
  static void set_has_defaultchildmodelbindings(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::HmiWidget::TInputConfig& input(const TWidget* msg);
  static void set_has_input(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::HmiWidget::TForwardSignals& forwardsignals(const TWidget* msg);
  static void set_has_forwardsignals(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::HmiWidget::TRequestLayout& requestlayout(const TWidget* msg);
  static void set_has_requestlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::TIdentifier&
TWidget::_Internal::type(const TWidget* msg) {
  return *msg->_impl_.type_;
}
const ::TIdentifier&
TWidget::_Internal::prototype(const TWidget* msg) {
  return *msg->_impl_.prototype_;
}
const ::HmiWidget::TWidget_TPrototypeAsset&
TWidget::_Internal::prototypeasset(const TWidget* msg) {
  return *msg->_impl_.prototypeasset_;
}
const ::HmiWidget::TDefaultChildModelBindings&
TWidget::_Internal::defaultchildmodelbindings(const TWidget* msg) {
  return *msg->_impl_.defaultchildmodelbindings_;
}
const ::HmiWidget::TInputConfig&
TWidget::_Internal::input(const TWidget* msg) {
  return *msg->_impl_.input_;
}
const ::HmiWidget::TForwardSignals&
TWidget::_Internal::forwardsignals(const TWidget* msg) {
  return *msg->_impl_.forwardsignals_;
}
const ::HmiWidget::TRequestLayout&
TWidget::_Internal::requestlayout(const TWidget* msg) {
  return *msg->_impl_.requestlayout_;
}
void TWidget::clear_type() {
  if (_impl_.type_ != nullptr) _impl_.type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TWidget::clear_prototype() {
  if (_impl_.prototype_ != nullptr) _impl_.prototype_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TWidget::clear_useimport() {
  _impl_.useimport_.Clear();
}
TWidget::TWidget(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TWidget)
}
TWidget::TWidget(const TWidget& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TWidget* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.child_){from._impl_.child_}
    , decltype(_impl_.externalmodelvalue_){from._impl_.externalmodelvalue_}
    , decltype(_impl_.internalmodelvalue_){from._impl_.internalmodelvalue_}
    , decltype(_impl_.nodeparam_){from._impl_.nodeparam_}
    , decltype(_impl_.slot_){from._impl_.slot_}
    , decltype(_impl_.layout_){from._impl_.layout_}
    , decltype(_impl_.script_){from._impl_.script_}
    , decltype(_impl_.triggeredslot_){from._impl_.triggeredslot_}
    , decltype(_impl_.compositeanimation_){from._impl_.compositeanimation_}
    , decltype(_impl_.trigger_){from._impl_.trigger_}
    , decltype(_impl_.useimport_){from._impl_.useimport_}
    , decltype(_impl_.curve_){from._impl_.curve_}
    , decltype(_impl_.addmodelbindingstochild_){from._impl_.addmodelbindingstochild_}
    , decltype(_impl_.resourceparam_){from._impl_.resourceparam_}
    , decltype(_impl_.type_){nullptr}
    , decltype(_impl_.prototype_){nullptr}
    , decltype(_impl_.prototypeasset_){nullptr}
    , decltype(_impl_.defaultchildmodelbindings_){nullptr}
    , decltype(_impl_.input_){nullptr}
    , decltype(_impl_.forwardsignals_){nullptr}
    , decltype(_impl_.requestlayout_){nullptr}
    , decltype(_impl_.prototypelevelselection_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_type()) {
    _this->_impl_.type_ = new ::TIdentifier(*from._impl_.type_);
  }
  if (from._internal_has_prototype()) {
    _this->_impl_.prototype_ = new ::TIdentifier(*from._impl_.prototype_);
  }
  if (from._internal_has_prototypeasset()) {
    _this->_impl_.prototypeasset_ = new ::HmiWidget::TWidget_TPrototypeAsset(*from._impl_.prototypeasset_);
  }
  if (from._internal_has_defaultchildmodelbindings()) {
    _this->_impl_.defaultchildmodelbindings_ = new ::HmiWidget::TDefaultChildModelBindings(*from._impl_.defaultchildmodelbindings_);
  }
  if (from._internal_has_input()) {
    _this->_impl_.input_ = new ::HmiWidget::TInputConfig(*from._impl_.input_);
  }
  if (from._internal_has_forwardsignals()) {
    _this->_impl_.forwardsignals_ = new ::HmiWidget::TForwardSignals(*from._impl_.forwardsignals_);
  }
  if (from._internal_has_requestlayout()) {
    _this->_impl_.requestlayout_ = new ::HmiWidget::TRequestLayout(*from._impl_.requestlayout_);
  }
  _this->_impl_.prototypelevelselection_ = from._impl_.prototypelevelselection_;
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TWidget)
}

inline void TWidget::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.child_){arena}
    , decltype(_impl_.externalmodelvalue_){arena}
    , decltype(_impl_.internalmodelvalue_){arena}
    , decltype(_impl_.nodeparam_){arena}
    , decltype(_impl_.slot_){arena}
    , decltype(_impl_.layout_){arena}
    , decltype(_impl_.script_){arena}
    , decltype(_impl_.triggeredslot_){arena}
    , decltype(_impl_.compositeanimation_){arena}
    , decltype(_impl_.trigger_){arena}
    , decltype(_impl_.useimport_){arena}
    , decltype(_impl_.curve_){arena}
    , decltype(_impl_.addmodelbindingstochild_){arena}
    , decltype(_impl_.resourceparam_){arena}
    , decltype(_impl_.type_){nullptr}
    , decltype(_impl_.prototype_){nullptr}
    , decltype(_impl_.prototypeasset_){nullptr}
    , decltype(_impl_.defaultchildmodelbindings_){nullptr}
    , decltype(_impl_.input_){nullptr}
    , decltype(_impl_.forwardsignals_){nullptr}
    , decltype(_impl_.requestlayout_){nullptr}
    , decltype(_impl_.prototypelevelselection_){1}
  };
}

TWidget::~TWidget() {
  // @@protoc_insertion_point(destructor:HmiWidget.TWidget)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TWidget::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.child_.~RepeatedPtrField();
  _impl_.externalmodelvalue_.~RepeatedPtrField();
  _impl_.internalmodelvalue_.~RepeatedPtrField();
  _impl_.nodeparam_.~RepeatedPtrField();
  _impl_.slot_.~RepeatedPtrField();
  _impl_.layout_.~RepeatedPtrField();
  _impl_.script_.~RepeatedPtrField();
  _impl_.triggeredslot_.~RepeatedPtrField();
  _impl_.compositeanimation_.~RepeatedPtrField();
  _impl_.trigger_.~RepeatedPtrField();
  _impl_.useimport_.~RepeatedPtrField();
  _impl_.curve_.~RepeatedPtrField();
  _impl_.addmodelbindingstochild_.~RepeatedPtrField();
  _impl_.resourceparam_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.type_;
  if (this != internal_default_instance()) delete _impl_.prototype_;
  if (this != internal_default_instance()) delete _impl_.prototypeasset_;
  if (this != internal_default_instance()) delete _impl_.defaultchildmodelbindings_;
  if (this != internal_default_instance()) delete _impl_.input_;
  if (this != internal_default_instance()) delete _impl_.forwardsignals_;
  if (this != internal_default_instance()) delete _impl_.requestlayout_;
}

void TWidget::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TWidget::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TWidget)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.child_.Clear();
  _impl_.externalmodelvalue_.Clear();
  _impl_.internalmodelvalue_.Clear();
  _impl_.nodeparam_.Clear();
  _impl_.slot_.Clear();
  _impl_.layout_.Clear();
  _impl_.script_.Clear();
  _impl_.triggeredslot_.Clear();
  _impl_.compositeanimation_.Clear();
  _impl_.trigger_.Clear();
  _impl_.useimport_.Clear();
  _impl_.curve_.Clear();
  _impl_.addmodelbindingstochild_.Clear();
  _impl_.resourceparam_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.type_ != nullptr);
      _impl_.type_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.prototype_ != nullptr);
      _impl_.prototype_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.prototypeasset_ != nullptr);
      _impl_.prototypeasset_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.defaultchildmodelbindings_ != nullptr);
      _impl_.defaultchildmodelbindings_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.input_ != nullptr);
      _impl_.input_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.forwardsignals_ != nullptr);
      _impl_.forwardsignals_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.requestlayout_ != nullptr);
      _impl_.requestlayout_->Clear();
    }
    _impl_.prototypelevelselection_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TWidget::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TIdentifier prototype = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_prototype(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TChildWidget child = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_child(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TExternalModelParameter externalModelValue = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_externalmodelvalue(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TInternalModelParameter internalModelValue = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_internalmodelvalue(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TWidget.TPrototypeAsset prototypeAsset = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_prototypeasset(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TNodeParam nodeParam = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_nodeparam(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TSlot slot = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_slot(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayout layout = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_layout(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TScript script = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_script(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TTriggeredSlot triggeredSlot = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_triggeredslot(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TCompositeAnimation compositeAnimation = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_compositeanimation(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TTrigger trigger = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_trigger(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .TIdentifier useImport = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_useimport(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TDefaultChildModelBindings defaultChildModelBindings = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultchildmodelbindings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TInputConfig input = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_input(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TForwardSignals forwardSignals = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_forwardsignals(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TCurve curve = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_curve(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<154>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TRequestLayout requestLayout = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TELevelSelection prototypeLevelSelection = 21 [default = TELevelSelection_Default];
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TELevelSelection_IsValid(val))) {
            _internal_set_prototypelevelselection(static_cast<::HmiWidget::TELevelSelection>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(21, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TAddModelBindingsToChild addModelBindingsToChild = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_addmodelbindingstochild(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<178>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TResourceParam resourceParam = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_resourceparam(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<186>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TWidget::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TWidget)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::type(this),
        _Internal::type(this).GetCachedSize(), target, stream);
  }

  // optional .TIdentifier prototype = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::prototype(this),
        _Internal::prototype(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TChildWidget child = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_child_size()); i < n; i++) {
    const auto& repfield = this->_internal_child(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TExternalModelParameter externalModelValue = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_externalmodelvalue_size()); i < n; i++) {
    const auto& repfield = this->_internal_externalmodelvalue(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TInternalModelParameter internalModelValue = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_internalmodelvalue_size()); i < n; i++) {
    const auto& repfield = this->_internal_internalmodelvalue(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TWidget.TPrototypeAsset prototypeAsset = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::prototypeasset(this),
        _Internal::prototypeasset(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TNodeParam nodeParam = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_nodeparam_size()); i < n; i++) {
    const auto& repfield = this->_internal_nodeparam(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TSlot slot = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_slot_size()); i < n; i++) {
    const auto& repfield = this->_internal_slot(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayout layout = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_layout_size()); i < n; i++) {
    const auto& repfield = this->_internal_layout(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TScript script = 10;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_script_size()); i < n; i++) {
    const auto& repfield = this->_internal_script(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(10, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TTriggeredSlot triggeredSlot = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_triggeredslot_size()); i < n; i++) {
    const auto& repfield = this->_internal_triggeredslot(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TCompositeAnimation compositeAnimation = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_compositeanimation_size()); i < n; i++) {
    const auto& repfield = this->_internal_compositeanimation(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TTrigger trigger = 13;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trigger_size()); i < n; i++) {
    const auto& repfield = this->_internal_trigger(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(13, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .TIdentifier useImport = 14;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_useimport_size()); i < n; i++) {
    const auto& repfield = this->_internal_useimport(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(14, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TDefaultChildModelBindings defaultChildModelBindings = 15;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::defaultchildmodelbindings(this),
        _Internal::defaultchildmodelbindings(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TInputConfig input = 16;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::input(this),
        _Internal::input(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TForwardSignals forwardSignals = 18;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(18, _Internal::forwardsignals(this),
        _Internal::forwardsignals(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TCurve curve = 19;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_curve_size()); i < n; i++) {
    const auto& repfield = this->_internal_curve(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(19, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TRequestLayout requestLayout = 20;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, _Internal::requestlayout(this),
        _Internal::requestlayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TELevelSelection prototypeLevelSelection = 21 [default = TELevelSelection_Default];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      21, this->_internal_prototypelevelselection(), target);
  }

  // repeated .HmiWidget.TAddModelBindingsToChild addModelBindingsToChild = 22;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_addmodelbindingstochild_size()); i < n; i++) {
    const auto& repfield = this->_internal_addmodelbindingstochild(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(22, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TResourceParam resourceParam = 23;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resourceparam_size()); i < n; i++) {
    const auto& repfield = this->_internal_resourceparam(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(23, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TWidget)
  return target;
}

size_t TWidget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TWidget)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TChildWidget child = 3;
  total_size += 1UL * this->_internal_child_size();
  for (const auto& msg : this->_impl_.child_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TExternalModelParameter externalModelValue = 4;
  total_size += 1UL * this->_internal_externalmodelvalue_size();
  for (const auto& msg : this->_impl_.externalmodelvalue_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TInternalModelParameter internalModelValue = 5;
  total_size += 1UL * this->_internal_internalmodelvalue_size();
  for (const auto& msg : this->_impl_.internalmodelvalue_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TNodeParam nodeParam = 7;
  total_size += 1UL * this->_internal_nodeparam_size();
  for (const auto& msg : this->_impl_.nodeparam_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TSlot slot = 8;
  total_size += 1UL * this->_internal_slot_size();
  for (const auto& msg : this->_impl_.slot_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayout layout = 9;
  total_size += 1UL * this->_internal_layout_size();
  for (const auto& msg : this->_impl_.layout_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TScript script = 10;
  total_size += 1UL * this->_internal_script_size();
  for (const auto& msg : this->_impl_.script_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TTriggeredSlot triggeredSlot = 11;
  total_size += 1UL * this->_internal_triggeredslot_size();
  for (const auto& msg : this->_impl_.triggeredslot_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TCompositeAnimation compositeAnimation = 12;
  total_size += 1UL * this->_internal_compositeanimation_size();
  for (const auto& msg : this->_impl_.compositeanimation_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TTrigger trigger = 13;
  total_size += 1UL * this->_internal_trigger_size();
  for (const auto& msg : this->_impl_.trigger_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .TIdentifier useImport = 14;
  total_size += 1UL * this->_internal_useimport_size();
  for (const auto& msg : this->_impl_.useimport_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TCurve curve = 19;
  total_size += 2UL * this->_internal_curve_size();
  for (const auto& msg : this->_impl_.curve_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TAddModelBindingsToChild addModelBindingsToChild = 22;
  total_size += 2UL * this->_internal_addmodelbindingstochild_size();
  for (const auto& msg : this->_impl_.addmodelbindingstochild_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TResourceParam resourceParam = 23;
  total_size += 2UL * this->_internal_resourceparam_size();
  for (const auto& msg : this->_impl_.resourceparam_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TIdentifier type = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.type_);
    }

    // optional .TIdentifier prototype = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.prototype_);
    }

    // optional .HmiWidget.TWidget.TPrototypeAsset prototypeAsset = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.prototypeasset_);
    }

    // optional .HmiWidget.TDefaultChildModelBindings defaultChildModelBindings = 15;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.defaultchildmodelbindings_);
    }

    // optional .HmiWidget.TInputConfig input = 16;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.input_);
    }

    // optional .HmiWidget.TForwardSignals forwardSignals = 18;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.forwardsignals_);
    }

    // optional .HmiWidget.TRequestLayout requestLayout = 20;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.requestlayout_);
    }

    // optional .HmiWidget.TELevelSelection prototypeLevelSelection = 21 [default = TELevelSelection_Default];
    if (cached_has_bits & 0x00000080u) {
      total_size += 2 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_prototypelevelselection());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TWidget::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TWidget::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TWidget::GetClassData() const { return &_class_data_; }


void TWidget::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TWidget*>(&to_msg);
  auto& from = static_cast<const TWidget&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TWidget)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.child_.MergeFrom(from._impl_.child_);
  _this->_impl_.externalmodelvalue_.MergeFrom(from._impl_.externalmodelvalue_);
  _this->_impl_.internalmodelvalue_.MergeFrom(from._impl_.internalmodelvalue_);
  _this->_impl_.nodeparam_.MergeFrom(from._impl_.nodeparam_);
  _this->_impl_.slot_.MergeFrom(from._impl_.slot_);
  _this->_impl_.layout_.MergeFrom(from._impl_.layout_);
  _this->_impl_.script_.MergeFrom(from._impl_.script_);
  _this->_impl_.triggeredslot_.MergeFrom(from._impl_.triggeredslot_);
  _this->_impl_.compositeanimation_.MergeFrom(from._impl_.compositeanimation_);
  _this->_impl_.trigger_.MergeFrom(from._impl_.trigger_);
  _this->_impl_.useimport_.MergeFrom(from._impl_.useimport_);
  _this->_impl_.curve_.MergeFrom(from._impl_.curve_);
  _this->_impl_.addmodelbindingstochild_.MergeFrom(from._impl_.addmodelbindingstochild_);
  _this->_impl_.resourceparam_.MergeFrom(from._impl_.resourceparam_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_type()->::TIdentifier::MergeFrom(
          from._internal_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_prototype()->::TIdentifier::MergeFrom(
          from._internal_prototype());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_prototypeasset()->::HmiWidget::TWidget_TPrototypeAsset::MergeFrom(
          from._internal_prototypeasset());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_defaultchildmodelbindings()->::HmiWidget::TDefaultChildModelBindings::MergeFrom(
          from._internal_defaultchildmodelbindings());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_input()->::HmiWidget::TInputConfig::MergeFrom(
          from._internal_input());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_forwardsignals()->::HmiWidget::TForwardSignals::MergeFrom(
          from._internal_forwardsignals());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_requestlayout()->::HmiWidget::TRequestLayout::MergeFrom(
          from._internal_requestlayout());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.prototypelevelselection_ = from._impl_.prototypelevelselection_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TWidget::CopyFrom(const TWidget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TWidget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TWidget::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.child_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.externalmodelvalue_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.internalmodelvalue_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.nodeparam_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.slot_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.layout_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.script_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.triggeredslot_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.compositeanimation_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.trigger_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.curve_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.addmodelbindingstochild_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.resourceparam_))
    return false;
  if (_internal_has_prototypeasset()) {
    if (!_impl_.prototypeasset_->IsInitialized()) return false;
  }
  if (_internal_has_defaultchildmodelbindings()) {
    if (!_impl_.defaultchildmodelbindings_->IsInitialized()) return false;
  }
  if (_internal_has_input()) {
    if (!_impl_.input_->IsInitialized()) return false;
  }
  if (_internal_has_requestlayout()) {
    if (!_impl_.requestlayout_->IsInitialized()) return false;
  }
  return true;
}

void TWidget::InternalSwap(TWidget* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.child_.InternalSwap(&other->_impl_.child_);
  _impl_.externalmodelvalue_.InternalSwap(&other->_impl_.externalmodelvalue_);
  _impl_.internalmodelvalue_.InternalSwap(&other->_impl_.internalmodelvalue_);
  _impl_.nodeparam_.InternalSwap(&other->_impl_.nodeparam_);
  _impl_.slot_.InternalSwap(&other->_impl_.slot_);
  _impl_.layout_.InternalSwap(&other->_impl_.layout_);
  _impl_.script_.InternalSwap(&other->_impl_.script_);
  _impl_.triggeredslot_.InternalSwap(&other->_impl_.triggeredslot_);
  _impl_.compositeanimation_.InternalSwap(&other->_impl_.compositeanimation_);
  _impl_.trigger_.InternalSwap(&other->_impl_.trigger_);
  _impl_.useimport_.InternalSwap(&other->_impl_.useimport_);
  _impl_.curve_.InternalSwap(&other->_impl_.curve_);
  _impl_.addmodelbindingstochild_.InternalSwap(&other->_impl_.addmodelbindingstochild_);
  _impl_.resourceparam_.InternalSwap(&other->_impl_.resourceparam_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TWidget, _impl_.requestlayout_)
      + sizeof(TWidget::_impl_.requestlayout_)
      - PROTOBUF_FIELD_OFFSET(TWidget, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
  swap(_impl_.prototypelevelselection_, other->_impl_.prototypelevelselection_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TWidget::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[24]);
}

// ===================================================================

class TWidgetCollection::_Internal {
 public:
};

TWidgetCollection::TWidgetCollection(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TWidgetCollection)
}
TWidgetCollection::TWidgetCollection(const TWidgetCollection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TWidgetCollection* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.widget_){from._impl_.widget_}
    , decltype(_impl_.importdefinition_){from._impl_.importdefinition_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TWidgetCollection)
}

inline void TWidgetCollection::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.widget_){arena}
    , decltype(_impl_.importdefinition_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TWidgetCollection::~TWidgetCollection() {
  // @@protoc_insertion_point(destructor:HmiWidget.TWidgetCollection)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TWidgetCollection::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.widget_.~RepeatedPtrField();
  _impl_.importdefinition_.~RepeatedPtrField();
}

void TWidgetCollection::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TWidgetCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TWidgetCollection)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.widget_.Clear();
  _impl_.importdefinition_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TWidgetCollection::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .HmiWidget.TWidget widget = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_widget(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TImportDefinition importDefinition = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_importdefinition(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TWidgetCollection::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TWidgetCollection)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HmiWidget.TWidget widget = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_widget_size()); i < n; i++) {
    const auto& repfield = this->_internal_widget(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TImportDefinition importDefinition = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_importdefinition_size()); i < n; i++) {
    const auto& repfield = this->_internal_importdefinition(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TWidgetCollection)
  return target;
}

size_t TWidgetCollection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TWidgetCollection)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TWidget widget = 1;
  total_size += 1UL * this->_internal_widget_size();
  for (const auto& msg : this->_impl_.widget_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TImportDefinition importDefinition = 2;
  total_size += 1UL * this->_internal_importdefinition_size();
  for (const auto& msg : this->_impl_.importdefinition_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TWidgetCollection::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TWidgetCollection::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TWidgetCollection::GetClassData() const { return &_class_data_; }


void TWidgetCollection::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TWidgetCollection*>(&to_msg);
  auto& from = static_cast<const TWidgetCollection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TWidgetCollection)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.widget_.MergeFrom(from._impl_.widget_);
  _this->_impl_.importdefinition_.MergeFrom(from._impl_.importdefinition_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TWidgetCollection::CopyFrom(const TWidgetCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TWidgetCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TWidgetCollection::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.widget_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.importdefinition_))
    return false;
  return true;
}

void TWidgetCollection::InternalSwap(TWidgetCollection* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.widget_.InternalSwap(&other->_impl_.widget_);
  _impl_.importdefinition_.InternalSwap(&other->_impl_.importdefinition_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TWidgetCollection::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[25]);
}

// ===================================================================

class TChildWidget::_Internal {
 public:
  using HasBits = decltype(std::declval<TChildWidget>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TChildWidget, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TChildWidget* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TIdentifier& widgettype(const TChildWidget* msg);
  static void set_has_widgettype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_widgetlevelselection(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::HmiWidget::TForwardSignals& forwardsignals(const TChildWidget* msg);
  static void set_has_forwardsignals(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::HmiWidget::TInputConfig& input(const TChildWidget* msg);
  static void set_has_input(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TChildWidget::_Internal::identifier(const TChildWidget* msg) {
  return *msg->_impl_.identifier_;
}
const ::TIdentifier&
TChildWidget::_Internal::widgettype(const TChildWidget* msg) {
  return *msg->_impl_.widgettype_;
}
const ::HmiWidget::TForwardSignals&
TChildWidget::_Internal::forwardsignals(const TChildWidget* msg) {
  return *msg->_impl_.forwardsignals_;
}
const ::HmiWidget::TInputConfig&
TChildWidget::_Internal::input(const TChildWidget* msg) {
  return *msg->_impl_.input_;
}
void TChildWidget::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TChildWidget::clear_widgettype() {
  if (_impl_.widgettype_ != nullptr) _impl_.widgettype_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TChildWidget::clear_useimport() {
  _impl_.useimport_.Clear();
}
TChildWidget::TChildWidget(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TChildWidget)
}
TChildWidget::TChildWidget(const TChildWidget& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TChildWidget* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.modelbinding_){from._impl_.modelbinding_}
    , decltype(_impl_.useimport_){from._impl_.useimport_}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.widgettype_){nullptr}
    , decltype(_impl_.forwardsignals_){nullptr}
    , decltype(_impl_.input_){nullptr}
    , decltype(_impl_.widgetlevelselection_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_widgettype()) {
    _this->_impl_.widgettype_ = new ::TIdentifier(*from._impl_.widgettype_);
  }
  if (from._internal_has_forwardsignals()) {
    _this->_impl_.forwardsignals_ = new ::HmiWidget::TForwardSignals(*from._impl_.forwardsignals_);
  }
  if (from._internal_has_input()) {
    _this->_impl_.input_ = new ::HmiWidget::TInputConfig(*from._impl_.input_);
  }
  _this->_impl_.widgetlevelselection_ = from._impl_.widgetlevelselection_;
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TChildWidget)
}

inline void TChildWidget::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.modelbinding_){arena}
    , decltype(_impl_.useimport_){arena}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.widgettype_){nullptr}
    , decltype(_impl_.forwardsignals_){nullptr}
    , decltype(_impl_.input_){nullptr}
    , decltype(_impl_.widgetlevelselection_){1}
  };
}

TChildWidget::~TChildWidget() {
  // @@protoc_insertion_point(destructor:HmiWidget.TChildWidget)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TChildWidget::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.modelbinding_.~RepeatedPtrField();
  _impl_.useimport_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.widgettype_;
  if (this != internal_default_instance()) delete _impl_.forwardsignals_;
  if (this != internal_default_instance()) delete _impl_.input_;
}

void TChildWidget::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TChildWidget::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TChildWidget)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modelbinding_.Clear();
  _impl_.useimport_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.widgettype_ != nullptr);
      _impl_.widgettype_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.forwardsignals_ != nullptr);
      _impl_.forwardsignals_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.input_ != nullptr);
      _impl_.input_->Clear();
    }
    _impl_.widgetlevelselection_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TChildWidget::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TIdentifier widgetType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_widgettype(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TChildModelParameter modelbinding = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_modelbinding(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .TIdentifier useImport = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_useimport(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TForwardSignals forwardSignals = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_forwardsignals(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TInputConfig input = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_input(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TELevelSelection widgetLevelSelection = 7 [default = TELevelSelection_Default];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TELevelSelection_IsValid(val))) {
            _internal_set_widgetlevelselection(static_cast<::HmiWidget::TELevelSelection>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TChildWidget::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TChildWidget)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .TIdentifier widgetType = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::widgettype(this),
        _Internal::widgettype(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TChildModelParameter modelbinding = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_modelbinding_size()); i < n; i++) {
    const auto& repfield = this->_internal_modelbinding(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .TIdentifier useImport = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_useimport_size()); i < n; i++) {
    const auto& repfield = this->_internal_useimport(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TForwardSignals forwardSignals = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::forwardsignals(this),
        _Internal::forwardsignals(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TInputConfig input = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::input(this),
        _Internal::input(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TELevelSelection widgetLevelSelection = 7 [default = TELevelSelection_Default];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      7, this->_internal_widgetlevelselection(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TChildWidget)
  return target;
}

size_t TChildWidget::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TChildWidget)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_widgettype()) {
    // required .TIdentifier widgetType = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.widgettype_);
  }

  return total_size;
}
size_t TChildWidget::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TChildWidget)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .TIdentifier widgetType = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.widgettype_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TChildModelParameter modelbinding = 3;
  total_size += 1UL * this->_internal_modelbinding_size();
  for (const auto& msg : this->_impl_.modelbinding_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .TIdentifier useImport = 4;
  total_size += 1UL * this->_internal_useimport_size();
  for (const auto& msg : this->_impl_.useimport_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001cu) {
    // optional .HmiWidget.TForwardSignals forwardSignals = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.forwardsignals_);
    }

    // optional .HmiWidget.TInputConfig input = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.input_);
    }

    // optional .HmiWidget.TELevelSelection widgetLevelSelection = 7 [default = TELevelSelection_Default];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_widgetlevelselection());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TChildWidget::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TChildWidget::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TChildWidget::GetClassData() const { return &_class_data_; }


void TChildWidget::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TChildWidget*>(&to_msg);
  auto& from = static_cast<const TChildWidget&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TChildWidget)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.modelbinding_.MergeFrom(from._impl_.modelbinding_);
  _this->_impl_.useimport_.MergeFrom(from._impl_.useimport_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_widgettype()->::TIdentifier::MergeFrom(
          from._internal_widgettype());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_forwardsignals()->::HmiWidget::TForwardSignals::MergeFrom(
          from._internal_forwardsignals());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_input()->::HmiWidget::TInputConfig::MergeFrom(
          from._internal_input());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.widgetlevelselection_ = from._impl_.widgetlevelselection_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TChildWidget::CopyFrom(const TChildWidget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TChildWidget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TChildWidget::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.modelbinding_))
    return false;
  if (_internal_has_input()) {
    if (!_impl_.input_->IsInitialized()) return false;
  }
  return true;
}

void TChildWidget::InternalSwap(TChildWidget* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.modelbinding_.InternalSwap(&other->_impl_.modelbinding_);
  _impl_.useimport_.InternalSwap(&other->_impl_.useimport_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TChildWidget, _impl_.input_)
      + sizeof(TChildWidget::_impl_.input_)
      - PROTOBUF_FIELD_OFFSET(TChildWidget, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
  swap(_impl_.widgetlevelselection_, other->_impl_.widgetlevelselection_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TChildWidget::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[26]);
}

// ===================================================================

class TChildModelParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<TChildModelParameter>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TChildModelParameter, _impl_._has_bits_);
  static const ::TIdentifier& key(const TChildModelParameter* msg);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& binding(const TChildModelParameter* msg);
  static void set_has_binding(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TChildModelParameter::_Internal::key(const TChildModelParameter* msg) {
  return *msg->_impl_.key_;
}
const ::TDataBinding&
TChildModelParameter::_Internal::binding(const TChildModelParameter* msg) {
  return *msg->_impl_.binding_;
}
void TChildModelParameter::clear_key() {
  if (_impl_.key_ != nullptr) _impl_.key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TChildModelParameter::clear_binding() {
  if (_impl_.binding_ != nullptr) _impl_.binding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TChildModelParameter::TChildModelParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TChildModelParameter)
}
TChildModelParameter::TChildModelParameter(const TChildModelParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TChildModelParameter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.binding_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_key()) {
    _this->_impl_.key_ = new ::TIdentifier(*from._impl_.key_);
  }
  if (from._internal_has_binding()) {
    _this->_impl_.binding_ = new ::TDataBinding(*from._impl_.binding_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TChildModelParameter)
}

inline void TChildModelParameter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.binding_){nullptr}
  };
}

TChildModelParameter::~TChildModelParameter() {
  // @@protoc_insertion_point(destructor:HmiWidget.TChildModelParameter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TChildModelParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.key_;
  if (this != internal_default_instance()) delete _impl_.binding_;
}

void TChildModelParameter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TChildModelParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TChildModelParameter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.key_ != nullptr);
      _impl_.key_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.binding_ != nullptr);
      _impl_.binding_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TChildModelParameter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TDataBinding binding = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_binding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TChildModelParameter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TChildModelParameter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::key(this),
        _Internal::key(this).GetCachedSize(), target, stream);
  }

  // required .TDataBinding binding = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::binding(this),
        _Internal::binding(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TChildModelParameter)
  return target;
}

size_t TChildModelParameter::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TChildModelParameter)
  size_t total_size = 0;

  if (_internal_has_key()) {
    // required .TIdentifier key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);
  }

  if (_internal_has_binding()) {
    // required .TDataBinding binding = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.binding_);
  }

  return total_size;
}
size_t TChildModelParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TChildModelParameter)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);

    // required .TDataBinding binding = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.binding_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TChildModelParameter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TChildModelParameter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TChildModelParameter::GetClassData() const { return &_class_data_; }


void TChildModelParameter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TChildModelParameter*>(&to_msg);
  auto& from = static_cast<const TChildModelParameter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TChildModelParameter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_key()->::TIdentifier::MergeFrom(
          from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_binding()->::TDataBinding::MergeFrom(
          from._internal_binding());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TChildModelParameter::CopyFrom(const TChildModelParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TChildModelParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TChildModelParameter::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_binding()) {
    if (!_impl_.binding_->IsInitialized()) return false;
  }
  return true;
}

void TChildModelParameter::InternalSwap(TChildModelParameter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TChildModelParameter, _impl_.binding_)
      + sizeof(TChildModelParameter::_impl_.binding_)
      - PROTOBUF_FIELD_OFFSET(TChildModelParameter, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TChildModelParameter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[27]);
}

// ===================================================================

class TExternalModelParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<TExternalModelParameter>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TExternalModelParameter, _impl_._has_bits_);
  static const ::TIdentifier& key(const TExternalModelParameter* msg);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TVariant& variant(const TExternalModelParameter* msg);
  static void set_has_variant(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& binding(const TExternalModelParameter* msg);
  static void set_has_binding(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TIdentifier&
TExternalModelParameter::_Internal::key(const TExternalModelParameter* msg) {
  return *msg->_impl_.key_;
}
const ::TVariant&
TExternalModelParameter::_Internal::variant(const TExternalModelParameter* msg) {
  return *msg->_impl_.variant_;
}
const ::TDataBinding&
TExternalModelParameter::_Internal::binding(const TExternalModelParameter* msg) {
  return *msg->_impl_.binding_;
}
void TExternalModelParameter::clear_key() {
  if (_impl_.key_ != nullptr) _impl_.key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TExternalModelParameter::clear_variant() {
  if (_impl_.variant_ != nullptr) _impl_.variant_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TExternalModelParameter::clear_binding() {
  if (_impl_.binding_ != nullptr) _impl_.binding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TExternalModelParameter::TExternalModelParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TExternalModelParameter)
}
TExternalModelParameter::TExternalModelParameter(const TExternalModelParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TExternalModelParameter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.variant_){nullptr}
    , decltype(_impl_.binding_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_key()) {
    _this->_impl_.key_ = new ::TIdentifier(*from._impl_.key_);
  }
  if (from._internal_has_variant()) {
    _this->_impl_.variant_ = new ::TVariant(*from._impl_.variant_);
  }
  if (from._internal_has_binding()) {
    _this->_impl_.binding_ = new ::TDataBinding(*from._impl_.binding_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TExternalModelParameter)
}

inline void TExternalModelParameter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.variant_){nullptr}
    , decltype(_impl_.binding_){nullptr}
  };
}

TExternalModelParameter::~TExternalModelParameter() {
  // @@protoc_insertion_point(destructor:HmiWidget.TExternalModelParameter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TExternalModelParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.key_;
  if (this != internal_default_instance()) delete _impl_.variant_;
  if (this != internal_default_instance()) delete _impl_.binding_;
}

void TExternalModelParameter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TExternalModelParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TExternalModelParameter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.key_ != nullptr);
      _impl_.key_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.variant_ != nullptr);
      _impl_.variant_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.binding_ != nullptr);
      _impl_.binding_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TExternalModelParameter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TVariant variant = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_variant(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding binding = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_binding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TExternalModelParameter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TExternalModelParameter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::key(this),
        _Internal::key(this).GetCachedSize(), target, stream);
  }

  // optional .TVariant variant = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::variant(this),
        _Internal::variant(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding binding = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::binding(this),
        _Internal::binding(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TExternalModelParameter)
  return target;
}

size_t TExternalModelParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TExternalModelParameter)
  size_t total_size = 0;

  // required .TIdentifier key = 1;
  if (_internal_has_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional .TVariant variant = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.variant_);
    }

    // optional .TDataBinding binding = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.binding_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TExternalModelParameter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TExternalModelParameter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TExternalModelParameter::GetClassData() const { return &_class_data_; }


void TExternalModelParameter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TExternalModelParameter*>(&to_msg);
  auto& from = static_cast<const TExternalModelParameter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TExternalModelParameter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_key()->::TIdentifier::MergeFrom(
          from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_variant()->::TVariant::MergeFrom(
          from._internal_variant());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_binding()->::TDataBinding::MergeFrom(
          from._internal_binding());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TExternalModelParameter::CopyFrom(const TExternalModelParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TExternalModelParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TExternalModelParameter::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_variant()) {
    if (!_impl_.variant_->IsInitialized()) return false;
  }
  if (_internal_has_binding()) {
    if (!_impl_.binding_->IsInitialized()) return false;
  }
  return true;
}

void TExternalModelParameter::InternalSwap(TExternalModelParameter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TExternalModelParameter, _impl_.binding_)
      + sizeof(TExternalModelParameter::_impl_.binding_)
      - PROTOBUF_FIELD_OFFSET(TExternalModelParameter, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TExternalModelParameter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[28]);
}

// ===================================================================

class TInternalModelParameter::_Internal {
 public:
  using HasBits = decltype(std::declval<TInternalModelParameter>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TInternalModelParameter, _impl_._has_bits_);
  static const ::TIdentifier& key(const TInternalModelParameter* msg);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& binding(const TInternalModelParameter* msg);
  static void set_has_binding(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TInternalModelParameter::_Internal::key(const TInternalModelParameter* msg) {
  return *msg->_impl_.key_;
}
const ::TDataBinding&
TInternalModelParameter::_Internal::binding(const TInternalModelParameter* msg) {
  return *msg->_impl_.binding_;
}
void TInternalModelParameter::clear_key() {
  if (_impl_.key_ != nullptr) _impl_.key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TInternalModelParameter::clear_binding() {
  if (_impl_.binding_ != nullptr) _impl_.binding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TInternalModelParameter::TInternalModelParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TInternalModelParameter)
}
TInternalModelParameter::TInternalModelParameter(const TInternalModelParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TInternalModelParameter* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.binding_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_key()) {
    _this->_impl_.key_ = new ::TIdentifier(*from._impl_.key_);
  }
  if (from._internal_has_binding()) {
    _this->_impl_.binding_ = new ::TDataBinding(*from._impl_.binding_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TInternalModelParameter)
}

inline void TInternalModelParameter::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.binding_){nullptr}
  };
}

TInternalModelParameter::~TInternalModelParameter() {
  // @@protoc_insertion_point(destructor:HmiWidget.TInternalModelParameter)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TInternalModelParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.key_;
  if (this != internal_default_instance()) delete _impl_.binding_;
}

void TInternalModelParameter::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TInternalModelParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TInternalModelParameter)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.key_ != nullptr);
      _impl_.key_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.binding_ != nullptr);
      _impl_.binding_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TInternalModelParameter::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TDataBinding binding = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_binding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TInternalModelParameter::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TInternalModelParameter)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::key(this),
        _Internal::key(this).GetCachedSize(), target, stream);
  }

  // required .TDataBinding binding = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::binding(this),
        _Internal::binding(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TInternalModelParameter)
  return target;
}

size_t TInternalModelParameter::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TInternalModelParameter)
  size_t total_size = 0;

  if (_internal_has_key()) {
    // required .TIdentifier key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);
  }

  if (_internal_has_binding()) {
    // required .TDataBinding binding = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.binding_);
  }

  return total_size;
}
size_t TInternalModelParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TInternalModelParameter)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);

    // required .TDataBinding binding = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.binding_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TInternalModelParameter::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TInternalModelParameter::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TInternalModelParameter::GetClassData() const { return &_class_data_; }


void TInternalModelParameter::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TInternalModelParameter*>(&to_msg);
  auto& from = static_cast<const TInternalModelParameter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TInternalModelParameter)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_key()->::TIdentifier::MergeFrom(
          from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_binding()->::TDataBinding::MergeFrom(
          from._internal_binding());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TInternalModelParameter::CopyFrom(const TInternalModelParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TInternalModelParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TInternalModelParameter::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_binding()) {
    if (!_impl_.binding_->IsInitialized()) return false;
  }
  return true;
}

void TInternalModelParameter::InternalSwap(TInternalModelParameter* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TInternalModelParameter, _impl_.binding_)
      + sizeof(TInternalModelParameter::_impl_.binding_)
      - PROTOBUF_FIELD_OFFSET(TInternalModelParameter, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TInternalModelParameter::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[29]);
}

// ===================================================================

class TSlot::_Internal {
 public:
  using HasBits = decltype(std::declval<TSlot>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TSlot, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TSlot* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TIdentifier&
TSlot::_Internal::identifier(const TSlot* msg) {
  return *msg->_impl_.identifier_;
}
void TSlot::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TSlot::TSlot(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TSlot)
}
TSlot::TSlot(const TSlot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TSlot* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.command_){from._impl_.command_}
    , decltype(_impl_.identifier_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TSlot)
}

inline void TSlot::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.command_){arena}
    , decltype(_impl_.identifier_){nullptr}
  };
}

TSlot::~TSlot() {
  // @@protoc_insertion_point(destructor:HmiWidget.TSlot)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TSlot::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.command_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.identifier_;
}

void TSlot::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TSlot::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TSlot)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.command_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
    _impl_.identifier_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TSlot::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TCommand command = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_command(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TSlot::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TSlot)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TCommand command = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_command_size()); i < n; i++) {
    const auto& repfield = this->_internal_command(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TSlot)
  return target;
}

size_t TSlot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TSlot)
  size_t total_size = 0;

  // required .TIdentifier identifier = 1;
  if (_internal_has_identifier()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TCommand command = 2;
  total_size += 1UL * this->_internal_command_size();
  for (const auto& msg : this->_impl_.command_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TSlot::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TSlot::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TSlot::GetClassData() const { return &_class_data_; }


void TSlot::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TSlot*>(&to_msg);
  auto& from = static_cast<const TSlot&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TSlot)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.command_.MergeFrom(from._impl_.command_);
  if (from._internal_has_identifier()) {
    _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
        from._internal_identifier());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TSlot::CopyFrom(const TSlot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TSlot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSlot::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.command_))
    return false;
  return true;
}

void TSlot::InternalSwap(TSlot* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.command_.InternalSwap(&other->_impl_.command_);
  swap(_impl_.identifier_, other->_impl_.identifier_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TSlot::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[30]);
}

// ===================================================================

class TCommand::_Internal {
 public:
  using HasBits = decltype(std::declval<TCommand>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TCommand, _impl_._has_bits_);
  static const ::HmiWidget::TParameterAssignment& assignment(const TCommand* msg);
  static void set_has_assignment(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TParameterValueAssignment& valueassignment(const TCommand* msg);
  static void set_has_valueassignment(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::HmiWidget::TSignal& signal(const TCommand* msg);
  static void set_has_signal(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::HmiWidget::TAnimationTrigger& animationtrigger(const TCommand* msg);
  static void set_has_animationtrigger(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::HmiWidget::TMultiCommand& multicommand(const TCommand* msg);
  static void set_has_multicommand(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::HmiWidget::TRequestLayout& requestlayout(const TCommand* msg);
  static void set_has_requestlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::HmiWidget::TDebugOutputCommand& debugoutput(const TCommand* msg);
  static void set_has_debugoutput(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::HmiWidget::TWidgetDataObjectSetValue& widgetdataobjectsetvalue(const TCommand* msg);
  static void set_has_widgetdataobjectsetvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::HmiWidget::TWidgetDataObjectCreateProvider& widgetdataobjectcreateprovider(const TCommand* msg);
  static void set_has_widgetdataobjectcreateprovider(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::HmiWidget::TWidgetDataObjectCreateConsumer& widgetdataobjectcreateconsumer(const TCommand* msg);
  static void set_has_widgetdataobjectcreateconsumer(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::HmiWidget::TUpdateDcsmMetadataCommand& updatedcsmmetadata(const TCommand* msg);
  static void set_has_updatedcsmmetadata(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::HmiWidget::TSignalParameterValuesExtractor& signalparametervaluesextractor(const TCommand* msg);
  static void set_has_signalparametervaluesextractor(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::TDataBinding& condition(const TCommand* msg);
  static void set_has_condition(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::HmiWidget::TParameterAssignment&
TCommand::_Internal::assignment(const TCommand* msg) {
  return *msg->_impl_.assignment_;
}
const ::HmiWidget::TParameterValueAssignment&
TCommand::_Internal::valueassignment(const TCommand* msg) {
  return *msg->_impl_.valueassignment_;
}
const ::HmiWidget::TSignal&
TCommand::_Internal::signal(const TCommand* msg) {
  return *msg->_impl_.signal_;
}
const ::HmiWidget::TAnimationTrigger&
TCommand::_Internal::animationtrigger(const TCommand* msg) {
  return *msg->_impl_.animationtrigger_;
}
const ::HmiWidget::TMultiCommand&
TCommand::_Internal::multicommand(const TCommand* msg) {
  return *msg->_impl_.multicommand_;
}
const ::HmiWidget::TRequestLayout&
TCommand::_Internal::requestlayout(const TCommand* msg) {
  return *msg->_impl_.requestlayout_;
}
const ::HmiWidget::TDebugOutputCommand&
TCommand::_Internal::debugoutput(const TCommand* msg) {
  return *msg->_impl_.debugoutput_;
}
const ::HmiWidget::TWidgetDataObjectSetValue&
TCommand::_Internal::widgetdataobjectsetvalue(const TCommand* msg) {
  return *msg->_impl_.widgetdataobjectsetvalue_;
}
const ::HmiWidget::TWidgetDataObjectCreateProvider&
TCommand::_Internal::widgetdataobjectcreateprovider(const TCommand* msg) {
  return *msg->_impl_.widgetdataobjectcreateprovider_;
}
const ::HmiWidget::TWidgetDataObjectCreateConsumer&
TCommand::_Internal::widgetdataobjectcreateconsumer(const TCommand* msg) {
  return *msg->_impl_.widgetdataobjectcreateconsumer_;
}
const ::HmiWidget::TUpdateDcsmMetadataCommand&
TCommand::_Internal::updatedcsmmetadata(const TCommand* msg) {
  return *msg->_impl_.updatedcsmmetadata_;
}
const ::HmiWidget::TSignalParameterValuesExtractor&
TCommand::_Internal::signalparametervaluesextractor(const TCommand* msg) {
  return *msg->_impl_.signalparametervaluesextractor_;
}
const ::TDataBinding&
TCommand::_Internal::condition(const TCommand* msg) {
  return *msg->_impl_.condition_;
}
void TCommand::clear_condition() {
  if (_impl_.condition_ != nullptr) _impl_.condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
TCommand::TCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TCommand)
}
TCommand::TCommand(const TCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TCommand* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignment_){nullptr}
    , decltype(_impl_.valueassignment_){nullptr}
    , decltype(_impl_.signal_){nullptr}
    , decltype(_impl_.animationtrigger_){nullptr}
    , decltype(_impl_.multicommand_){nullptr}
    , decltype(_impl_.condition_){nullptr}
    , decltype(_impl_.requestlayout_){nullptr}
    , decltype(_impl_.debugoutput_){nullptr}
    , decltype(_impl_.widgetdataobjectsetvalue_){nullptr}
    , decltype(_impl_.widgetdataobjectcreateprovider_){nullptr}
    , decltype(_impl_.widgetdataobjectcreateconsumer_){nullptr}
    , decltype(_impl_.updatedcsmmetadata_){nullptr}
    , decltype(_impl_.signalparametervaluesextractor_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_assignment()) {
    _this->_impl_.assignment_ = new ::HmiWidget::TParameterAssignment(*from._impl_.assignment_);
  }
  if (from._internal_has_valueassignment()) {
    _this->_impl_.valueassignment_ = new ::HmiWidget::TParameterValueAssignment(*from._impl_.valueassignment_);
  }
  if (from._internal_has_signal()) {
    _this->_impl_.signal_ = new ::HmiWidget::TSignal(*from._impl_.signal_);
  }
  if (from._internal_has_animationtrigger()) {
    _this->_impl_.animationtrigger_ = new ::HmiWidget::TAnimationTrigger(*from._impl_.animationtrigger_);
  }
  if (from._internal_has_multicommand()) {
    _this->_impl_.multicommand_ = new ::HmiWidget::TMultiCommand(*from._impl_.multicommand_);
  }
  if (from._internal_has_condition()) {
    _this->_impl_.condition_ = new ::TDataBinding(*from._impl_.condition_);
  }
  if (from._internal_has_requestlayout()) {
    _this->_impl_.requestlayout_ = new ::HmiWidget::TRequestLayout(*from._impl_.requestlayout_);
  }
  if (from._internal_has_debugoutput()) {
    _this->_impl_.debugoutput_ = new ::HmiWidget::TDebugOutputCommand(*from._impl_.debugoutput_);
  }
  if (from._internal_has_widgetdataobjectsetvalue()) {
    _this->_impl_.widgetdataobjectsetvalue_ = new ::HmiWidget::TWidgetDataObjectSetValue(*from._impl_.widgetdataobjectsetvalue_);
  }
  if (from._internal_has_widgetdataobjectcreateprovider()) {
    _this->_impl_.widgetdataobjectcreateprovider_ = new ::HmiWidget::TWidgetDataObjectCreateProvider(*from._impl_.widgetdataobjectcreateprovider_);
  }
  if (from._internal_has_widgetdataobjectcreateconsumer()) {
    _this->_impl_.widgetdataobjectcreateconsumer_ = new ::HmiWidget::TWidgetDataObjectCreateConsumer(*from._impl_.widgetdataobjectcreateconsumer_);
  }
  if (from._internal_has_updatedcsmmetadata()) {
    _this->_impl_.updatedcsmmetadata_ = new ::HmiWidget::TUpdateDcsmMetadataCommand(*from._impl_.updatedcsmmetadata_);
  }
  if (from._internal_has_signalparametervaluesextractor()) {
    _this->_impl_.signalparametervaluesextractor_ = new ::HmiWidget::TSignalParameterValuesExtractor(*from._impl_.signalparametervaluesextractor_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TCommand)
}

inline void TCommand::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.assignment_){nullptr}
    , decltype(_impl_.valueassignment_){nullptr}
    , decltype(_impl_.signal_){nullptr}
    , decltype(_impl_.animationtrigger_){nullptr}
    , decltype(_impl_.multicommand_){nullptr}
    , decltype(_impl_.condition_){nullptr}
    , decltype(_impl_.requestlayout_){nullptr}
    , decltype(_impl_.debugoutput_){nullptr}
    , decltype(_impl_.widgetdataobjectsetvalue_){nullptr}
    , decltype(_impl_.widgetdataobjectcreateprovider_){nullptr}
    , decltype(_impl_.widgetdataobjectcreateconsumer_){nullptr}
    , decltype(_impl_.updatedcsmmetadata_){nullptr}
    , decltype(_impl_.signalparametervaluesextractor_){nullptr}
  };
}

TCommand::~TCommand() {
  // @@protoc_insertion_point(destructor:HmiWidget.TCommand)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.assignment_;
  if (this != internal_default_instance()) delete _impl_.valueassignment_;
  if (this != internal_default_instance()) delete _impl_.signal_;
  if (this != internal_default_instance()) delete _impl_.animationtrigger_;
  if (this != internal_default_instance()) delete _impl_.multicommand_;
  if (this != internal_default_instance()) delete _impl_.condition_;
  if (this != internal_default_instance()) delete _impl_.requestlayout_;
  if (this != internal_default_instance()) delete _impl_.debugoutput_;
  if (this != internal_default_instance()) delete _impl_.widgetdataobjectsetvalue_;
  if (this != internal_default_instance()) delete _impl_.widgetdataobjectcreateprovider_;
  if (this != internal_default_instance()) delete _impl_.widgetdataobjectcreateconsumer_;
  if (this != internal_default_instance()) delete _impl_.updatedcsmmetadata_;
  if (this != internal_default_instance()) delete _impl_.signalparametervaluesextractor_;
}

void TCommand::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TCommand)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.assignment_ != nullptr);
      _impl_.assignment_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.valueassignment_ != nullptr);
      _impl_.valueassignment_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.signal_ != nullptr);
      _impl_.signal_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.animationtrigger_ != nullptr);
      _impl_.animationtrigger_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.multicommand_ != nullptr);
      _impl_.multicommand_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.condition_ != nullptr);
      _impl_.condition_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.requestlayout_ != nullptr);
      _impl_.requestlayout_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.debugoutput_ != nullptr);
      _impl_.debugoutput_->Clear();
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.widgetdataobjectsetvalue_ != nullptr);
      _impl_.widgetdataobjectsetvalue_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.widgetdataobjectcreateprovider_ != nullptr);
      _impl_.widgetdataobjectcreateprovider_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.widgetdataobjectcreateconsumer_ != nullptr);
      _impl_.widgetdataobjectcreateconsumer_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.updatedcsmmetadata_ != nullptr);
      _impl_.updatedcsmmetadata_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.signalparametervaluesextractor_ != nullptr);
      _impl_.signalparametervaluesextractor_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TCommand::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .HmiWidget.TParameterAssignment assignment = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_assignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TParameterValueAssignment valueAssignment = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_valueassignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TSignal signal = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_signal(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TAnimationTrigger animationTrigger = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_animationtrigger(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TMultiCommand multiCommand = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_multicommand(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding condition = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_condition(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TRequestLayout requestLayout = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TDebugOutputCommand debugOutput = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_debugoutput(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TWidgetDataObjectSetValue widgetDataObjectSetValue = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_widgetdataobjectsetvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TWidgetDataObjectCreateProvider widgetDataObjectCreateProvider = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_widgetdataobjectcreateprovider(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TWidgetDataObjectCreateConsumer widgetDataObjectCreateConsumer = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_widgetdataobjectcreateconsumer(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TUpdateDcsmMetadataCommand updateDcsmMetadata = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_updatedcsmmetadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TSignalParameterValuesExtractor signalParameterValuesExtractor = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_signalparametervaluesextractor(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TCommand::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TCommand)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HmiWidget.TParameterAssignment assignment = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::assignment(this),
        _Internal::assignment(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TParameterValueAssignment valueAssignment = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::valueassignment(this),
        _Internal::valueassignment(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TSignal signal = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::signal(this),
        _Internal::signal(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TAnimationTrigger animationTrigger = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::animationtrigger(this),
        _Internal::animationtrigger(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TMultiCommand multiCommand = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::multicommand(this),
        _Internal::multicommand(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding condition = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::condition(this),
        _Internal::condition(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TRequestLayout requestLayout = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::requestlayout(this),
        _Internal::requestlayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TDebugOutputCommand debugOutput = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::debugoutput(this),
        _Internal::debugoutput(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TWidgetDataObjectSetValue widgetDataObjectSetValue = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::widgetdataobjectsetvalue(this),
        _Internal::widgetdataobjectsetvalue(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TWidgetDataObjectCreateProvider widgetDataObjectCreateProvider = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::widgetdataobjectcreateprovider(this),
        _Internal::widgetdataobjectcreateprovider(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TWidgetDataObjectCreateConsumer widgetDataObjectCreateConsumer = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::widgetdataobjectcreateconsumer(this),
        _Internal::widgetdataobjectcreateconsumer(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TUpdateDcsmMetadataCommand updateDcsmMetadata = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::updatedcsmmetadata(this),
        _Internal::updatedcsmmetadata(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TSignalParameterValuesExtractor signalParameterValuesExtractor = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::signalparametervaluesextractor(this),
        _Internal::signalparametervaluesextractor(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TCommand)
  return target;
}

size_t TCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TCommand)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .HmiWidget.TParameterAssignment assignment = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.assignment_);
    }

    // optional .HmiWidget.TParameterValueAssignment valueAssignment = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.valueassignment_);
    }

    // optional .HmiWidget.TSignal signal = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.signal_);
    }

    // optional .HmiWidget.TAnimationTrigger animationTrigger = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.animationtrigger_);
    }

    // optional .HmiWidget.TMultiCommand multiCommand = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.multicommand_);
    }

    // optional .TDataBinding condition = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.condition_);
    }

    // optional .HmiWidget.TRequestLayout requestLayout = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.requestlayout_);
    }

    // optional .HmiWidget.TDebugOutputCommand debugOutput = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.debugoutput_);
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional .HmiWidget.TWidgetDataObjectSetValue widgetDataObjectSetValue = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.widgetdataobjectsetvalue_);
    }

    // optional .HmiWidget.TWidgetDataObjectCreateProvider widgetDataObjectCreateProvider = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.widgetdataobjectcreateprovider_);
    }

    // optional .HmiWidget.TWidgetDataObjectCreateConsumer widgetDataObjectCreateConsumer = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.widgetdataobjectcreateconsumer_);
    }

    // optional .HmiWidget.TUpdateDcsmMetadataCommand updateDcsmMetadata = 13;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.updatedcsmmetadata_);
    }

    // optional .HmiWidget.TSignalParameterValuesExtractor signalParameterValuesExtractor = 14;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.signalparametervaluesextractor_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TCommand::GetClassData() const { return &_class_data_; }


void TCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TCommand*>(&to_msg);
  auto& from = static_cast<const TCommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TCommand)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_assignment()->::HmiWidget::TParameterAssignment::MergeFrom(
          from._internal_assignment());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_valueassignment()->::HmiWidget::TParameterValueAssignment::MergeFrom(
          from._internal_valueassignment());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_signal()->::HmiWidget::TSignal::MergeFrom(
          from._internal_signal());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_animationtrigger()->::HmiWidget::TAnimationTrigger::MergeFrom(
          from._internal_animationtrigger());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_multicommand()->::HmiWidget::TMultiCommand::MergeFrom(
          from._internal_multicommand());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_condition()->::TDataBinding::MergeFrom(
          from._internal_condition());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_requestlayout()->::HmiWidget::TRequestLayout::MergeFrom(
          from._internal_requestlayout());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_debugoutput()->::HmiWidget::TDebugOutputCommand::MergeFrom(
          from._internal_debugoutput());
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_widgetdataobjectsetvalue()->::HmiWidget::TWidgetDataObjectSetValue::MergeFrom(
          from._internal_widgetdataobjectsetvalue());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_widgetdataobjectcreateprovider()->::HmiWidget::TWidgetDataObjectCreateProvider::MergeFrom(
          from._internal_widgetdataobjectcreateprovider());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_widgetdataobjectcreateconsumer()->::HmiWidget::TWidgetDataObjectCreateConsumer::MergeFrom(
          from._internal_widgetdataobjectcreateconsumer());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_updatedcsmmetadata()->::HmiWidget::TUpdateDcsmMetadataCommand::MergeFrom(
          from._internal_updatedcsmmetadata());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_signalparametervaluesextractor()->::HmiWidget::TSignalParameterValuesExtractor::MergeFrom(
          from._internal_signalparametervaluesextractor());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TCommand::CopyFrom(const TCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCommand::IsInitialized() const {
  if (_internal_has_assignment()) {
    if (!_impl_.assignment_->IsInitialized()) return false;
  }
  if (_internal_has_valueassignment()) {
    if (!_impl_.valueassignment_->IsInitialized()) return false;
  }
  if (_internal_has_signal()) {
    if (!_impl_.signal_->IsInitialized()) return false;
  }
  if (_internal_has_animationtrigger()) {
    if (!_impl_.animationtrigger_->IsInitialized()) return false;
  }
  if (_internal_has_multicommand()) {
    if (!_impl_.multicommand_->IsInitialized()) return false;
  }
  if (_internal_has_condition()) {
    if (!_impl_.condition_->IsInitialized()) return false;
  }
  if (_internal_has_requestlayout()) {
    if (!_impl_.requestlayout_->IsInitialized()) return false;
  }
  if (_internal_has_debugoutput()) {
    if (!_impl_.debugoutput_->IsInitialized()) return false;
  }
  if (_internal_has_widgetdataobjectsetvalue()) {
    if (!_impl_.widgetdataobjectsetvalue_->IsInitialized()) return false;
  }
  if (_internal_has_widgetdataobjectcreateprovider()) {
    if (!_impl_.widgetdataobjectcreateprovider_->IsInitialized()) return false;
  }
  if (_internal_has_widgetdataobjectcreateconsumer()) {
    if (!_impl_.widgetdataobjectcreateconsumer_->IsInitialized()) return false;
  }
  if (_internal_has_updatedcsmmetadata()) {
    if (!_impl_.updatedcsmmetadata_->IsInitialized()) return false;
  }
  return true;
}

void TCommand::InternalSwap(TCommand* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TCommand, _impl_.signalparametervaluesextractor_)
      + sizeof(TCommand::_impl_.signalparametervaluesextractor_)
      - PROTOBUF_FIELD_OFFSET(TCommand, _impl_.assignment_)>(
          reinterpret_cast<char*>(&_impl_.assignment_),
          reinterpret_cast<char*>(&other->_impl_.assignment_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TCommand::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[31]);
}

// ===================================================================

class TMultiCommand::_Internal {
 public:
};

TMultiCommand::TMultiCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TMultiCommand)
}
TMultiCommand::TMultiCommand(const TMultiCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TMultiCommand* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.command_){from._impl_.command_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TMultiCommand)
}

inline void TMultiCommand::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.command_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TMultiCommand::~TMultiCommand() {
  // @@protoc_insertion_point(destructor:HmiWidget.TMultiCommand)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TMultiCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.command_.~RepeatedPtrField();
}

void TMultiCommand::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TMultiCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TMultiCommand)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.command_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TMultiCommand::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .HmiWidget.TCommand command = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_command(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TMultiCommand::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TMultiCommand)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HmiWidget.TCommand command = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_command_size()); i < n; i++) {
    const auto& repfield = this->_internal_command(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TMultiCommand)
  return target;
}

size_t TMultiCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TMultiCommand)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TCommand command = 1;
  total_size += 1UL * this->_internal_command_size();
  for (const auto& msg : this->_impl_.command_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TMultiCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TMultiCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TMultiCommand::GetClassData() const { return &_class_data_; }


void TMultiCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TMultiCommand*>(&to_msg);
  auto& from = static_cast<const TMultiCommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TMultiCommand)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.command_.MergeFrom(from._impl_.command_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TMultiCommand::CopyFrom(const TMultiCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TMultiCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TMultiCommand::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.command_))
    return false;
  return true;
}

void TMultiCommand::InternalSwap(TMultiCommand* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.command_.InternalSwap(&other->_impl_.command_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TMultiCommand::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[32]);
}

// ===================================================================

class TParameterAssignment::_Internal {
 public:
  using HasBits = decltype(std::declval<TParameterAssignment>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TParameterAssignment, _impl_._has_bits_);
  static const ::TIdentifier& key(const TParameterAssignment* msg);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& binding(const TParameterAssignment* msg);
  static void set_has_binding(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TIdentifier& target(const TParameterAssignment* msg);
  static void set_has_target(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_targettype(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TParameterAssignment::_Internal::key(const TParameterAssignment* msg) {
  return *msg->_impl_.key_;
}
const ::TDataBinding&
TParameterAssignment::_Internal::binding(const TParameterAssignment* msg) {
  return *msg->_impl_.binding_;
}
const ::TIdentifier&
TParameterAssignment::_Internal::target(const TParameterAssignment* msg) {
  return *msg->_impl_.target_;
}
void TParameterAssignment::clear_key() {
  if (_impl_.key_ != nullptr) _impl_.key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TParameterAssignment::clear_binding() {
  if (_impl_.binding_ != nullptr) _impl_.binding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TParameterAssignment::clear_target() {
  if (_impl_.target_ != nullptr) _impl_.target_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TParameterAssignment::TParameterAssignment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TParameterAssignment)
}
TParameterAssignment::TParameterAssignment(const TParameterAssignment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TParameterAssignment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.binding_){nullptr}
    , decltype(_impl_.target_){nullptr}
    , decltype(_impl_.targettype_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_key()) {
    _this->_impl_.key_ = new ::TIdentifier(*from._impl_.key_);
  }
  if (from._internal_has_binding()) {
    _this->_impl_.binding_ = new ::TDataBinding(*from._impl_.binding_);
  }
  if (from._internal_has_target()) {
    _this->_impl_.target_ = new ::TIdentifier(*from._impl_.target_);
  }
  _this->_impl_.targettype_ = from._impl_.targettype_;
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TParameterAssignment)
}

inline void TParameterAssignment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.binding_){nullptr}
    , decltype(_impl_.target_){nullptr}
    , decltype(_impl_.targettype_){1}
  };
}

TParameterAssignment::~TParameterAssignment() {
  // @@protoc_insertion_point(destructor:HmiWidget.TParameterAssignment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TParameterAssignment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.key_;
  if (this != internal_default_instance()) delete _impl_.binding_;
  if (this != internal_default_instance()) delete _impl_.target_;
}

void TParameterAssignment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TParameterAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TParameterAssignment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.key_ != nullptr);
      _impl_.key_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.binding_ != nullptr);
      _impl_.binding_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.target_ != nullptr);
      _impl_.target_->Clear();
    }
    _impl_.targettype_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TParameterAssignment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TDataBinding binding = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_binding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TIdentifier target = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TEAssignmentTarget targetType = 4 [default = TEAssignmentTarget_Local];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TEAssignmentTarget_IsValid(val))) {
            _internal_set_targettype(static_cast<::HmiWidget::TEAssignmentTarget>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TParameterAssignment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TParameterAssignment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::key(this),
        _Internal::key(this).GetCachedSize(), target, stream);
  }

  // required .TDataBinding binding = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::binding(this),
        _Internal::binding(this).GetCachedSize(), target, stream);
  }

  // optional .TIdentifier target = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::target(this),
        _Internal::target(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TEAssignmentTarget targetType = 4 [default = TEAssignmentTarget_Local];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_targettype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TParameterAssignment)
  return target;
}

size_t TParameterAssignment::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TParameterAssignment)
  size_t total_size = 0;

  if (_internal_has_key()) {
    // required .TIdentifier key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);
  }

  if (_internal_has_binding()) {
    // required .TDataBinding binding = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.binding_);
  }

  return total_size;
}
size_t TParameterAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TParameterAssignment)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);

    // required .TDataBinding binding = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.binding_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000cu) {
    // optional .TIdentifier target = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.target_);
    }

    // optional .HmiWidget.TEAssignmentTarget targetType = 4 [default = TEAssignmentTarget_Local];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_targettype());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TParameterAssignment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TParameterAssignment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TParameterAssignment::GetClassData() const { return &_class_data_; }


void TParameterAssignment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TParameterAssignment*>(&to_msg);
  auto& from = static_cast<const TParameterAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TParameterAssignment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_key()->::TIdentifier::MergeFrom(
          from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_binding()->::TDataBinding::MergeFrom(
          from._internal_binding());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_target()->::TIdentifier::MergeFrom(
          from._internal_target());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.targettype_ = from._impl_.targettype_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TParameterAssignment::CopyFrom(const TParameterAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TParameterAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TParameterAssignment::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_binding()) {
    if (!_impl_.binding_->IsInitialized()) return false;
  }
  return true;
}

void TParameterAssignment::InternalSwap(TParameterAssignment* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TParameterAssignment, _impl_.target_)
      + sizeof(TParameterAssignment::_impl_.target_)
      - PROTOBUF_FIELD_OFFSET(TParameterAssignment, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
  swap(_impl_.targettype_, other->_impl_.targettype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TParameterAssignment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[33]);
}

// ===================================================================

class TParameterValueAssignment::_Internal {
 public:
  using HasBits = decltype(std::declval<TParameterValueAssignment>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TParameterValueAssignment, _impl_._has_bits_);
  static const ::TIdentifier& key(const TParameterValueAssignment* msg);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& binding(const TParameterValueAssignment* msg);
  static void set_has_binding(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TIdentifier& target(const TParameterValueAssignment* msg);
  static void set_has_target(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_targettype(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TParameterValueAssignment::_Internal::key(const TParameterValueAssignment* msg) {
  return *msg->_impl_.key_;
}
const ::TDataBinding&
TParameterValueAssignment::_Internal::binding(const TParameterValueAssignment* msg) {
  return *msg->_impl_.binding_;
}
const ::TIdentifier&
TParameterValueAssignment::_Internal::target(const TParameterValueAssignment* msg) {
  return *msg->_impl_.target_;
}
void TParameterValueAssignment::clear_key() {
  if (_impl_.key_ != nullptr) _impl_.key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TParameterValueAssignment::clear_binding() {
  if (_impl_.binding_ != nullptr) _impl_.binding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TParameterValueAssignment::clear_target() {
  if (_impl_.target_ != nullptr) _impl_.target_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TParameterValueAssignment::TParameterValueAssignment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TParameterValueAssignment)
}
TParameterValueAssignment::TParameterValueAssignment(const TParameterValueAssignment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TParameterValueAssignment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.binding_){nullptr}
    , decltype(_impl_.target_){nullptr}
    , decltype(_impl_.targettype_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_key()) {
    _this->_impl_.key_ = new ::TIdentifier(*from._impl_.key_);
  }
  if (from._internal_has_binding()) {
    _this->_impl_.binding_ = new ::TDataBinding(*from._impl_.binding_);
  }
  if (from._internal_has_target()) {
    _this->_impl_.target_ = new ::TIdentifier(*from._impl_.target_);
  }
  _this->_impl_.targettype_ = from._impl_.targettype_;
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TParameterValueAssignment)
}

inline void TParameterValueAssignment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.binding_){nullptr}
    , decltype(_impl_.target_){nullptr}
    , decltype(_impl_.targettype_){1}
  };
}

TParameterValueAssignment::~TParameterValueAssignment() {
  // @@protoc_insertion_point(destructor:HmiWidget.TParameterValueAssignment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TParameterValueAssignment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.key_;
  if (this != internal_default_instance()) delete _impl_.binding_;
  if (this != internal_default_instance()) delete _impl_.target_;
}

void TParameterValueAssignment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TParameterValueAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TParameterValueAssignment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.key_ != nullptr);
      _impl_.key_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.binding_ != nullptr);
      _impl_.binding_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.target_ != nullptr);
      _impl_.target_->Clear();
    }
    _impl_.targettype_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TParameterValueAssignment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TDataBinding binding = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_binding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TIdentifier target = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TEAssignmentTarget targetType = 4 [default = TEAssignmentTarget_Local];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TEAssignmentTarget_IsValid(val))) {
            _internal_set_targettype(static_cast<::HmiWidget::TEAssignmentTarget>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TParameterValueAssignment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TParameterValueAssignment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::key(this),
        _Internal::key(this).GetCachedSize(), target, stream);
  }

  // required .TDataBinding binding = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::binding(this),
        _Internal::binding(this).GetCachedSize(), target, stream);
  }

  // optional .TIdentifier target = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::target(this),
        _Internal::target(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TEAssignmentTarget targetType = 4 [default = TEAssignmentTarget_Local];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_targettype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TParameterValueAssignment)
  return target;
}

size_t TParameterValueAssignment::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TParameterValueAssignment)
  size_t total_size = 0;

  if (_internal_has_key()) {
    // required .TIdentifier key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);
  }

  if (_internal_has_binding()) {
    // required .TDataBinding binding = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.binding_);
  }

  return total_size;
}
size_t TParameterValueAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TParameterValueAssignment)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);

    // required .TDataBinding binding = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.binding_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000cu) {
    // optional .TIdentifier target = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.target_);
    }

    // optional .HmiWidget.TEAssignmentTarget targetType = 4 [default = TEAssignmentTarget_Local];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_targettype());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TParameterValueAssignment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TParameterValueAssignment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TParameterValueAssignment::GetClassData() const { return &_class_data_; }


void TParameterValueAssignment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TParameterValueAssignment*>(&to_msg);
  auto& from = static_cast<const TParameterValueAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TParameterValueAssignment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_key()->::TIdentifier::MergeFrom(
          from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_binding()->::TDataBinding::MergeFrom(
          from._internal_binding());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_target()->::TIdentifier::MergeFrom(
          from._internal_target());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.targettype_ = from._impl_.targettype_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TParameterValueAssignment::CopyFrom(const TParameterValueAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TParameterValueAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TParameterValueAssignment::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_binding()) {
    if (!_impl_.binding_->IsInitialized()) return false;
  }
  return true;
}

void TParameterValueAssignment::InternalSwap(TParameterValueAssignment* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TParameterValueAssignment, _impl_.target_)
      + sizeof(TParameterValueAssignment::_impl_.target_)
      - PROTOBUF_FIELD_OFFSET(TParameterValueAssignment, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
  swap(_impl_.targettype_, other->_impl_.targettype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TParameterValueAssignment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[34]);
}

// ===================================================================

class TSignalParameterValuesExtractor_TAssignment::_Internal {
 public:
  using HasBits = decltype(std::declval<TSignalParameterValuesExtractor_TAssignment>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TSignalParameterValuesExtractor_TAssignment, _impl_._has_bits_);
  static const ::TIdentifier& key(const TSignalParameterValuesExtractor_TAssignment* msg);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TIdentifier& parameterkey(const TSignalParameterValuesExtractor_TAssignment* msg);
  static void set_has_parameterkey(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TIdentifier& target(const TSignalParameterValuesExtractor_TAssignment* msg);
  static void set_has_target(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_targettype(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::TIdentifier&
TSignalParameterValuesExtractor_TAssignment::_Internal::key(const TSignalParameterValuesExtractor_TAssignment* msg) {
  return *msg->_impl_.key_;
}
const ::TIdentifier&
TSignalParameterValuesExtractor_TAssignment::_Internal::parameterkey(const TSignalParameterValuesExtractor_TAssignment* msg) {
  return *msg->_impl_.parameterkey_;
}
const ::TIdentifier&
TSignalParameterValuesExtractor_TAssignment::_Internal::target(const TSignalParameterValuesExtractor_TAssignment* msg) {
  return *msg->_impl_.target_;
}
void TSignalParameterValuesExtractor_TAssignment::clear_key() {
  if (_impl_.key_ != nullptr) _impl_.key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TSignalParameterValuesExtractor_TAssignment::clear_parameterkey() {
  if (_impl_.parameterkey_ != nullptr) _impl_.parameterkey_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TSignalParameterValuesExtractor_TAssignment::clear_target() {
  if (_impl_.target_ != nullptr) _impl_.target_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TSignalParameterValuesExtractor_TAssignment::TSignalParameterValuesExtractor_TAssignment(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TSignalParameterValuesExtractor.TAssignment)
}
TSignalParameterValuesExtractor_TAssignment::TSignalParameterValuesExtractor_TAssignment(const TSignalParameterValuesExtractor_TAssignment& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TSignalParameterValuesExtractor_TAssignment* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.parameterkey_){nullptr}
    , decltype(_impl_.target_){nullptr}
    , decltype(_impl_.targettype_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_key()) {
    _this->_impl_.key_ = new ::TIdentifier(*from._impl_.key_);
  }
  if (from._internal_has_parameterkey()) {
    _this->_impl_.parameterkey_ = new ::TIdentifier(*from._impl_.parameterkey_);
  }
  if (from._internal_has_target()) {
    _this->_impl_.target_ = new ::TIdentifier(*from._impl_.target_);
  }
  _this->_impl_.targettype_ = from._impl_.targettype_;
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TSignalParameterValuesExtractor.TAssignment)
}

inline void TSignalParameterValuesExtractor_TAssignment::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.parameterkey_){nullptr}
    , decltype(_impl_.target_){nullptr}
    , decltype(_impl_.targettype_){1}
  };
}

TSignalParameterValuesExtractor_TAssignment::~TSignalParameterValuesExtractor_TAssignment() {
  // @@protoc_insertion_point(destructor:HmiWidget.TSignalParameterValuesExtractor.TAssignment)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TSignalParameterValuesExtractor_TAssignment::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.key_;
  if (this != internal_default_instance()) delete _impl_.parameterkey_;
  if (this != internal_default_instance()) delete _impl_.target_;
}

void TSignalParameterValuesExtractor_TAssignment::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TSignalParameterValuesExtractor_TAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TSignalParameterValuesExtractor.TAssignment)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.key_ != nullptr);
      _impl_.key_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.parameterkey_ != nullptr);
      _impl_.parameterkey_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.target_ != nullptr);
      _impl_.target_->Clear();
    }
    _impl_.targettype_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TSignalParameterValuesExtractor_TAssignment::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TIdentifier parameterKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_parameterkey(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TIdentifier target = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TEAssignmentTarget targetType = 4 [default = TEAssignmentTarget_Local];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TEAssignmentTarget_IsValid(val))) {
            _internal_set_targettype(static_cast<::HmiWidget::TEAssignmentTarget>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TSignalParameterValuesExtractor_TAssignment::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TSignalParameterValuesExtractor.TAssignment)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::key(this),
        _Internal::key(this).GetCachedSize(), target, stream);
  }

  // optional .TIdentifier parameterKey = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::parameterkey(this),
        _Internal::parameterkey(this).GetCachedSize(), target, stream);
  }

  // optional .TIdentifier target = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::target(this),
        _Internal::target(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TEAssignmentTarget targetType = 4 [default = TEAssignmentTarget_Local];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_targettype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TSignalParameterValuesExtractor.TAssignment)
  return target;
}

size_t TSignalParameterValuesExtractor_TAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TSignalParameterValuesExtractor.TAssignment)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .TIdentifier key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.key_);
    }

    // optional .TIdentifier parameterKey = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.parameterkey_);
    }

    // optional .TIdentifier target = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.target_);
    }

    // optional .HmiWidget.TEAssignmentTarget targetType = 4 [default = TEAssignmentTarget_Local];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_targettype());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TSignalParameterValuesExtractor_TAssignment::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TSignalParameterValuesExtractor_TAssignment::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TSignalParameterValuesExtractor_TAssignment::GetClassData() const { return &_class_data_; }


void TSignalParameterValuesExtractor_TAssignment::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TSignalParameterValuesExtractor_TAssignment*>(&to_msg);
  auto& from = static_cast<const TSignalParameterValuesExtractor_TAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TSignalParameterValuesExtractor.TAssignment)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_key()->::TIdentifier::MergeFrom(
          from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_parameterkey()->::TIdentifier::MergeFrom(
          from._internal_parameterkey());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_target()->::TIdentifier::MergeFrom(
          from._internal_target());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.targettype_ = from._impl_.targettype_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TSignalParameterValuesExtractor_TAssignment::CopyFrom(const TSignalParameterValuesExtractor_TAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TSignalParameterValuesExtractor.TAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSignalParameterValuesExtractor_TAssignment::IsInitialized() const {
  return true;
}

void TSignalParameterValuesExtractor_TAssignment::InternalSwap(TSignalParameterValuesExtractor_TAssignment* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TSignalParameterValuesExtractor_TAssignment, _impl_.target_)
      + sizeof(TSignalParameterValuesExtractor_TAssignment::_impl_.target_)
      - PROTOBUF_FIELD_OFFSET(TSignalParameterValuesExtractor_TAssignment, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
  swap(_impl_.targettype_, other->_impl_.targettype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TSignalParameterValuesExtractor_TAssignment::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[35]);
}

// ===================================================================

class TSignalParameterValuesExtractor::_Internal {
 public:
};

TSignalParameterValuesExtractor::TSignalParameterValuesExtractor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TSignalParameterValuesExtractor)
}
TSignalParameterValuesExtractor::TSignalParameterValuesExtractor(const TSignalParameterValuesExtractor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TSignalParameterValuesExtractor* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.assignment_){from._impl_.assignment_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TSignalParameterValuesExtractor)
}

inline void TSignalParameterValuesExtractor::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.assignment_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TSignalParameterValuesExtractor::~TSignalParameterValuesExtractor() {
  // @@protoc_insertion_point(destructor:HmiWidget.TSignalParameterValuesExtractor)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TSignalParameterValuesExtractor::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.assignment_.~RepeatedPtrField();
}

void TSignalParameterValuesExtractor::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TSignalParameterValuesExtractor::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TSignalParameterValuesExtractor)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.assignment_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TSignalParameterValuesExtractor::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .HmiWidget.TSignalParameterValuesExtractor.TAssignment assignment = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_assignment(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TSignalParameterValuesExtractor::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TSignalParameterValuesExtractor)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HmiWidget.TSignalParameterValuesExtractor.TAssignment assignment = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_assignment_size()); i < n; i++) {
    const auto& repfield = this->_internal_assignment(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TSignalParameterValuesExtractor)
  return target;
}

size_t TSignalParameterValuesExtractor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TSignalParameterValuesExtractor)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TSignalParameterValuesExtractor.TAssignment assignment = 1;
  total_size += 1UL * this->_internal_assignment_size();
  for (const auto& msg : this->_impl_.assignment_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TSignalParameterValuesExtractor::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TSignalParameterValuesExtractor::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TSignalParameterValuesExtractor::GetClassData() const { return &_class_data_; }


void TSignalParameterValuesExtractor::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TSignalParameterValuesExtractor*>(&to_msg);
  auto& from = static_cast<const TSignalParameterValuesExtractor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TSignalParameterValuesExtractor)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.assignment_.MergeFrom(from._impl_.assignment_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TSignalParameterValuesExtractor::CopyFrom(const TSignalParameterValuesExtractor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TSignalParameterValuesExtractor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSignalParameterValuesExtractor::IsInitialized() const {
  return true;
}

void TSignalParameterValuesExtractor::InternalSwap(TSignalParameterValuesExtractor* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.assignment_.InternalSwap(&other->_impl_.assignment_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TSignalParameterValuesExtractor::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[36]);
}

// ===================================================================

class TSignal::_Internal {
 public:
  using HasBits = decltype(std::declval<TSignal>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TSignal, _impl_._has_bits_);
  static const ::TIdentifier& signalid(const TSignal* msg);
  static void set_has_signalid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TIdentifier& targetchildid(const TSignal* msg);
  static void set_has_targetchildid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_target(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_targetlevel(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TIdentifier&
TSignal::_Internal::signalid(const TSignal* msg) {
  return *msg->_impl_.signalid_;
}
const ::TIdentifier&
TSignal::_Internal::targetchildid(const TSignal* msg) {
  return *msg->_impl_.targetchildid_;
}
void TSignal::clear_signalid() {
  if (_impl_.signalid_ != nullptr) _impl_.signalid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TSignal::clear_targetchildid() {
  if (_impl_.targetchildid_ != nullptr) _impl_.targetchildid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TSignal::clear_parameter() {
  _impl_.parameter_.Clear();
}
TSignal::TSignal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TSignal)
}
TSignal::TSignal(const TSignal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TSignal* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.parameter_){from._impl_.parameter_}
    , decltype(_impl_.signalid_){nullptr}
    , decltype(_impl_.targetchildid_){nullptr}
    , decltype(_impl_.target_){}
    , decltype(_impl_.targetlevel_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_signalid()) {
    _this->_impl_.signalid_ = new ::TIdentifier(*from._impl_.signalid_);
  }
  if (from._internal_has_targetchildid()) {
    _this->_impl_.targetchildid_ = new ::TIdentifier(*from._impl_.targetchildid_);
  }
  ::memcpy(&_impl_.target_, &from._impl_.target_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.targetlevel_) -
    reinterpret_cast<char*>(&_impl_.target_)) + sizeof(_impl_.targetlevel_));
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TSignal)
}

inline void TSignal::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.parameter_){arena}
    , decltype(_impl_.signalid_){nullptr}
    , decltype(_impl_.targetchildid_){nullptr}
    , decltype(_impl_.target_){0}
    , decltype(_impl_.targetlevel_){0u}
  };
}

TSignal::~TSignal() {
  // @@protoc_insertion_point(destructor:HmiWidget.TSignal)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TSignal::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parameter_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.signalid_;
  if (this != internal_default_instance()) delete _impl_.targetchildid_;
}

void TSignal::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TSignal)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameter_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.signalid_ != nullptr);
      _impl_.signalid_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.targetchildid_ != nullptr);
      _impl_.targetchildid_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.target_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.targetlevel_) -
        reinterpret_cast<char*>(&_impl_.target_)) + sizeof(_impl_.targetlevel_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TSignal::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier signalId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_signalid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TIdentifier targetChildId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_targetchildid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TDataBinding parameter = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_parameter(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TESignalTarget target = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TESignalTarget_IsValid(val))) {
            _internal_set_target(static_cast<::HmiWidget::TESignalTarget>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional uint32 targetLevel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_targetlevel(&has_bits);
          _impl_.targetlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TSignal::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TSignal)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier signalId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::signalid(this),
        _Internal::signalid(this).GetCachedSize(), target, stream);
  }

  // optional .TIdentifier targetChildId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::targetchildid(this),
        _Internal::targetchildid(this).GetCachedSize(), target, stream);
  }

  // repeated .TDataBinding parameter = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_parameter_size()); i < n; i++) {
    const auto& repfield = this->_internal_parameter(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TESignalTarget target = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_target(), target);
  }

  // optional uint32 targetLevel = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_targetlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TSignal)
  return target;
}

size_t TSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TSignal)
  size_t total_size = 0;

  // required .TIdentifier signalId = 1;
  if (_internal_has_signalid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.signalid_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TDataBinding parameter = 3;
  total_size += 1UL * this->_internal_parameter_size();
  for (const auto& msg : this->_impl_.parameter_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000eu) {
    // optional .TIdentifier targetChildId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.targetchildid_);
    }

    // optional .HmiWidget.TESignalTarget target = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_target());
    }

    // optional uint32 targetLevel = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_targetlevel());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TSignal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TSignal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TSignal::GetClassData() const { return &_class_data_; }


void TSignal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TSignal*>(&to_msg);
  auto& from = static_cast<const TSignal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TSignal)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameter_.MergeFrom(from._impl_.parameter_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_signalid()->::TIdentifier::MergeFrom(
          from._internal_signalid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_targetchildid()->::TIdentifier::MergeFrom(
          from._internal_targetchildid());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.target_ = from._impl_.target_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.targetlevel_ = from._impl_.targetlevel_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TSignal::CopyFrom(const TSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TSignal::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.parameter_))
    return false;
  return true;
}

void TSignal::InternalSwap(TSignal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameter_.InternalSwap(&other->_impl_.parameter_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TSignal, _impl_.targetlevel_)
      + sizeof(TSignal::_impl_.targetlevel_)
      - PROTOBUF_FIELD_OFFSET(TSignal, _impl_.signalid_)>(
          reinterpret_cast<char*>(&_impl_.signalid_),
          reinterpret_cast<char*>(&other->_impl_.signalid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TSignal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[37]);
}

// ===================================================================

class TRequestLayout::_Internal {
 public:
  using HasBits = decltype(std::declval<TRequestLayout>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TRequestLayout, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TRequestLayout* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& binding(const TRequestLayout* msg);
  static void set_has_binding(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TIdentifier&
TRequestLayout::_Internal::identifier(const TRequestLayout* msg) {
  return *msg->_impl_.identifier_;
}
const ::TDataBinding&
TRequestLayout::_Internal::binding(const TRequestLayout* msg) {
  return *msg->_impl_.binding_;
}
void TRequestLayout::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TRequestLayout::clear_binding() {
  if (_impl_.binding_ != nullptr) _impl_.binding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TRequestLayout::TRequestLayout(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TRequestLayout)
}
TRequestLayout::TRequestLayout(const TRequestLayout& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TRequestLayout* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.binding_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_binding()) {
    _this->_impl_.binding_ = new ::TDataBinding(*from._impl_.binding_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TRequestLayout)
}

inline void TRequestLayout::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.binding_){nullptr}
  };
}

TRequestLayout::~TRequestLayout() {
  // @@protoc_insertion_point(destructor:HmiWidget.TRequestLayout)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TRequestLayout::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.binding_;
}

void TRequestLayout::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TRequestLayout::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TRequestLayout)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.binding_ != nullptr);
      _impl_.binding_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TRequestLayout::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding binding = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_binding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TRequestLayout::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TRequestLayout)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding binding = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::binding(this),
        _Internal::binding(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TRequestLayout)
  return target;
}

size_t TRequestLayout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TRequestLayout)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .TIdentifier identifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.identifier_);
    }

    // optional .TDataBinding binding = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.binding_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TRequestLayout::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TRequestLayout::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TRequestLayout::GetClassData() const { return &_class_data_; }


void TRequestLayout::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TRequestLayout*>(&to_msg);
  auto& from = static_cast<const TRequestLayout&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TRequestLayout)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_binding()->::TDataBinding::MergeFrom(
          from._internal_binding());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TRequestLayout::CopyFrom(const TRequestLayout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TRequestLayout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TRequestLayout::IsInitialized() const {
  if (_internal_has_binding()) {
    if (!_impl_.binding_->IsInitialized()) return false;
  }
  return true;
}

void TRequestLayout::InternalSwap(TRequestLayout* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TRequestLayout, _impl_.binding_)
      + sizeof(TRequestLayout::_impl_.binding_)
      - PROTOBUF_FIELD_OFFSET(TRequestLayout, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TRequestLayout::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[38]);
}

// ===================================================================

class TDebugOutputCommand::_Internal {
 public:
};

void TDebugOutputCommand::clear_binding() {
  _impl_.binding_.Clear();
}
TDebugOutputCommand::TDebugOutputCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TDebugOutputCommand)
}
TDebugOutputCommand::TDebugOutputCommand(const TDebugOutputCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TDebugOutputCommand* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.binding_){from._impl_.binding_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TDebugOutputCommand)
}

inline void TDebugOutputCommand::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.binding_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TDebugOutputCommand::~TDebugOutputCommand() {
  // @@protoc_insertion_point(destructor:HmiWidget.TDebugOutputCommand)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TDebugOutputCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.binding_.~RepeatedPtrField();
}

void TDebugOutputCommand::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TDebugOutputCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TDebugOutputCommand)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.binding_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TDebugOutputCommand::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TDataBinding binding = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_binding(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TDebugOutputCommand::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TDebugOutputCommand)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TDataBinding binding = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_binding_size()); i < n; i++) {
    const auto& repfield = this->_internal_binding(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TDebugOutputCommand)
  return target;
}

size_t TDebugOutputCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TDebugOutputCommand)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TDataBinding binding = 1;
  total_size += 1UL * this->_internal_binding_size();
  for (const auto& msg : this->_impl_.binding_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TDebugOutputCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TDebugOutputCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TDebugOutputCommand::GetClassData() const { return &_class_data_; }


void TDebugOutputCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TDebugOutputCommand*>(&to_msg);
  auto& from = static_cast<const TDebugOutputCommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TDebugOutputCommand)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.binding_.MergeFrom(from._impl_.binding_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TDebugOutputCommand::CopyFrom(const TDebugOutputCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TDebugOutputCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TDebugOutputCommand::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.binding_))
    return false;
  return true;
}

void TDebugOutputCommand::InternalSwap(TDebugOutputCommand* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.binding_.InternalSwap(&other->_impl_.binding_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TDebugOutputCommand::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[39]);
}

// ===================================================================

class TWidgetDataObjectSetValue::_Internal {
 public:
  using HasBits = decltype(std::declval<TWidgetDataObjectSetValue>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TWidgetDataObjectSetValue, _impl_._has_bits_);
  static const ::TDataBinding& dataobject(const TWidgetDataObjectSetValue* msg);
  static void set_has_dataobject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& value(const TWidgetDataObjectSetValue* msg);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TDataBinding&
TWidgetDataObjectSetValue::_Internal::dataobject(const TWidgetDataObjectSetValue* msg) {
  return *msg->_impl_.dataobject_;
}
const ::TDataBinding&
TWidgetDataObjectSetValue::_Internal::value(const TWidgetDataObjectSetValue* msg) {
  return *msg->_impl_.value_;
}
void TWidgetDataObjectSetValue::clear_dataobject() {
  if (_impl_.dataobject_ != nullptr) _impl_.dataobject_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TWidgetDataObjectSetValue::clear_value() {
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TWidgetDataObjectSetValue::TWidgetDataObjectSetValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TWidgetDataObjectSetValue)
}
TWidgetDataObjectSetValue::TWidgetDataObjectSetValue(const TWidgetDataObjectSetValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TWidgetDataObjectSetValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dataobject_){nullptr}
    , decltype(_impl_.value_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dataobject()) {
    _this->_impl_.dataobject_ = new ::TDataBinding(*from._impl_.dataobject_);
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::TDataBinding(*from._impl_.value_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TWidgetDataObjectSetValue)
}

inline void TWidgetDataObjectSetValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dataobject_){nullptr}
    , decltype(_impl_.value_){nullptr}
  };
}

TWidgetDataObjectSetValue::~TWidgetDataObjectSetValue() {
  // @@protoc_insertion_point(destructor:HmiWidget.TWidgetDataObjectSetValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TWidgetDataObjectSetValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.dataobject_;
  if (this != internal_default_instance()) delete _impl_.value_;
}

void TWidgetDataObjectSetValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TWidgetDataObjectSetValue::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TWidgetDataObjectSetValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.dataobject_ != nullptr);
      _impl_.dataobject_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.value_ != nullptr);
      _impl_.value_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TWidgetDataObjectSetValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding dataObject = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dataobject(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TWidgetDataObjectSetValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TWidgetDataObjectSetValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding dataObject = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::dataobject(this),
        _Internal::dataobject(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TWidgetDataObjectSetValue)
  return target;
}

size_t TWidgetDataObjectSetValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TWidgetDataObjectSetValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .TDataBinding dataObject = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.dataobject_);
    }

    // optional .TDataBinding value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TWidgetDataObjectSetValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TWidgetDataObjectSetValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TWidgetDataObjectSetValue::GetClassData() const { return &_class_data_; }


void TWidgetDataObjectSetValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TWidgetDataObjectSetValue*>(&to_msg);
  auto& from = static_cast<const TWidgetDataObjectSetValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TWidgetDataObjectSetValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_dataobject()->::TDataBinding::MergeFrom(
          from._internal_dataobject());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_value()->::TDataBinding::MergeFrom(
          from._internal_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TWidgetDataObjectSetValue::CopyFrom(const TWidgetDataObjectSetValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TWidgetDataObjectSetValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TWidgetDataObjectSetValue::IsInitialized() const {
  if (_internal_has_dataobject()) {
    if (!_impl_.dataobject_->IsInitialized()) return false;
  }
  if (_internal_has_value()) {
    if (!_impl_.value_->IsInitialized()) return false;
  }
  return true;
}

void TWidgetDataObjectSetValue::InternalSwap(TWidgetDataObjectSetValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TWidgetDataObjectSetValue, _impl_.value_)
      + sizeof(TWidgetDataObjectSetValue::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(TWidgetDataObjectSetValue, _impl_.dataobject_)>(
          reinterpret_cast<char*>(&_impl_.dataobject_),
          reinterpret_cast<char*>(&other->_impl_.dataobject_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TWidgetDataObjectSetValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[40]);
}

// ===================================================================

class TWidgetDataObjectCreateProvider::_Internal {
 public:
  using HasBits = decltype(std::declval<TWidgetDataObjectCreateProvider>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TWidgetDataObjectCreateProvider, _impl_._has_bits_);
  static const ::TDataBinding& dataobject(const TWidgetDataObjectCreateProvider* msg);
  static void set_has_dataobject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& providerid(const TWidgetDataObjectCreateProvider* msg);
  static void set_has_providerid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TDataBinding&
TWidgetDataObjectCreateProvider::_Internal::dataobject(const TWidgetDataObjectCreateProvider* msg) {
  return *msg->_impl_.dataobject_;
}
const ::TDataBinding&
TWidgetDataObjectCreateProvider::_Internal::providerid(const TWidgetDataObjectCreateProvider* msg) {
  return *msg->_impl_.providerid_;
}
void TWidgetDataObjectCreateProvider::clear_dataobject() {
  if (_impl_.dataobject_ != nullptr) _impl_.dataobject_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TWidgetDataObjectCreateProvider::clear_providerid() {
  if (_impl_.providerid_ != nullptr) _impl_.providerid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TWidgetDataObjectCreateProvider::TWidgetDataObjectCreateProvider(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TWidgetDataObjectCreateProvider)
}
TWidgetDataObjectCreateProvider::TWidgetDataObjectCreateProvider(const TWidgetDataObjectCreateProvider& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TWidgetDataObjectCreateProvider* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dataobject_){nullptr}
    , decltype(_impl_.providerid_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dataobject()) {
    _this->_impl_.dataobject_ = new ::TDataBinding(*from._impl_.dataobject_);
  }
  if (from._internal_has_providerid()) {
    _this->_impl_.providerid_ = new ::TDataBinding(*from._impl_.providerid_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TWidgetDataObjectCreateProvider)
}

inline void TWidgetDataObjectCreateProvider::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dataobject_){nullptr}
    , decltype(_impl_.providerid_){nullptr}
  };
}

TWidgetDataObjectCreateProvider::~TWidgetDataObjectCreateProvider() {
  // @@protoc_insertion_point(destructor:HmiWidget.TWidgetDataObjectCreateProvider)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TWidgetDataObjectCreateProvider::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.dataobject_;
  if (this != internal_default_instance()) delete _impl_.providerid_;
}

void TWidgetDataObjectCreateProvider::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TWidgetDataObjectCreateProvider::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TWidgetDataObjectCreateProvider)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.dataobject_ != nullptr);
      _impl_.dataobject_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.providerid_ != nullptr);
      _impl_.providerid_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TWidgetDataObjectCreateProvider::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding dataObject = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dataobject(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding providerId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_providerid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TWidgetDataObjectCreateProvider::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TWidgetDataObjectCreateProvider)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding dataObject = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::dataobject(this),
        _Internal::dataobject(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding providerId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::providerid(this),
        _Internal::providerid(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TWidgetDataObjectCreateProvider)
  return target;
}

size_t TWidgetDataObjectCreateProvider::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TWidgetDataObjectCreateProvider)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .TDataBinding dataObject = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.dataobject_);
    }

    // optional .TDataBinding providerId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.providerid_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TWidgetDataObjectCreateProvider::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TWidgetDataObjectCreateProvider::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TWidgetDataObjectCreateProvider::GetClassData() const { return &_class_data_; }


void TWidgetDataObjectCreateProvider::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TWidgetDataObjectCreateProvider*>(&to_msg);
  auto& from = static_cast<const TWidgetDataObjectCreateProvider&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TWidgetDataObjectCreateProvider)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_dataobject()->::TDataBinding::MergeFrom(
          from._internal_dataobject());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_providerid()->::TDataBinding::MergeFrom(
          from._internal_providerid());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TWidgetDataObjectCreateProvider::CopyFrom(const TWidgetDataObjectCreateProvider& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TWidgetDataObjectCreateProvider)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TWidgetDataObjectCreateProvider::IsInitialized() const {
  if (_internal_has_dataobject()) {
    if (!_impl_.dataobject_->IsInitialized()) return false;
  }
  if (_internal_has_providerid()) {
    if (!_impl_.providerid_->IsInitialized()) return false;
  }
  return true;
}

void TWidgetDataObjectCreateProvider::InternalSwap(TWidgetDataObjectCreateProvider* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TWidgetDataObjectCreateProvider, _impl_.providerid_)
      + sizeof(TWidgetDataObjectCreateProvider::_impl_.providerid_)
      - PROTOBUF_FIELD_OFFSET(TWidgetDataObjectCreateProvider, _impl_.dataobject_)>(
          reinterpret_cast<char*>(&_impl_.dataobject_),
          reinterpret_cast<char*>(&other->_impl_.dataobject_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TWidgetDataObjectCreateProvider::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[41]);
}

// ===================================================================

class TWidgetDataObjectCreateConsumer::_Internal {
 public:
  using HasBits = decltype(std::declval<TWidgetDataObjectCreateConsumer>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TWidgetDataObjectCreateConsumer, _impl_._has_bits_);
  static const ::TDataBinding& dataobject(const TWidgetDataObjectCreateConsumer* msg);
  static void set_has_dataobject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& consumerid(const TWidgetDataObjectCreateConsumer* msg);
  static void set_has_consumerid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TDataBinding&
TWidgetDataObjectCreateConsumer::_Internal::dataobject(const TWidgetDataObjectCreateConsumer* msg) {
  return *msg->_impl_.dataobject_;
}
const ::TDataBinding&
TWidgetDataObjectCreateConsumer::_Internal::consumerid(const TWidgetDataObjectCreateConsumer* msg) {
  return *msg->_impl_.consumerid_;
}
void TWidgetDataObjectCreateConsumer::clear_dataobject() {
  if (_impl_.dataobject_ != nullptr) _impl_.dataobject_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TWidgetDataObjectCreateConsumer::clear_consumerid() {
  if (_impl_.consumerid_ != nullptr) _impl_.consumerid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TWidgetDataObjectCreateConsumer::TWidgetDataObjectCreateConsumer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TWidgetDataObjectCreateConsumer)
}
TWidgetDataObjectCreateConsumer::TWidgetDataObjectCreateConsumer(const TWidgetDataObjectCreateConsumer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TWidgetDataObjectCreateConsumer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dataobject_){nullptr}
    , decltype(_impl_.consumerid_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_dataobject()) {
    _this->_impl_.dataobject_ = new ::TDataBinding(*from._impl_.dataobject_);
  }
  if (from._internal_has_consumerid()) {
    _this->_impl_.consumerid_ = new ::TDataBinding(*from._impl_.consumerid_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TWidgetDataObjectCreateConsumer)
}

inline void TWidgetDataObjectCreateConsumer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.dataobject_){nullptr}
    , decltype(_impl_.consumerid_){nullptr}
  };
}

TWidgetDataObjectCreateConsumer::~TWidgetDataObjectCreateConsumer() {
  // @@protoc_insertion_point(destructor:HmiWidget.TWidgetDataObjectCreateConsumer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TWidgetDataObjectCreateConsumer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.dataobject_;
  if (this != internal_default_instance()) delete _impl_.consumerid_;
}

void TWidgetDataObjectCreateConsumer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TWidgetDataObjectCreateConsumer::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TWidgetDataObjectCreateConsumer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.dataobject_ != nullptr);
      _impl_.dataobject_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.consumerid_ != nullptr);
      _impl_.consumerid_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TWidgetDataObjectCreateConsumer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding dataObject = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dataobject(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding consumerId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_consumerid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TWidgetDataObjectCreateConsumer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TWidgetDataObjectCreateConsumer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding dataObject = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::dataobject(this),
        _Internal::dataobject(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding consumerId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::consumerid(this),
        _Internal::consumerid(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TWidgetDataObjectCreateConsumer)
  return target;
}

size_t TWidgetDataObjectCreateConsumer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TWidgetDataObjectCreateConsumer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .TDataBinding dataObject = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.dataobject_);
    }

    // optional .TDataBinding consumerId = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.consumerid_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TWidgetDataObjectCreateConsumer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TWidgetDataObjectCreateConsumer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TWidgetDataObjectCreateConsumer::GetClassData() const { return &_class_data_; }


void TWidgetDataObjectCreateConsumer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TWidgetDataObjectCreateConsumer*>(&to_msg);
  auto& from = static_cast<const TWidgetDataObjectCreateConsumer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TWidgetDataObjectCreateConsumer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_dataobject()->::TDataBinding::MergeFrom(
          from._internal_dataobject());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_consumerid()->::TDataBinding::MergeFrom(
          from._internal_consumerid());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TWidgetDataObjectCreateConsumer::CopyFrom(const TWidgetDataObjectCreateConsumer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TWidgetDataObjectCreateConsumer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TWidgetDataObjectCreateConsumer::IsInitialized() const {
  if (_internal_has_dataobject()) {
    if (!_impl_.dataobject_->IsInitialized()) return false;
  }
  if (_internal_has_consumerid()) {
    if (!_impl_.consumerid_->IsInitialized()) return false;
  }
  return true;
}

void TWidgetDataObjectCreateConsumer::InternalSwap(TWidgetDataObjectCreateConsumer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TWidgetDataObjectCreateConsumer, _impl_.consumerid_)
      + sizeof(TWidgetDataObjectCreateConsumer::_impl_.consumerid_)
      - PROTOBUF_FIELD_OFFSET(TWidgetDataObjectCreateConsumer, _impl_.dataobject_)>(
          reinterpret_cast<char*>(&_impl_.dataobject_),
          reinterpret_cast<char*>(&other->_impl_.dataobject_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TWidgetDataObjectCreateConsumer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[42]);
}

// ===================================================================

class TUpdateDcsmMetadataCommand::_Internal {
 public:
  using HasBits = decltype(std::declval<TUpdateDcsmMetadataCommand>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TUpdateDcsmMetadataCommand, _impl_._has_bits_);
  static const ::TDataBinding& contentid(const TUpdateDcsmMetadataCommand* msg);
  static void set_has_contentid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& vehiclevisible(const TUpdateDcsmMetadataCommand* msg);
  static void set_has_vehiclevisible(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& vehiclemodelid(const TUpdateDcsmMetadataCommand* msg);
  static void set_has_vehiclemodelid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& camerapitch(const TUpdateDcsmMetadataCommand* msg);
  static void set_has_camerapitch(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& camerayaw(const TUpdateDcsmMetadataCommand* msg);
  static void set_has_camerayaw(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& camerafovh(const TUpdateDcsmMetadataCommand* msg);
  static void set_has_camerafovh(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& cameradistance(const TUpdateDcsmMetadataCommand* msg);
  static void set_has_cameradistance(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TDataBinding& cameraorigin(const TUpdateDcsmMetadataCommand* msg);
  static void set_has_cameraorigin(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TDataBinding& cameranearplane(const TUpdateDcsmMetadataCommand* msg);
  static void set_has_cameranearplane(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::TDataBinding& camerafarplane(const TUpdateDcsmMetadataCommand* msg);
  static void set_has_camerafarplane(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

const ::TDataBinding&
TUpdateDcsmMetadataCommand::_Internal::contentid(const TUpdateDcsmMetadataCommand* msg) {
  return *msg->_impl_.contentid_;
}
const ::TDataBinding&
TUpdateDcsmMetadataCommand::_Internal::vehiclevisible(const TUpdateDcsmMetadataCommand* msg) {
  return *msg->_impl_.vehiclevisible_;
}
const ::TDataBinding&
TUpdateDcsmMetadataCommand::_Internal::vehiclemodelid(const TUpdateDcsmMetadataCommand* msg) {
  return *msg->_impl_.vehiclemodelid_;
}
const ::TDataBinding&
TUpdateDcsmMetadataCommand::_Internal::camerapitch(const TUpdateDcsmMetadataCommand* msg) {
  return *msg->_impl_.camerapitch_;
}
const ::TDataBinding&
TUpdateDcsmMetadataCommand::_Internal::camerayaw(const TUpdateDcsmMetadataCommand* msg) {
  return *msg->_impl_.camerayaw_;
}
const ::TDataBinding&
TUpdateDcsmMetadataCommand::_Internal::camerafovh(const TUpdateDcsmMetadataCommand* msg) {
  return *msg->_impl_.camerafovh_;
}
const ::TDataBinding&
TUpdateDcsmMetadataCommand::_Internal::cameradistance(const TUpdateDcsmMetadataCommand* msg) {
  return *msg->_impl_.cameradistance_;
}
const ::TDataBinding&
TUpdateDcsmMetadataCommand::_Internal::cameraorigin(const TUpdateDcsmMetadataCommand* msg) {
  return *msg->_impl_.cameraorigin_;
}
const ::TDataBinding&
TUpdateDcsmMetadataCommand::_Internal::cameranearplane(const TUpdateDcsmMetadataCommand* msg) {
  return *msg->_impl_.cameranearplane_;
}
const ::TDataBinding&
TUpdateDcsmMetadataCommand::_Internal::camerafarplane(const TUpdateDcsmMetadataCommand* msg) {
  return *msg->_impl_.camerafarplane_;
}
void TUpdateDcsmMetadataCommand::clear_contentid() {
  if (_impl_.contentid_ != nullptr) _impl_.contentid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TUpdateDcsmMetadataCommand::clear_vehiclevisible() {
  if (_impl_.vehiclevisible_ != nullptr) _impl_.vehiclevisible_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TUpdateDcsmMetadataCommand::clear_vehiclemodelid() {
  if (_impl_.vehiclemodelid_ != nullptr) _impl_.vehiclemodelid_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TUpdateDcsmMetadataCommand::clear_camerapitch() {
  if (_impl_.camerapitch_ != nullptr) _impl_.camerapitch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TUpdateDcsmMetadataCommand::clear_camerayaw() {
  if (_impl_.camerayaw_ != nullptr) _impl_.camerayaw_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TUpdateDcsmMetadataCommand::clear_camerafovh() {
  if (_impl_.camerafovh_ != nullptr) _impl_.camerafovh_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TUpdateDcsmMetadataCommand::clear_cameradistance() {
  if (_impl_.cameradistance_ != nullptr) _impl_.cameradistance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void TUpdateDcsmMetadataCommand::clear_cameraorigin() {
  if (_impl_.cameraorigin_ != nullptr) _impl_.cameraorigin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void TUpdateDcsmMetadataCommand::clear_cameranearplane() {
  if (_impl_.cameranearplane_ != nullptr) _impl_.cameranearplane_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void TUpdateDcsmMetadataCommand::clear_camerafarplane() {
  if (_impl_.camerafarplane_ != nullptr) _impl_.camerafarplane_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
TUpdateDcsmMetadataCommand::TUpdateDcsmMetadataCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TUpdateDcsmMetadataCommand)
}
TUpdateDcsmMetadataCommand::TUpdateDcsmMetadataCommand(const TUpdateDcsmMetadataCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TUpdateDcsmMetadataCommand* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.contentid_){nullptr}
    , decltype(_impl_.vehiclevisible_){nullptr}
    , decltype(_impl_.vehiclemodelid_){nullptr}
    , decltype(_impl_.camerapitch_){nullptr}
    , decltype(_impl_.camerayaw_){nullptr}
    , decltype(_impl_.camerafovh_){nullptr}
    , decltype(_impl_.cameradistance_){nullptr}
    , decltype(_impl_.cameraorigin_){nullptr}
    , decltype(_impl_.cameranearplane_){nullptr}
    , decltype(_impl_.camerafarplane_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_contentid()) {
    _this->_impl_.contentid_ = new ::TDataBinding(*from._impl_.contentid_);
  }
  if (from._internal_has_vehiclevisible()) {
    _this->_impl_.vehiclevisible_ = new ::TDataBinding(*from._impl_.vehiclevisible_);
  }
  if (from._internal_has_vehiclemodelid()) {
    _this->_impl_.vehiclemodelid_ = new ::TDataBinding(*from._impl_.vehiclemodelid_);
  }
  if (from._internal_has_camerapitch()) {
    _this->_impl_.camerapitch_ = new ::TDataBinding(*from._impl_.camerapitch_);
  }
  if (from._internal_has_camerayaw()) {
    _this->_impl_.camerayaw_ = new ::TDataBinding(*from._impl_.camerayaw_);
  }
  if (from._internal_has_camerafovh()) {
    _this->_impl_.camerafovh_ = new ::TDataBinding(*from._impl_.camerafovh_);
  }
  if (from._internal_has_cameradistance()) {
    _this->_impl_.cameradistance_ = new ::TDataBinding(*from._impl_.cameradistance_);
  }
  if (from._internal_has_cameraorigin()) {
    _this->_impl_.cameraorigin_ = new ::TDataBinding(*from._impl_.cameraorigin_);
  }
  if (from._internal_has_cameranearplane()) {
    _this->_impl_.cameranearplane_ = new ::TDataBinding(*from._impl_.cameranearplane_);
  }
  if (from._internal_has_camerafarplane()) {
    _this->_impl_.camerafarplane_ = new ::TDataBinding(*from._impl_.camerafarplane_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TUpdateDcsmMetadataCommand)
}

inline void TUpdateDcsmMetadataCommand::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.contentid_){nullptr}
    , decltype(_impl_.vehiclevisible_){nullptr}
    , decltype(_impl_.vehiclemodelid_){nullptr}
    , decltype(_impl_.camerapitch_){nullptr}
    , decltype(_impl_.camerayaw_){nullptr}
    , decltype(_impl_.camerafovh_){nullptr}
    , decltype(_impl_.cameradistance_){nullptr}
    , decltype(_impl_.cameraorigin_){nullptr}
    , decltype(_impl_.cameranearplane_){nullptr}
    , decltype(_impl_.camerafarplane_){nullptr}
  };
}

TUpdateDcsmMetadataCommand::~TUpdateDcsmMetadataCommand() {
  // @@protoc_insertion_point(destructor:HmiWidget.TUpdateDcsmMetadataCommand)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TUpdateDcsmMetadataCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.contentid_;
  if (this != internal_default_instance()) delete _impl_.vehiclevisible_;
  if (this != internal_default_instance()) delete _impl_.vehiclemodelid_;
  if (this != internal_default_instance()) delete _impl_.camerapitch_;
  if (this != internal_default_instance()) delete _impl_.camerayaw_;
  if (this != internal_default_instance()) delete _impl_.camerafovh_;
  if (this != internal_default_instance()) delete _impl_.cameradistance_;
  if (this != internal_default_instance()) delete _impl_.cameraorigin_;
  if (this != internal_default_instance()) delete _impl_.cameranearplane_;
  if (this != internal_default_instance()) delete _impl_.camerafarplane_;
}

void TUpdateDcsmMetadataCommand::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TUpdateDcsmMetadataCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TUpdateDcsmMetadataCommand)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.contentid_ != nullptr);
      _impl_.contentid_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.vehiclevisible_ != nullptr);
      _impl_.vehiclevisible_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.vehiclemodelid_ != nullptr);
      _impl_.vehiclemodelid_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.camerapitch_ != nullptr);
      _impl_.camerapitch_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.camerayaw_ != nullptr);
      _impl_.camerayaw_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.camerafovh_ != nullptr);
      _impl_.camerafovh_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.cameradistance_ != nullptr);
      _impl_.cameradistance_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.cameraorigin_ != nullptr);
      _impl_.cameraorigin_->Clear();
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.cameranearplane_ != nullptr);
      _impl_.cameranearplane_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.camerafarplane_ != nullptr);
      _impl_.camerafarplane_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TUpdateDcsmMetadataCommand::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding contentId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_contentid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding vehicleVisible = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_vehiclevisible(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding vehicleModelId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_vehiclemodelid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding cameraPitch = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_camerapitch(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding cameraYaw = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_camerayaw(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding cameraFovH = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_camerafovh(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding cameraDistance = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_cameradistance(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding cameraOrigin = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_cameraorigin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding cameraNearPlane = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_cameranearplane(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding cameraFarPlane = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_camerafarplane(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TUpdateDcsmMetadataCommand::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TUpdateDcsmMetadataCommand)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding contentId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::contentid(this),
        _Internal::contentid(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding vehicleVisible = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::vehiclevisible(this),
        _Internal::vehiclevisible(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding vehicleModelId = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::vehiclemodelid(this),
        _Internal::vehiclemodelid(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding cameraPitch = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::camerapitch(this),
        _Internal::camerapitch(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding cameraYaw = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::camerayaw(this),
        _Internal::camerayaw(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding cameraFovH = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::camerafovh(this),
        _Internal::camerafovh(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding cameraDistance = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::cameradistance(this),
        _Internal::cameradistance(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding cameraOrigin = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::cameraorigin(this),
        _Internal::cameraorigin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding cameraNearPlane = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::cameranearplane(this),
        _Internal::cameranearplane(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding cameraFarPlane = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::camerafarplane(this),
        _Internal::camerafarplane(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TUpdateDcsmMetadataCommand)
  return target;
}

size_t TUpdateDcsmMetadataCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TUpdateDcsmMetadataCommand)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TDataBinding contentId = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.contentid_);
    }

    // optional .TDataBinding vehicleVisible = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.vehiclevisible_);
    }

    // optional .TDataBinding vehicleModelId = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.vehiclemodelid_);
    }

    // optional .TDataBinding cameraPitch = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.camerapitch_);
    }

    // optional .TDataBinding cameraYaw = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.camerayaw_);
    }

    // optional .TDataBinding cameraFovH = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.camerafovh_);
    }

    // optional .TDataBinding cameraDistance = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.cameradistance_);
    }

    // optional .TDataBinding cameraOrigin = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.cameraorigin_);
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional .TDataBinding cameraNearPlane = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.cameranearplane_);
    }

    // optional .TDataBinding cameraFarPlane = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.camerafarplane_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TUpdateDcsmMetadataCommand::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TUpdateDcsmMetadataCommand::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TUpdateDcsmMetadataCommand::GetClassData() const { return &_class_data_; }


void TUpdateDcsmMetadataCommand::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TUpdateDcsmMetadataCommand*>(&to_msg);
  auto& from = static_cast<const TUpdateDcsmMetadataCommand&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TUpdateDcsmMetadataCommand)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_contentid()->::TDataBinding::MergeFrom(
          from._internal_contentid());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_vehiclevisible()->::TDataBinding::MergeFrom(
          from._internal_vehiclevisible());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_vehiclemodelid()->::TDataBinding::MergeFrom(
          from._internal_vehiclemodelid());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_camerapitch()->::TDataBinding::MergeFrom(
          from._internal_camerapitch());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_camerayaw()->::TDataBinding::MergeFrom(
          from._internal_camerayaw());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_camerafovh()->::TDataBinding::MergeFrom(
          from._internal_camerafovh());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_cameradistance()->::TDataBinding::MergeFrom(
          from._internal_cameradistance());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_cameraorigin()->::TDataBinding::MergeFrom(
          from._internal_cameraorigin());
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_cameranearplane()->::TDataBinding::MergeFrom(
          from._internal_cameranearplane());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_camerafarplane()->::TDataBinding::MergeFrom(
          from._internal_camerafarplane());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TUpdateDcsmMetadataCommand::CopyFrom(const TUpdateDcsmMetadataCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TUpdateDcsmMetadataCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TUpdateDcsmMetadataCommand::IsInitialized() const {
  if (_internal_has_contentid()) {
    if (!_impl_.contentid_->IsInitialized()) return false;
  }
  if (_internal_has_vehiclevisible()) {
    if (!_impl_.vehiclevisible_->IsInitialized()) return false;
  }
  if (_internal_has_vehiclemodelid()) {
    if (!_impl_.vehiclemodelid_->IsInitialized()) return false;
  }
  if (_internal_has_camerapitch()) {
    if (!_impl_.camerapitch_->IsInitialized()) return false;
  }
  if (_internal_has_camerayaw()) {
    if (!_impl_.camerayaw_->IsInitialized()) return false;
  }
  if (_internal_has_camerafovh()) {
    if (!_impl_.camerafovh_->IsInitialized()) return false;
  }
  if (_internal_has_cameradistance()) {
    if (!_impl_.cameradistance_->IsInitialized()) return false;
  }
  if (_internal_has_cameraorigin()) {
    if (!_impl_.cameraorigin_->IsInitialized()) return false;
  }
  if (_internal_has_cameranearplane()) {
    if (!_impl_.cameranearplane_->IsInitialized()) return false;
  }
  if (_internal_has_camerafarplane()) {
    if (!_impl_.camerafarplane_->IsInitialized()) return false;
  }
  return true;
}

void TUpdateDcsmMetadataCommand::InternalSwap(TUpdateDcsmMetadataCommand* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TUpdateDcsmMetadataCommand, _impl_.camerafarplane_)
      + sizeof(TUpdateDcsmMetadataCommand::_impl_.camerafarplane_)
      - PROTOBUF_FIELD_OFFSET(TUpdateDcsmMetadataCommand, _impl_.contentid_)>(
          reinterpret_cast<char*>(&_impl_.contentid_),
          reinterpret_cast<char*>(&other->_impl_.contentid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TUpdateDcsmMetadataCommand::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[43]);
}

// ===================================================================

class TAnimationTrigger::_Internal {
 public:
  using HasBits = decltype(std::declval<TAnimationTrigger>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TAnimationTrigger, _impl_._has_bits_);
  static const ::TIdentifier& animation(const TAnimationTrigger* msg);
  static void set_has_animation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TAnimationTrigger::_Internal::animation(const TAnimationTrigger* msg) {
  return *msg->_impl_.animation_;
}
void TAnimationTrigger::clear_animation() {
  if (_impl_.animation_ != nullptr) _impl_.animation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TAnimationTrigger::TAnimationTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TAnimationTrigger)
}
TAnimationTrigger::TAnimationTrigger(const TAnimationTrigger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TAnimationTrigger* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.animation_){nullptr}
    , decltype(_impl_.action_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_animation()) {
    _this->_impl_.animation_ = new ::TIdentifier(*from._impl_.animation_);
  }
  _this->_impl_.action_ = from._impl_.action_;
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TAnimationTrigger)
}

inline void TAnimationTrigger::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.animation_){nullptr}
    , decltype(_impl_.action_){0}
  };
}

TAnimationTrigger::~TAnimationTrigger() {
  // @@protoc_insertion_point(destructor:HmiWidget.TAnimationTrigger)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TAnimationTrigger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.animation_;
}

void TAnimationTrigger::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TAnimationTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TAnimationTrigger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.animation_ != nullptr);
    _impl_.animation_->Clear();
  }
  _impl_.action_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TAnimationTrigger::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier animation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_animation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TEAnimationAction action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TEAnimationAction_IsValid(val))) {
            _internal_set_action(static_cast<::HmiWidget::TEAnimationAction>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TAnimationTrigger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TAnimationTrigger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier animation = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::animation(this),
        _Internal::animation(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TEAnimationAction action = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TAnimationTrigger)
  return target;
}

size_t TAnimationTrigger::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TAnimationTrigger)
  size_t total_size = 0;

  if (_internal_has_animation()) {
    // required .TIdentifier animation = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.animation_);
  }

  if (_internal_has_action()) {
    // required .HmiWidget.TEAnimationAction action = 2;
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return total_size;
}
size_t TAnimationTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TAnimationTrigger)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier animation = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.animation_);

    // required .HmiWidget.TEAnimationAction action = 2;
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_action());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TAnimationTrigger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TAnimationTrigger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TAnimationTrigger::GetClassData() const { return &_class_data_; }


void TAnimationTrigger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TAnimationTrigger*>(&to_msg);
  auto& from = static_cast<const TAnimationTrigger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TAnimationTrigger)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_animation()->::TIdentifier::MergeFrom(
          from._internal_animation());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.action_ = from._impl_.action_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TAnimationTrigger::CopyFrom(const TAnimationTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TAnimationTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TAnimationTrigger::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void TAnimationTrigger::InternalSwap(TAnimationTrigger* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TAnimationTrigger, _impl_.action_)
      + sizeof(TAnimationTrigger::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(TAnimationTrigger, _impl_.animation_)>(
          reinterpret_cast<char*>(&_impl_.animation_),
          reinterpret_cast<char*>(&other->_impl_.animation_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TAnimationTrigger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[44]);
}

// ===================================================================

class TScriptReference::_Internal {
 public:
  using HasBits = decltype(std::declval<TScriptReference>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TScriptReference, _impl_._has_bits_);
  static const ::TIdentifier& scriptreference(const TScriptReference* msg);
  static void set_has_scriptreference(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TIdentifier&
TScriptReference::_Internal::scriptreference(const TScriptReference* msg) {
  return *msg->_impl_.scriptreference_;
}
void TScriptReference::clear_scriptreference() {
  if (_impl_.scriptreference_ != nullptr) _impl_.scriptreference_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TScriptReference::TScriptReference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TScriptReference)
}
TScriptReference::TScriptReference(const TScriptReference& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TScriptReference* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.scriptreference_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scriptreference()) {
    _this->_impl_.scriptreference_ = new ::TIdentifier(*from._impl_.scriptreference_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TScriptReference)
}

inline void TScriptReference::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.scriptreference_){nullptr}
  };
}

TScriptReference::~TScriptReference() {
  // @@protoc_insertion_point(destructor:HmiWidget.TScriptReference)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TScriptReference::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.scriptreference_;
}

void TScriptReference::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TScriptReference::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TScriptReference)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.scriptreference_ != nullptr);
    _impl_.scriptreference_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TScriptReference::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier scriptReference = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scriptreference(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TScriptReference::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TScriptReference)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier scriptReference = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::scriptreference(this),
        _Internal::scriptreference(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TScriptReference)
  return target;
}

size_t TScriptReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TScriptReference)
  size_t total_size = 0;

  // required .TIdentifier scriptReference = 1;
  if (_internal_has_scriptreference()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.scriptreference_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TScriptReference::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TScriptReference::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TScriptReference::GetClassData() const { return &_class_data_; }


void TScriptReference::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TScriptReference*>(&to_msg);
  auto& from = static_cast<const TScriptReference&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TScriptReference)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_scriptreference()) {
    _this->_internal_mutable_scriptreference()->::TIdentifier::MergeFrom(
        from._internal_scriptreference());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TScriptReference::CopyFrom(const TScriptReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TScriptReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TScriptReference::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void TScriptReference::InternalSwap(TScriptReference* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.scriptreference_, other->_impl_.scriptreference_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TScriptReference::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[45]);
}

// ===================================================================

class TCurveReference::_Internal {
 public:
  using HasBits = decltype(std::declval<TCurveReference>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TCurveReference, _impl_._has_bits_);
  static const ::TIdentifier& curvereference(const TCurveReference* msg);
  static void set_has_curvereference(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TIdentifier&
TCurveReference::_Internal::curvereference(const TCurveReference* msg) {
  return *msg->_impl_.curvereference_;
}
void TCurveReference::clear_curvereference() {
  if (_impl_.curvereference_ != nullptr) _impl_.curvereference_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TCurveReference::TCurveReference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TCurveReference)
}
TCurveReference::TCurveReference(const TCurveReference& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TCurveReference* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.curvereference_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_curvereference()) {
    _this->_impl_.curvereference_ = new ::TIdentifier(*from._impl_.curvereference_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TCurveReference)
}

inline void TCurveReference::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.curvereference_){nullptr}
  };
}

TCurveReference::~TCurveReference() {
  // @@protoc_insertion_point(destructor:HmiWidget.TCurveReference)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TCurveReference::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.curvereference_;
}

void TCurveReference::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TCurveReference::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TCurveReference)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.curvereference_ != nullptr);
    _impl_.curvereference_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TCurveReference::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier curveReference = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_curvereference(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TCurveReference::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TCurveReference)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier curveReference = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::curvereference(this),
        _Internal::curvereference(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TCurveReference)
  return target;
}

size_t TCurveReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TCurveReference)
  size_t total_size = 0;

  // required .TIdentifier curveReference = 1;
  if (_internal_has_curvereference()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.curvereference_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TCurveReference::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TCurveReference::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TCurveReference::GetClassData() const { return &_class_data_; }


void TCurveReference::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TCurveReference*>(&to_msg);
  auto& from = static_cast<const TCurveReference&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TCurveReference)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_curvereference()) {
    _this->_internal_mutable_curvereference()->::TIdentifier::MergeFrom(
        from._internal_curvereference());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TCurveReference::CopyFrom(const TCurveReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TCurveReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCurveReference::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void TCurveReference::InternalSwap(TCurveReference* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.curvereference_, other->_impl_.curvereference_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TCurveReference::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[46]);
}

// ===================================================================

class TScript::_Internal {
 public:
  using HasBits = decltype(std::declval<TScript>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TScript, _impl_._has_bits_);
  static const ::TIdentifier& scriptidentifier(const TScript* msg);
  static void set_has_scriptidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& functionname(const TScript* msg);
  static void set_has_functionname(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TScript::_Internal::scriptidentifier(const TScript* msg) {
  return *msg->_impl_.scriptidentifier_;
}
const ::TDataBinding&
TScript::_Internal::functionname(const TScript* msg) {
  return *msg->_impl_.functionname_;
}
void TScript::clear_scriptidentifier() {
  if (_impl_.scriptidentifier_ != nullptr) _impl_.scriptidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TScript::clear_functionname() {
  if (_impl_.functionname_ != nullptr) _impl_.functionname_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TScript::clear_parameter() {
  _impl_.parameter_.Clear();
}
void TScript::clear_passiveparameter() {
  _impl_.passiveparameter_.Clear();
}
TScript::TScript(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TScript)
}
TScript::TScript(const TScript& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TScript* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.parameter_){from._impl_.parameter_}
    , decltype(_impl_.passiveparameter_){from._impl_.passiveparameter_}
    , decltype(_impl_.returnvalue_){from._impl_.returnvalue_}
    , decltype(_impl_.scriptidentifier_){nullptr}
    , decltype(_impl_.functionname_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scriptidentifier()) {
    _this->_impl_.scriptidentifier_ = new ::TIdentifier(*from._impl_.scriptidentifier_);
  }
  if (from._internal_has_functionname()) {
    _this->_impl_.functionname_ = new ::TDataBinding(*from._impl_.functionname_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TScript)
}

inline void TScript::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.parameter_){arena}
    , decltype(_impl_.passiveparameter_){arena}
    , decltype(_impl_.returnvalue_){arena}
    , decltype(_impl_.scriptidentifier_){nullptr}
    , decltype(_impl_.functionname_){nullptr}
  };
}

TScript::~TScript() {
  // @@protoc_insertion_point(destructor:HmiWidget.TScript)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TScript::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parameter_.~RepeatedPtrField();
  _impl_.passiveparameter_.~RepeatedPtrField();
  _impl_.returnvalue_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.scriptidentifier_;
  if (this != internal_default_instance()) delete _impl_.functionname_;
}

void TScript::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TScript::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TScript)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameter_.Clear();
  _impl_.passiveparameter_.Clear();
  _impl_.returnvalue_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.scriptidentifier_ != nullptr);
      _impl_.scriptidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.functionname_ != nullptr);
      _impl_.functionname_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TScript::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier scriptIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scriptidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TDataBinding functionName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_functionname(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TDataBinding parameter = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_parameter(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .TDataBinding passiveParameter = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_passiveparameter(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TScriptReturnValue returnValue = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_returnvalue(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TScript::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TScript)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier scriptIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::scriptidentifier(this),
        _Internal::scriptidentifier(this).GetCachedSize(), target, stream);
  }

  // required .TDataBinding functionName = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::functionname(this),
        _Internal::functionname(this).GetCachedSize(), target, stream);
  }

  // repeated .TDataBinding parameter = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_parameter_size()); i < n; i++) {
    const auto& repfield = this->_internal_parameter(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .TDataBinding passiveParameter = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_passiveparameter_size()); i < n; i++) {
    const auto& repfield = this->_internal_passiveparameter(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TScriptReturnValue returnValue = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_returnvalue_size()); i < n; i++) {
    const auto& repfield = this->_internal_returnvalue(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TScript)
  return target;
}

size_t TScript::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TScript)
  size_t total_size = 0;

  if (_internal_has_scriptidentifier()) {
    // required .TIdentifier scriptIdentifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.scriptidentifier_);
  }

  if (_internal_has_functionname()) {
    // required .TDataBinding functionName = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.functionname_);
  }

  return total_size;
}
size_t TScript::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TScript)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier scriptIdentifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.scriptidentifier_);

    // required .TDataBinding functionName = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.functionname_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TDataBinding parameter = 3;
  total_size += 1UL * this->_internal_parameter_size();
  for (const auto& msg : this->_impl_.parameter_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .TDataBinding passiveParameter = 4;
  total_size += 1UL * this->_internal_passiveparameter_size();
  for (const auto& msg : this->_impl_.passiveparameter_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TScriptReturnValue returnValue = 5;
  total_size += 1UL * this->_internal_returnvalue_size();
  for (const auto& msg : this->_impl_.returnvalue_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TScript::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TScript::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TScript::GetClassData() const { return &_class_data_; }


void TScript::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TScript*>(&to_msg);
  auto& from = static_cast<const TScript&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TScript)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameter_.MergeFrom(from._impl_.parameter_);
  _this->_impl_.passiveparameter_.MergeFrom(from._impl_.passiveparameter_);
  _this->_impl_.returnvalue_.MergeFrom(from._impl_.returnvalue_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_scriptidentifier()->::TIdentifier::MergeFrom(
          from._internal_scriptidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_functionname()->::TDataBinding::MergeFrom(
          from._internal_functionname());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TScript::CopyFrom(const TScript& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TScript)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TScript::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.parameter_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.passiveparameter_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.returnvalue_))
    return false;
  if (_internal_has_functionname()) {
    if (!_impl_.functionname_->IsInitialized()) return false;
  }
  return true;
}

void TScript::InternalSwap(TScript* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameter_.InternalSwap(&other->_impl_.parameter_);
  _impl_.passiveparameter_.InternalSwap(&other->_impl_.passiveparameter_);
  _impl_.returnvalue_.InternalSwap(&other->_impl_.returnvalue_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TScript, _impl_.functionname_)
      + sizeof(TScript::_impl_.functionname_)
      - PROTOBUF_FIELD_OFFSET(TScript, _impl_.scriptidentifier_)>(
          reinterpret_cast<char*>(&_impl_.scriptidentifier_),
          reinterpret_cast<char*>(&other->_impl_.scriptidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TScript::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[47]);
}

// ===================================================================

class TScriptReturnValue::_Internal {
 public:
  using HasBits = decltype(std::declval<TScriptReturnValue>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TScriptReturnValue, _impl_._has_bits_);
  static const ::TIdentifier& key(const TScriptReturnValue* msg);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TVariant& value(const TScriptReturnValue* msg);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TScriptReturnValue::_Internal::key(const TScriptReturnValue* msg) {
  return *msg->_impl_.key_;
}
const ::TVariant&
TScriptReturnValue::_Internal::value(const TScriptReturnValue* msg) {
  return *msg->_impl_.value_;
}
void TScriptReturnValue::clear_key() {
  if (_impl_.key_ != nullptr) _impl_.key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TScriptReturnValue::clear_value() {
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TScriptReturnValue::TScriptReturnValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TScriptReturnValue)
}
TScriptReturnValue::TScriptReturnValue(const TScriptReturnValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TScriptReturnValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.value_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_key()) {
    _this->_impl_.key_ = new ::TIdentifier(*from._impl_.key_);
  }
  if (from._internal_has_value()) {
    _this->_impl_.value_ = new ::TVariant(*from._impl_.value_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TScriptReturnValue)
}

inline void TScriptReturnValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.value_){nullptr}
  };
}

TScriptReturnValue::~TScriptReturnValue() {
  // @@protoc_insertion_point(destructor:HmiWidget.TScriptReturnValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TScriptReturnValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.key_;
  if (this != internal_default_instance()) delete _impl_.value_;
}

void TScriptReturnValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TScriptReturnValue::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TScriptReturnValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.key_ != nullptr);
      _impl_.key_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.value_ != nullptr);
      _impl_.value_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TScriptReturnValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TVariant value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TScriptReturnValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TScriptReturnValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::key(this),
        _Internal::key(this).GetCachedSize(), target, stream);
  }

  // required .TVariant value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::value(this),
        _Internal::value(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TScriptReturnValue)
  return target;
}

size_t TScriptReturnValue::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TScriptReturnValue)
  size_t total_size = 0;

  if (_internal_has_key()) {
    // required .TIdentifier key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);
  }

  if (_internal_has_value()) {
    // required .TVariant value = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);
  }

  return total_size;
}
size_t TScriptReturnValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TScriptReturnValue)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);

    // required .TVariant value = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.value_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TScriptReturnValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TScriptReturnValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TScriptReturnValue::GetClassData() const { return &_class_data_; }


void TScriptReturnValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TScriptReturnValue*>(&to_msg);
  auto& from = static_cast<const TScriptReturnValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TScriptReturnValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_key()->::TIdentifier::MergeFrom(
          from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_value()->::TVariant::MergeFrom(
          from._internal_value());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TScriptReturnValue::CopyFrom(const TScriptReturnValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TScriptReturnValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TScriptReturnValue::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_value()) {
    if (!_impl_.value_->IsInitialized()) return false;
  }
  return true;
}

void TScriptReturnValue::InternalSwap(TScriptReturnValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TScriptReturnValue, _impl_.value_)
      + sizeof(TScriptReturnValue::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(TScriptReturnValue, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TScriptReturnValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[48]);
}

// ===================================================================

class TTriggeredSlot::_Internal {
 public:
  using HasBits = decltype(std::declval<TTriggeredSlot>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TTriggeredSlot, _impl_._has_bits_);
  static const ::TIdentifier& signal(const TTriggeredSlot* msg);
  static void set_has_signal(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TIdentifier& slot(const TTriggeredSlot* msg);
  static void set_has_slot(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TTriggeredSlot::_Internal::signal(const TTriggeredSlot* msg) {
  return *msg->_impl_.signal_;
}
const ::TIdentifier&
TTriggeredSlot::_Internal::slot(const TTriggeredSlot* msg) {
  return *msg->_impl_.slot_;
}
void TTriggeredSlot::clear_signal() {
  if (_impl_.signal_ != nullptr) _impl_.signal_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TTriggeredSlot::clear_slot() {
  if (_impl_.slot_ != nullptr) _impl_.slot_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TTriggeredSlot::TTriggeredSlot(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TTriggeredSlot)
}
TTriggeredSlot::TTriggeredSlot(const TTriggeredSlot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TTriggeredSlot* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.signal_){nullptr}
    , decltype(_impl_.slot_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_signal()) {
    _this->_impl_.signal_ = new ::TIdentifier(*from._impl_.signal_);
  }
  if (from._internal_has_slot()) {
    _this->_impl_.slot_ = new ::TIdentifier(*from._impl_.slot_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TTriggeredSlot)
}

inline void TTriggeredSlot::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.signal_){nullptr}
    , decltype(_impl_.slot_){nullptr}
  };
}

TTriggeredSlot::~TTriggeredSlot() {
  // @@protoc_insertion_point(destructor:HmiWidget.TTriggeredSlot)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TTriggeredSlot::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.signal_;
  if (this != internal_default_instance()) delete _impl_.slot_;
}

void TTriggeredSlot::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TTriggeredSlot::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TTriggeredSlot)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.signal_ != nullptr);
      _impl_.signal_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.slot_ != nullptr);
      _impl_.slot_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TTriggeredSlot::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier signal = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_signal(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TIdentifier slot = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_slot(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TTriggeredSlot::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TTriggeredSlot)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier signal = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::signal(this),
        _Internal::signal(this).GetCachedSize(), target, stream);
  }

  // required .TIdentifier slot = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::slot(this),
        _Internal::slot(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TTriggeredSlot)
  return target;
}

size_t TTriggeredSlot::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TTriggeredSlot)
  size_t total_size = 0;

  if (_internal_has_signal()) {
    // required .TIdentifier signal = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.signal_);
  }

  if (_internal_has_slot()) {
    // required .TIdentifier slot = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.slot_);
  }

  return total_size;
}
size_t TTriggeredSlot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TTriggeredSlot)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier signal = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.signal_);

    // required .TIdentifier slot = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.slot_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TTriggeredSlot::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TTriggeredSlot::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TTriggeredSlot::GetClassData() const { return &_class_data_; }


void TTriggeredSlot::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TTriggeredSlot*>(&to_msg);
  auto& from = static_cast<const TTriggeredSlot&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TTriggeredSlot)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_signal()->::TIdentifier::MergeFrom(
          from._internal_signal());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_slot()->::TIdentifier::MergeFrom(
          from._internal_slot());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TTriggeredSlot::CopyFrom(const TTriggeredSlot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TTriggeredSlot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TTriggeredSlot::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void TTriggeredSlot::InternalSwap(TTriggeredSlot* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TTriggeredSlot, _impl_.slot_)
      + sizeof(TTriggeredSlot::_impl_.slot_)
      - PROTOBUF_FIELD_OFFSET(TTriggeredSlot, _impl_.signal_)>(
          reinterpret_cast<char*>(&_impl_.signal_),
          reinterpret_cast<char*>(&other->_impl_.signal_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TTriggeredSlot::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[49]);
}

// ===================================================================

class TForwardSignals::_Internal {
 public:
  using HasBits = decltype(std::declval<TForwardSignals>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TForwardSignals, _impl_._has_bits_);
  static void set_has_target(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void TForwardSignals::clear_signalid() {
  _impl_.signalid_.Clear();
}
TForwardSignals::TForwardSignals(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TForwardSignals)
}
TForwardSignals::TForwardSignals(const TForwardSignals& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TForwardSignals* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.signalid_){from._impl_.signalid_}
    , decltype(_impl_.target_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.target_ = from._impl_.target_;
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TForwardSignals)
}

inline void TForwardSignals::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.signalid_){arena}
    , decltype(_impl_.target_){0}
  };
}

TForwardSignals::~TForwardSignals() {
  // @@protoc_insertion_point(destructor:HmiWidget.TForwardSignals)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TForwardSignals::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.signalid_.~RepeatedPtrField();
}

void TForwardSignals::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TForwardSignals::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TForwardSignals)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signalid_.Clear();
  _impl_.target_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TForwardSignals::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .TIdentifier signalId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_signalid(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TESignalTarget target = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TESignalTarget_IsValid(val))) {
            _internal_set_target(static_cast<::HmiWidget::TESignalTarget>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TForwardSignals::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TForwardSignals)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TIdentifier signalId = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_signalid_size()); i < n; i++) {
    const auto& repfield = this->_internal_signalid(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HmiWidget.TESignalTarget target = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_target(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TForwardSignals)
  return target;
}

size_t TForwardSignals::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TForwardSignals)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TIdentifier signalId = 1;
  total_size += 1UL * this->_internal_signalid_size();
  for (const auto& msg : this->_impl_.signalid_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .HmiWidget.TESignalTarget target = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_target());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TForwardSignals::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TForwardSignals::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TForwardSignals::GetClassData() const { return &_class_data_; }


void TForwardSignals::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TForwardSignals*>(&to_msg);
  auto& from = static_cast<const TForwardSignals&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TForwardSignals)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.signalid_.MergeFrom(from._impl_.signalid_);
  if (from._internal_has_target()) {
    _this->_internal_set_target(from._internal_target());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TForwardSignals::CopyFrom(const TForwardSignals& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TForwardSignals)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TForwardSignals::IsInitialized() const {
  return true;
}

void TForwardSignals::InternalSwap(TForwardSignals* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.signalid_.InternalSwap(&other->_impl_.signalid_);
  swap(_impl_.target_, other->_impl_.target_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TForwardSignals::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[50]);
}

// ===================================================================

class TCurve::_Internal {
 public:
  using HasBits = decltype(std::declval<TCurve>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TCurve, _impl_._has_bits_);
  static const ::TIdentifier& curveidentifier(const TCurve* msg);
  static void set_has_curveidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& sampleposition(const TCurve* msg);
  static void set_has_sampleposition(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TCurveDefinition& curvedefinition(const TCurve* msg);
  static void set_has_curvedefinition(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

const ::TIdentifier&
TCurve::_Internal::curveidentifier(const TCurve* msg) {
  return *msg->_impl_.curveidentifier_;
}
const ::TDataBinding&
TCurve::_Internal::sampleposition(const TCurve* msg) {
  return *msg->_impl_.sampleposition_;
}
const ::TCurveDefinition&
TCurve::_Internal::curvedefinition(const TCurve* msg) {
  return *msg->_impl_.curvedefinition_;
}
void TCurve::clear_curveidentifier() {
  if (_impl_.curveidentifier_ != nullptr) _impl_.curveidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TCurve::clear_sampleposition() {
  if (_impl_.sampleposition_ != nullptr) _impl_.sampleposition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TCurve::clear_curvedefinition() {
  if (_impl_.curvedefinition_ != nullptr) _impl_.curvedefinition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TCurve::TCurve(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TCurve)
}
TCurve::TCurve(const TCurve& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TCurve* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.curveidentifier_){nullptr}
    , decltype(_impl_.sampleposition_){nullptr}
    , decltype(_impl_.curvedefinition_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_curveidentifier()) {
    _this->_impl_.curveidentifier_ = new ::TIdentifier(*from._impl_.curveidentifier_);
  }
  if (from._internal_has_sampleposition()) {
    _this->_impl_.sampleposition_ = new ::TDataBinding(*from._impl_.sampleposition_);
  }
  if (from._internal_has_curvedefinition()) {
    _this->_impl_.curvedefinition_ = new ::TCurveDefinition(*from._impl_.curvedefinition_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TCurve)
}

inline void TCurve::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.curveidentifier_){nullptr}
    , decltype(_impl_.sampleposition_){nullptr}
    , decltype(_impl_.curvedefinition_){nullptr}
  };
}

TCurve::~TCurve() {
  // @@protoc_insertion_point(destructor:HmiWidget.TCurve)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TCurve::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.curveidentifier_;
  if (this != internal_default_instance()) delete _impl_.sampleposition_;
  if (this != internal_default_instance()) delete _impl_.curvedefinition_;
}

void TCurve::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TCurve::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TCurve)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.curveidentifier_ != nullptr);
      _impl_.curveidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.sampleposition_ != nullptr);
      _impl_.sampleposition_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.curvedefinition_ != nullptr);
      _impl_.curvedefinition_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TCurve::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier curveIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_curveidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TDataBinding samplePosition = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_sampleposition(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TCurveDefinition curveDefinition = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_curvedefinition(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TCurve::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TCurve)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier curveIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::curveidentifier(this),
        _Internal::curveidentifier(this).GetCachedSize(), target, stream);
  }

  // required .TDataBinding samplePosition = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::sampleposition(this),
        _Internal::sampleposition(this).GetCachedSize(), target, stream);
  }

  // required .TCurveDefinition curveDefinition = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::curvedefinition(this),
        _Internal::curvedefinition(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TCurve)
  return target;
}

size_t TCurve::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TCurve)
  size_t total_size = 0;

  if (_internal_has_curveidentifier()) {
    // required .TIdentifier curveIdentifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.curveidentifier_);
  }

  if (_internal_has_sampleposition()) {
    // required .TDataBinding samplePosition = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.sampleposition_);
  }

  if (_internal_has_curvedefinition()) {
    // required .TCurveDefinition curveDefinition = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.curvedefinition_);
  }

  return total_size;
}
size_t TCurve::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TCurve)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .TIdentifier curveIdentifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.curveidentifier_);

    // required .TDataBinding samplePosition = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.sampleposition_);

    // required .TCurveDefinition curveDefinition = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.curvedefinition_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TCurve::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TCurve::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TCurve::GetClassData() const { return &_class_data_; }


void TCurve::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TCurve*>(&to_msg);
  auto& from = static_cast<const TCurve&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TCurve)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_curveidentifier()->::TIdentifier::MergeFrom(
          from._internal_curveidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_sampleposition()->::TDataBinding::MergeFrom(
          from._internal_sampleposition());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_curvedefinition()->::TCurveDefinition::MergeFrom(
          from._internal_curvedefinition());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TCurve::CopyFrom(const TCurve& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TCurve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCurve::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_sampleposition()) {
    if (!_impl_.sampleposition_->IsInitialized()) return false;
  }
  if (_internal_has_curvedefinition()) {
    if (!_impl_.curvedefinition_->IsInitialized()) return false;
  }
  return true;
}

void TCurve::InternalSwap(TCurve* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TCurve, _impl_.curvedefinition_)
      + sizeof(TCurve::_impl_.curvedefinition_)
      - PROTOBUF_FIELD_OFFSET(TCurve, _impl_.curveidentifier_)>(
          reinterpret_cast<char*>(&_impl_.curveidentifier_),
          reinterpret_cast<char*>(&other->_impl_.curveidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TCurve::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[51]);
}

// ===================================================================

class TWidgetAnimation::_Internal {
 public:
  using HasBits = decltype(std::declval<TWidgetAnimation>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TWidgetAnimation, _impl_._has_bits_);
  static const ::TNumericValue& startvalue(const TWidgetAnimation* msg);
  static void set_has_startvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& startbinding(const TWidgetAnimation* msg);
  static void set_has_startbinding(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TNumericValue& endvalue(const TWidgetAnimation* msg);
  static void set_has_endvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& endbinding(const TWidgetAnimation* msg);
  static void set_has_endbinding(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_durationvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TDataBinding& durationbinding(const TWidgetAnimation* msg);
  static void set_has_durationbinding(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TKeyFrameSequence& keyframesequence(const TWidgetAnimation* msg);
  static void set_has_keyframesequence(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_interpolator(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_returntype(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_loopcount(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_updateinterval(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_updatebehaviour(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000180) ^ 0x00000180) != 0;
  }
};

const ::TNumericValue&
TWidgetAnimation::_Internal::startvalue(const TWidgetAnimation* msg) {
  return *msg->_impl_.startvalue_;
}
const ::TDataBinding&
TWidgetAnimation::_Internal::startbinding(const TWidgetAnimation* msg) {
  return *msg->_impl_.startbinding_;
}
const ::TNumericValue&
TWidgetAnimation::_Internal::endvalue(const TWidgetAnimation* msg) {
  return *msg->_impl_.endvalue_;
}
const ::TDataBinding&
TWidgetAnimation::_Internal::endbinding(const TWidgetAnimation* msg) {
  return *msg->_impl_.endbinding_;
}
const ::TDataBinding&
TWidgetAnimation::_Internal::durationbinding(const TWidgetAnimation* msg) {
  return *msg->_impl_.durationbinding_;
}
const ::TKeyFrameSequence&
TWidgetAnimation::_Internal::keyframesequence(const TWidgetAnimation* msg) {
  return *msg->_impl_.keyframesequence_;
}
void TWidgetAnimation::clear_startvalue() {
  if (_impl_.startvalue_ != nullptr) _impl_.startvalue_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TWidgetAnimation::clear_startbinding() {
  if (_impl_.startbinding_ != nullptr) _impl_.startbinding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TWidgetAnimation::clear_endvalue() {
  if (_impl_.endvalue_ != nullptr) _impl_.endvalue_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TWidgetAnimation::clear_endbinding() {
  if (_impl_.endbinding_ != nullptr) _impl_.endbinding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TWidgetAnimation::clear_durationbinding() {
  if (_impl_.durationbinding_ != nullptr) _impl_.durationbinding_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TWidgetAnimation::clear_keyframesequence() {
  if (_impl_.keyframesequence_ != nullptr) _impl_.keyframesequence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
TWidgetAnimation::TWidgetAnimation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TWidgetAnimation)
}
TWidgetAnimation::TWidgetAnimation(const TWidgetAnimation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TWidgetAnimation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.startvalue_){nullptr}
    , decltype(_impl_.startbinding_){nullptr}
    , decltype(_impl_.endvalue_){nullptr}
    , decltype(_impl_.endbinding_){nullptr}
    , decltype(_impl_.durationbinding_){nullptr}
    , decltype(_impl_.keyframesequence_){nullptr}
    , decltype(_impl_.durationvalue_){}
    , decltype(_impl_.interpolator_){}
    , decltype(_impl_.returntype_){}
    , decltype(_impl_.loopcount_){}
    , decltype(_impl_.updateinterval_){}
    , decltype(_impl_.updatebehaviour_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_startvalue()) {
    _this->_impl_.startvalue_ = new ::TNumericValue(*from._impl_.startvalue_);
  }
  if (from._internal_has_startbinding()) {
    _this->_impl_.startbinding_ = new ::TDataBinding(*from._impl_.startbinding_);
  }
  if (from._internal_has_endvalue()) {
    _this->_impl_.endvalue_ = new ::TNumericValue(*from._impl_.endvalue_);
  }
  if (from._internal_has_endbinding()) {
    _this->_impl_.endbinding_ = new ::TDataBinding(*from._impl_.endbinding_);
  }
  if (from._internal_has_durationbinding()) {
    _this->_impl_.durationbinding_ = new ::TDataBinding(*from._impl_.durationbinding_);
  }
  if (from._internal_has_keyframesequence()) {
    _this->_impl_.keyframesequence_ = new ::TKeyFrameSequence(*from._impl_.keyframesequence_);
  }
  ::memcpy(&_impl_.durationvalue_, &from._impl_.durationvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.updatebehaviour_) -
    reinterpret_cast<char*>(&_impl_.durationvalue_)) + sizeof(_impl_.updatebehaviour_));
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TWidgetAnimation)
}

inline void TWidgetAnimation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.startvalue_){nullptr}
    , decltype(_impl_.startbinding_){nullptr}
    , decltype(_impl_.endvalue_){nullptr}
    , decltype(_impl_.endbinding_){nullptr}
    , decltype(_impl_.durationbinding_){nullptr}
    , decltype(_impl_.keyframesequence_){nullptr}
    , decltype(_impl_.durationvalue_){0u}
    , decltype(_impl_.interpolator_){0}
    , decltype(_impl_.returntype_){0}
    , decltype(_impl_.loopcount_){0}
    , decltype(_impl_.updateinterval_){0}
    , decltype(_impl_.updatebehaviour_){0}
  };
}

TWidgetAnimation::~TWidgetAnimation() {
  // @@protoc_insertion_point(destructor:HmiWidget.TWidgetAnimation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TWidgetAnimation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.startvalue_;
  if (this != internal_default_instance()) delete _impl_.startbinding_;
  if (this != internal_default_instance()) delete _impl_.endvalue_;
  if (this != internal_default_instance()) delete _impl_.endbinding_;
  if (this != internal_default_instance()) delete _impl_.durationbinding_;
  if (this != internal_default_instance()) delete _impl_.keyframesequence_;
}

void TWidgetAnimation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TWidgetAnimation::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TWidgetAnimation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.startvalue_ != nullptr);
      _impl_.startvalue_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.startbinding_ != nullptr);
      _impl_.startbinding_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.endvalue_ != nullptr);
      _impl_.endvalue_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.endbinding_ != nullptr);
      _impl_.endbinding_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.durationbinding_ != nullptr);
      _impl_.durationbinding_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.keyframesequence_ != nullptr);
      _impl_.keyframesequence_->Clear();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&_impl_.durationvalue_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.interpolator_) -
        reinterpret_cast<char*>(&_impl_.durationvalue_)) + sizeof(_impl_.interpolator_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&_impl_.returntype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.updatebehaviour_) -
        reinterpret_cast<char*>(&_impl_.returntype_)) + sizeof(_impl_.updatebehaviour_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TWidgetAnimation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TNumericValue startValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_startvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding startBinding = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_startbinding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TNumericValue endValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_endvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding endBinding = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_endbinding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 durationValue = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_durationvalue(&has_bits);
          _impl_.durationvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding durationBinding = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_durationbinding(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TKeyFrameSequence keyFrameSequence = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_keyframesequence(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TEAnimationInterpolator interpolator = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::TEAnimationInterpolator_IsValid(val))) {
            _internal_set_interpolator(static_cast<::TEAnimationInterpolator>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // required .TEDataType returnType = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::TEDataType_IsValid(val))) {
            _internal_set_returntype(static_cast<::TEDataType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional int32 loopCount = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_loopcount(&has_bits);
          _impl_.loopcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 updateInterval = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_updateinterval(&has_bits);
          _impl_.updateinterval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TEAnimationBindingBehaviour updateBehaviour = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TEAnimationBindingBehaviour_IsValid(val))) {
            _internal_set_updatebehaviour(static_cast<::HmiWidget::TEAnimationBindingBehaviour>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TWidgetAnimation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TWidgetAnimation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TNumericValue startValue = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::startvalue(this),
        _Internal::startvalue(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding startBinding = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::startbinding(this),
        _Internal::startbinding(this).GetCachedSize(), target, stream);
  }

  // optional .TNumericValue endValue = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::endvalue(this),
        _Internal::endvalue(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding endBinding = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::endbinding(this),
        _Internal::endbinding(this).GetCachedSize(), target, stream);
  }

  // optional uint32 durationValue = 5;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_durationvalue(), target);
  }

  // optional .TDataBinding durationBinding = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::durationbinding(this),
        _Internal::durationbinding(this).GetCachedSize(), target, stream);
  }

  // optional .TKeyFrameSequence keyFrameSequence = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::keyframesequence(this),
        _Internal::keyframesequence(this).GetCachedSize(), target, stream);
  }

  // required .TEAnimationInterpolator interpolator = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      8, this->_internal_interpolator(), target);
  }

  // required .TEDataType returnType = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      9, this->_internal_returntype(), target);
  }

  // optional int32 loopCount = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_loopcount(), target);
  }

  // optional int32 updateInterval = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(11, this->_internal_updateinterval(), target);
  }

  // optional .HmiWidget.TEAnimationBindingBehaviour updateBehaviour = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      12, this->_internal_updatebehaviour(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TWidgetAnimation)
  return target;
}

size_t TWidgetAnimation::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TWidgetAnimation)
  size_t total_size = 0;

  if (_internal_has_interpolator()) {
    // required .TEAnimationInterpolator interpolator = 8;
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_interpolator());
  }

  if (_internal_has_returntype()) {
    // required .TEDataType returnType = 9;
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_returntype());
  }

  return total_size;
}
size_t TWidgetAnimation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TWidgetAnimation)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000180) ^ 0x00000180) == 0) {  // All required fields are present.
    // required .TEAnimationInterpolator interpolator = 8;
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_interpolator());

    // required .TEDataType returnType = 9;
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_returntype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .TNumericValue startValue = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.startvalue_);
    }

    // optional .TDataBinding startBinding = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.startbinding_);
    }

    // optional .TNumericValue endValue = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.endvalue_);
    }

    // optional .TDataBinding endBinding = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.endbinding_);
    }

    // optional .TDataBinding durationBinding = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.durationbinding_);
    }

    // optional .TKeyFrameSequence keyFrameSequence = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.keyframesequence_);
    }

    // optional uint32 durationValue = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_durationvalue());
    }

  }
  if (cached_has_bits & 0x00000e00u) {
    // optional int32 loopCount = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_loopcount());
    }

    // optional int32 updateInterval = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_updateinterval());
    }

    // optional .HmiWidget.TEAnimationBindingBehaviour updateBehaviour = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_updatebehaviour());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TWidgetAnimation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TWidgetAnimation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TWidgetAnimation::GetClassData() const { return &_class_data_; }


void TWidgetAnimation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TWidgetAnimation*>(&to_msg);
  auto& from = static_cast<const TWidgetAnimation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TWidgetAnimation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_startvalue()->::TNumericValue::MergeFrom(
          from._internal_startvalue());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_startbinding()->::TDataBinding::MergeFrom(
          from._internal_startbinding());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_endvalue()->::TNumericValue::MergeFrom(
          from._internal_endvalue());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_endbinding()->::TDataBinding::MergeFrom(
          from._internal_endbinding());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_durationbinding()->::TDataBinding::MergeFrom(
          from._internal_durationbinding());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_keyframesequence()->::TKeyFrameSequence::MergeFrom(
          from._internal_keyframesequence());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.durationvalue_ = from._impl_.durationvalue_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.interpolator_ = from._impl_.interpolator_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.returntype_ = from._impl_.returntype_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.loopcount_ = from._impl_.loopcount_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.updateinterval_ = from._impl_.updateinterval_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.updatebehaviour_ = from._impl_.updatebehaviour_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TWidgetAnimation::CopyFrom(const TWidgetAnimation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TWidgetAnimation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TWidgetAnimation::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_startvalue()) {
    if (!_impl_.startvalue_->IsInitialized()) return false;
  }
  if (_internal_has_startbinding()) {
    if (!_impl_.startbinding_->IsInitialized()) return false;
  }
  if (_internal_has_endvalue()) {
    if (!_impl_.endvalue_->IsInitialized()) return false;
  }
  if (_internal_has_endbinding()) {
    if (!_impl_.endbinding_->IsInitialized()) return false;
  }
  if (_internal_has_durationbinding()) {
    if (!_impl_.durationbinding_->IsInitialized()) return false;
  }
  if (_internal_has_keyframesequence()) {
    if (!_impl_.keyframesequence_->IsInitialized()) return false;
  }
  return true;
}

void TWidgetAnimation::InternalSwap(TWidgetAnimation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TWidgetAnimation, _impl_.updatebehaviour_)
      + sizeof(TWidgetAnimation::_impl_.updatebehaviour_)
      - PROTOBUF_FIELD_OFFSET(TWidgetAnimation, _impl_.startvalue_)>(
          reinterpret_cast<char*>(&_impl_.startvalue_),
          reinterpret_cast<char*>(&other->_impl_.startvalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TWidgetAnimation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[52]);
}

// ===================================================================

class TCompositeAnimationElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TCompositeAnimationElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TCompositeAnimationElement, _impl_._has_bits_);
  static const ::TIdentifier& animationtype(const TCompositeAnimationElement* msg);
  static void set_has_animationtype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TIdentifier& bindtoreturnvalue(const TCompositeAnimationElement* msg);
  static void set_has_bindtoreturnvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_isstartupanimation(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

const ::TIdentifier&
TCompositeAnimationElement::_Internal::animationtype(const TCompositeAnimationElement* msg) {
  return *msg->_impl_.animationtype_;
}
const ::TIdentifier&
TCompositeAnimationElement::_Internal::bindtoreturnvalue(const TCompositeAnimationElement* msg) {
  return *msg->_impl_.bindtoreturnvalue_;
}
void TCompositeAnimationElement::clear_animationtype() {
  if (_impl_.animationtype_ != nullptr) _impl_.animationtype_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TCompositeAnimationElement::clear_bindtoreturnvalue() {
  if (_impl_.bindtoreturnvalue_ != nullptr) _impl_.bindtoreturnvalue_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TCompositeAnimationElement::TCompositeAnimationElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TCompositeAnimationElement)
}
TCompositeAnimationElement::TCompositeAnimationElement(const TCompositeAnimationElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TCompositeAnimationElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.animationtype_){nullptr}
    , decltype(_impl_.bindtoreturnvalue_){nullptr}
    , decltype(_impl_.isstartupanimation_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_animationtype()) {
    _this->_impl_.animationtype_ = new ::TIdentifier(*from._impl_.animationtype_);
  }
  if (from._internal_has_bindtoreturnvalue()) {
    _this->_impl_.bindtoreturnvalue_ = new ::TIdentifier(*from._impl_.bindtoreturnvalue_);
  }
  _this->_impl_.isstartupanimation_ = from._impl_.isstartupanimation_;
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TCompositeAnimationElement)
}

inline void TCompositeAnimationElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.animationtype_){nullptr}
    , decltype(_impl_.bindtoreturnvalue_){nullptr}
    , decltype(_impl_.isstartupanimation_){false}
  };
}

TCompositeAnimationElement::~TCompositeAnimationElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TCompositeAnimationElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TCompositeAnimationElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.animationtype_;
  if (this != internal_default_instance()) delete _impl_.bindtoreturnvalue_;
}

void TCompositeAnimationElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TCompositeAnimationElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TCompositeAnimationElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.animationtype_ != nullptr);
      _impl_.animationtype_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.bindtoreturnvalue_ != nullptr);
      _impl_.bindtoreturnvalue_->Clear();
    }
  }
  _impl_.isstartupanimation_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TCompositeAnimationElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier animationType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_animationtype(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TIdentifier bindToReturnValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_bindtoreturnvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required bool isStartupAnimation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_isstartupanimation(&has_bits);
          _impl_.isstartupanimation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TCompositeAnimationElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TCompositeAnimationElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier animationType = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::animationtype(this),
        _Internal::animationtype(this).GetCachedSize(), target, stream);
  }

  // required .TIdentifier bindToReturnValue = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::bindtoreturnvalue(this),
        _Internal::bindtoreturnvalue(this).GetCachedSize(), target, stream);
  }

  // required bool isStartupAnimation = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_isstartupanimation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TCompositeAnimationElement)
  return target;
}

size_t TCompositeAnimationElement::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TCompositeAnimationElement)
  size_t total_size = 0;

  if (_internal_has_animationtype()) {
    // required .TIdentifier animationType = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.animationtype_);
  }

  if (_internal_has_bindtoreturnvalue()) {
    // required .TIdentifier bindToReturnValue = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.bindtoreturnvalue_);
  }

  if (_internal_has_isstartupanimation()) {
    // required bool isStartupAnimation = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t TCompositeAnimationElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TCompositeAnimationElement)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .TIdentifier animationType = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.animationtype_);

    // required .TIdentifier bindToReturnValue = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.bindtoreturnvalue_);

    // required bool isStartupAnimation = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TCompositeAnimationElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TCompositeAnimationElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TCompositeAnimationElement::GetClassData() const { return &_class_data_; }


void TCompositeAnimationElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TCompositeAnimationElement*>(&to_msg);
  auto& from = static_cast<const TCompositeAnimationElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TCompositeAnimationElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_animationtype()->::TIdentifier::MergeFrom(
          from._internal_animationtype());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_bindtoreturnvalue()->::TIdentifier::MergeFrom(
          from._internal_bindtoreturnvalue());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.isstartupanimation_ = from._impl_.isstartupanimation_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TCompositeAnimationElement::CopyFrom(const TCompositeAnimationElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TCompositeAnimationElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCompositeAnimationElement::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void TCompositeAnimationElement::InternalSwap(TCompositeAnimationElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TCompositeAnimationElement, _impl_.isstartupanimation_)
      + sizeof(TCompositeAnimationElement::_impl_.isstartupanimation_)
      - PROTOBUF_FIELD_OFFSET(TCompositeAnimationElement, _impl_.animationtype_)>(
          reinterpret_cast<char*>(&_impl_.animationtype_),
          reinterpret_cast<char*>(&other->_impl_.animationtype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TCompositeAnimationElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[53]);
}

// ===================================================================

class TCompositeAnimationTrigger::_Internal {
 public:
  using HasBits = decltype(std::declval<TCompositeAnimationTrigger>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TCompositeAnimationTrigger, _impl_._has_bits_);
  static const ::TIdentifier& source(const TCompositeAnimationTrigger* msg);
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_signal(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::HmiWidget::TCommand& widgetcommand(const TCompositeAnimationTrigger* msg);
  static void set_has_widgetcommand(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::TIdentifier&
TCompositeAnimationTrigger::_Internal::source(const TCompositeAnimationTrigger* msg) {
  return *msg->_impl_.source_;
}
const ::HmiWidget::TCommand&
TCompositeAnimationTrigger::_Internal::widgetcommand(const TCompositeAnimationTrigger* msg) {
  return *msg->_impl_.widgetcommand_;
}
void TCompositeAnimationTrigger::clear_source() {
  if (_impl_.source_ != nullptr) _impl_.source_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TCompositeAnimationTrigger::TCompositeAnimationTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TCompositeAnimationTrigger)
}
TCompositeAnimationTrigger::TCompositeAnimationTrigger(const TCompositeAnimationTrigger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TCompositeAnimationTrigger* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.source_){nullptr}
    , decltype(_impl_.widgetcommand_){nullptr}
    , decltype(_impl_.signal_){}
    , decltype(_impl_.action_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source()) {
    _this->_impl_.source_ = new ::TIdentifier(*from._impl_.source_);
  }
  if (from._internal_has_widgetcommand()) {
    _this->_impl_.widgetcommand_ = new ::HmiWidget::TCommand(*from._impl_.widgetcommand_);
  }
  ::memcpy(&_impl_.signal_, &from._impl_.signal_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.action_) -
    reinterpret_cast<char*>(&_impl_.signal_)) + sizeof(_impl_.action_));
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TCompositeAnimationTrigger)
}

inline void TCompositeAnimationTrigger::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.source_){nullptr}
    , decltype(_impl_.widgetcommand_){nullptr}
    , decltype(_impl_.signal_){0}
    , decltype(_impl_.action_){0}
  };
}

TCompositeAnimationTrigger::~TCompositeAnimationTrigger() {
  // @@protoc_insertion_point(destructor:HmiWidget.TCompositeAnimationTrigger)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TCompositeAnimationTrigger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.source_;
  if (this != internal_default_instance()) delete _impl_.widgetcommand_;
}

void TCompositeAnimationTrigger::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TCompositeAnimationTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TCompositeAnimationTrigger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.source_ != nullptr);
      _impl_.source_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.widgetcommand_ != nullptr);
      _impl_.widgetcommand_->Clear();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    ::memset(&_impl_.signal_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.action_) -
        reinterpret_cast<char*>(&_impl_.signal_)) + sizeof(_impl_.action_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TCompositeAnimationTrigger::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TEAnimationSignal signal = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TEAnimationSignal_IsValid(val))) {
            _internal_set_signal(static_cast<::HmiWidget::TEAnimationSignal>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TEAnimationSlot action = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::HmiWidget::TEAnimationSlot_IsValid(val))) {
            _internal_set_action(static_cast<::HmiWidget::TEAnimationSlot>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TCommand widgetCommand = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_widgetcommand(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TCompositeAnimationTrigger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TCompositeAnimationTrigger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier source = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::source(this),
        _Internal::source(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TEAnimationSignal signal = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_signal(), target);
  }

  // optional .HmiWidget.TEAnimationSlot action = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_action(), target);
  }

  // optional .HmiWidget.TCommand widgetCommand = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::widgetcommand(this),
        _Internal::widgetcommand(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TCompositeAnimationTrigger)
  return target;
}

size_t TCompositeAnimationTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TCompositeAnimationTrigger)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .TIdentifier source = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.source_);
    }

    // optional .HmiWidget.TCommand widgetCommand = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.widgetcommand_);
    }

    // optional .HmiWidget.TEAnimationSignal signal = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_signal());
    }

    // optional .HmiWidget.TEAnimationSlot action = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TCompositeAnimationTrigger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TCompositeAnimationTrigger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TCompositeAnimationTrigger::GetClassData() const { return &_class_data_; }


void TCompositeAnimationTrigger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TCompositeAnimationTrigger*>(&to_msg);
  auto& from = static_cast<const TCompositeAnimationTrigger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TCompositeAnimationTrigger)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_source()->::TIdentifier::MergeFrom(
          from._internal_source());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_widgetcommand()->::HmiWidget::TCommand::MergeFrom(
          from._internal_widgetcommand());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.signal_ = from._impl_.signal_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.action_ = from._impl_.action_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TCompositeAnimationTrigger::CopyFrom(const TCompositeAnimationTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TCompositeAnimationTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCompositeAnimationTrigger::IsInitialized() const {
  if (_internal_has_widgetcommand()) {
    if (!_impl_.widgetcommand_->IsInitialized()) return false;
  }
  return true;
}

void TCompositeAnimationTrigger::InternalSwap(TCompositeAnimationTrigger* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TCompositeAnimationTrigger, _impl_.action_)
      + sizeof(TCompositeAnimationTrigger::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(TCompositeAnimationTrigger, _impl_.source_)>(
          reinterpret_cast<char*>(&_impl_.source_),
          reinterpret_cast<char*>(&other->_impl_.source_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TCompositeAnimationTrigger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[54]);
}

// ===================================================================

class TCompositeAnimationSubAnimationList::_Internal {
 public:
  using HasBits = decltype(std::declval<TCompositeAnimationSubAnimationList>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TCompositeAnimationSubAnimationList, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TCompositeAnimationSubAnimationList* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TWidgetAnimation& widgetanimation(const TCompositeAnimationSubAnimationList* msg);
  static void set_has_widgetanimation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TIdentifier&
TCompositeAnimationSubAnimationList::_Internal::identifier(const TCompositeAnimationSubAnimationList* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TWidgetAnimation&
TCompositeAnimationSubAnimationList::_Internal::widgetanimation(const TCompositeAnimationSubAnimationList* msg) {
  return *msg->_impl_.widgetanimation_;
}
void TCompositeAnimationSubAnimationList::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TCompositeAnimationSubAnimationList::clear_useimport() {
  _impl_.useimport_.Clear();
}
TCompositeAnimationSubAnimationList::TCompositeAnimationSubAnimationList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TCompositeAnimationSubAnimationList)
}
TCompositeAnimationSubAnimationList::TCompositeAnimationSubAnimationList(const TCompositeAnimationSubAnimationList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TCompositeAnimationSubAnimationList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.useimport_){from._impl_.useimport_}
    , decltype(_impl_.trigger_){from._impl_.trigger_}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.widgetanimation_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_widgetanimation()) {
    _this->_impl_.widgetanimation_ = new ::HmiWidget::TWidgetAnimation(*from._impl_.widgetanimation_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TCompositeAnimationSubAnimationList)
}

inline void TCompositeAnimationSubAnimationList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.useimport_){arena}
    , decltype(_impl_.trigger_){arena}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.widgetanimation_){nullptr}
  };
}

TCompositeAnimationSubAnimationList::~TCompositeAnimationSubAnimationList() {
  // @@protoc_insertion_point(destructor:HmiWidget.TCompositeAnimationSubAnimationList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TCompositeAnimationSubAnimationList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.useimport_.~RepeatedPtrField();
  _impl_.trigger_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.widgetanimation_;
}

void TCompositeAnimationSubAnimationList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TCompositeAnimationSubAnimationList::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TCompositeAnimationSubAnimationList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.useimport_.Clear();
  _impl_.trigger_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.widgetanimation_ != nullptr);
      _impl_.widgetanimation_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TCompositeAnimationSubAnimationList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TWidgetAnimation widgetAnimation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_widgetanimation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TIdentifier useImport = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_useimport(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TCompositeAnimationTrigger trigger = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_trigger(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TCompositeAnimationSubAnimationList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TCompositeAnimationSubAnimationList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TWidgetAnimation widgetAnimation = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::widgetanimation(this),
        _Internal::widgetanimation(this).GetCachedSize(), target, stream);
  }

  // repeated .TIdentifier useImport = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_useimport_size()); i < n; i++) {
    const auto& repfield = this->_internal_useimport(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TCompositeAnimationTrigger trigger = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trigger_size()); i < n; i++) {
    const auto& repfield = this->_internal_trigger(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TCompositeAnimationSubAnimationList)
  return target;
}

size_t TCompositeAnimationSubAnimationList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TCompositeAnimationSubAnimationList)
  size_t total_size = 0;

  // required .TIdentifier identifier = 1;
  if (_internal_has_identifier()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TIdentifier useImport = 3;
  total_size += 1UL * this->_internal_useimport_size();
  for (const auto& msg : this->_impl_.useimport_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TCompositeAnimationTrigger trigger = 4;
  total_size += 1UL * this->_internal_trigger_size();
  for (const auto& msg : this->_impl_.trigger_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .HmiWidget.TWidgetAnimation widgetAnimation = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.widgetanimation_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TCompositeAnimationSubAnimationList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TCompositeAnimationSubAnimationList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TCompositeAnimationSubAnimationList::GetClassData() const { return &_class_data_; }


void TCompositeAnimationSubAnimationList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TCompositeAnimationSubAnimationList*>(&to_msg);
  auto& from = static_cast<const TCompositeAnimationSubAnimationList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TCompositeAnimationSubAnimationList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.useimport_.MergeFrom(from._impl_.useimport_);
  _this->_impl_.trigger_.MergeFrom(from._impl_.trigger_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_widgetanimation()->::HmiWidget::TWidgetAnimation::MergeFrom(
          from._internal_widgetanimation());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TCompositeAnimationSubAnimationList::CopyFrom(const TCompositeAnimationSubAnimationList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TCompositeAnimationSubAnimationList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCompositeAnimationSubAnimationList::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.trigger_))
    return false;
  if (_internal_has_widgetanimation()) {
    if (!_impl_.widgetanimation_->IsInitialized()) return false;
  }
  return true;
}

void TCompositeAnimationSubAnimationList::InternalSwap(TCompositeAnimationSubAnimationList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.useimport_.InternalSwap(&other->_impl_.useimport_);
  _impl_.trigger_.InternalSwap(&other->_impl_.trigger_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TCompositeAnimationSubAnimationList, _impl_.widgetanimation_)
      + sizeof(TCompositeAnimationSubAnimationList::_impl_.widgetanimation_)
      - PROTOBUF_FIELD_OFFSET(TCompositeAnimationSubAnimationList, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TCompositeAnimationSubAnimationList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[55]);
}

// ===================================================================

class TCompositeAnimationReturnValue::_Internal {
 public:
  using HasBits = decltype(std::declval<TCompositeAnimationReturnValue>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TCompositeAnimationReturnValue, _impl_._has_bits_);
  static const ::TIdentifier& key(const TCompositeAnimationReturnValue* msg);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_returntype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TVariant& defaultvalue(const TCompositeAnimationReturnValue* msg);
  static void set_has_defaultvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000005) ^ 0x00000005) != 0;
  }
};

const ::TIdentifier&
TCompositeAnimationReturnValue::_Internal::key(const TCompositeAnimationReturnValue* msg) {
  return *msg->_impl_.key_;
}
const ::TVariant&
TCompositeAnimationReturnValue::_Internal::defaultvalue(const TCompositeAnimationReturnValue* msg) {
  return *msg->_impl_.defaultvalue_;
}
void TCompositeAnimationReturnValue::clear_key() {
  if (_impl_.key_ != nullptr) _impl_.key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TCompositeAnimationReturnValue::clear_defaultvalue() {
  if (_impl_.defaultvalue_ != nullptr) _impl_.defaultvalue_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TCompositeAnimationReturnValue::TCompositeAnimationReturnValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TCompositeAnimationReturnValue)
}
TCompositeAnimationReturnValue::TCompositeAnimationReturnValue(const TCompositeAnimationReturnValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TCompositeAnimationReturnValue* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.animation_){from._impl_.animation_}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.defaultvalue_){nullptr}
    , decltype(_impl_.returntype_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_key()) {
    _this->_impl_.key_ = new ::TIdentifier(*from._impl_.key_);
  }
  if (from._internal_has_defaultvalue()) {
    _this->_impl_.defaultvalue_ = new ::TVariant(*from._impl_.defaultvalue_);
  }
  _this->_impl_.returntype_ = from._impl_.returntype_;
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TCompositeAnimationReturnValue)
}

inline void TCompositeAnimationReturnValue::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.animation_){arena}
    , decltype(_impl_.key_){nullptr}
    , decltype(_impl_.defaultvalue_){nullptr}
    , decltype(_impl_.returntype_){0}
  };
}

TCompositeAnimationReturnValue::~TCompositeAnimationReturnValue() {
  // @@protoc_insertion_point(destructor:HmiWidget.TCompositeAnimationReturnValue)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TCompositeAnimationReturnValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.animation_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.key_;
  if (this != internal_default_instance()) delete _impl_.defaultvalue_;
}

void TCompositeAnimationReturnValue::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TCompositeAnimationReturnValue::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TCompositeAnimationReturnValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.animation_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.key_ != nullptr);
      _impl_.key_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.defaultvalue_ != nullptr);
      _impl_.defaultvalue_->Clear();
    }
  }
  _impl_.returntype_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TCompositeAnimationReturnValue::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TCompositeAnimationSubAnimationList animation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_animation(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // required .TEDataType returnType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::TEDataType_IsValid(val))) {
            _internal_set_returntype(static_cast<::TEDataType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // optional .TVariant defaultValue = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultvalue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TCompositeAnimationReturnValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TCompositeAnimationReturnValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::key(this),
        _Internal::key(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TCompositeAnimationSubAnimationList animation = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_animation_size()); i < n; i++) {
    const auto& repfield = this->_internal_animation(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // required .TEDataType returnType = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_returntype(), target);
  }

  // optional .TVariant defaultValue = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::defaultvalue(this),
        _Internal::defaultvalue(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TCompositeAnimationReturnValue)
  return target;
}

size_t TCompositeAnimationReturnValue::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TCompositeAnimationReturnValue)
  size_t total_size = 0;

  if (_internal_has_key()) {
    // required .TIdentifier key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);
  }

  if (_internal_has_returntype()) {
    // required .TEDataType returnType = 3;
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_returntype());
  }

  return total_size;
}
size_t TCompositeAnimationReturnValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TCompositeAnimationReturnValue)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required .TIdentifier key = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.key_);

    // required .TEDataType returnType = 3;
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_returntype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TCompositeAnimationSubAnimationList animation = 2;
  total_size += 1UL * this->_internal_animation_size();
  for (const auto& msg : this->_impl_.animation_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .TVariant defaultValue = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.defaultvalue_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TCompositeAnimationReturnValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TCompositeAnimationReturnValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TCompositeAnimationReturnValue::GetClassData() const { return &_class_data_; }


void TCompositeAnimationReturnValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TCompositeAnimationReturnValue*>(&to_msg);
  auto& from = static_cast<const TCompositeAnimationReturnValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TCompositeAnimationReturnValue)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.animation_.MergeFrom(from._impl_.animation_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_key()->::TIdentifier::MergeFrom(
          from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_defaultvalue()->::TVariant::MergeFrom(
          from._internal_defaultvalue());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.returntype_ = from._impl_.returntype_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TCompositeAnimationReturnValue::CopyFrom(const TCompositeAnimationReturnValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TCompositeAnimationReturnValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCompositeAnimationReturnValue::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.animation_))
    return false;
  if (_internal_has_defaultvalue()) {
    if (!_impl_.defaultvalue_->IsInitialized()) return false;
  }
  return true;
}

void TCompositeAnimationReturnValue::InternalSwap(TCompositeAnimationReturnValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.animation_.InternalSwap(&other->_impl_.animation_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TCompositeAnimationReturnValue, _impl_.returntype_)
      + sizeof(TCompositeAnimationReturnValue::_impl_.returntype_)
      - PROTOBUF_FIELD_OFFSET(TCompositeAnimationReturnValue, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TCompositeAnimationReturnValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[56]);
}

// ===================================================================

class TCompositeAnimation::_Internal {
 public:
  using HasBits = decltype(std::declval<TCompositeAnimation>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TCompositeAnimation, _impl_._has_bits_);
  static const ::TIdentifier& compositeidentifier(const TCompositeAnimation* msg);
  static void set_has_compositeidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TIdentifier&
TCompositeAnimation::_Internal::compositeidentifier(const TCompositeAnimation* msg) {
  return *msg->_impl_.compositeidentifier_;
}
void TCompositeAnimation::clear_compositeidentifier() {
  if (_impl_.compositeidentifier_ != nullptr) _impl_.compositeidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TCompositeAnimation::TCompositeAnimation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TCompositeAnimation)
}
TCompositeAnimation::TCompositeAnimation(const TCompositeAnimation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TCompositeAnimation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.returnvalue_){from._impl_.returnvalue_}
    , decltype(_impl_.compositeidentifier_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_compositeidentifier()) {
    _this->_impl_.compositeidentifier_ = new ::TIdentifier(*from._impl_.compositeidentifier_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TCompositeAnimation)
}

inline void TCompositeAnimation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.returnvalue_){arena}
    , decltype(_impl_.compositeidentifier_){nullptr}
  };
}

TCompositeAnimation::~TCompositeAnimation() {
  // @@protoc_insertion_point(destructor:HmiWidget.TCompositeAnimation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TCompositeAnimation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.returnvalue_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.compositeidentifier_;
}

void TCompositeAnimation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TCompositeAnimation::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TCompositeAnimation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.returnvalue_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.compositeidentifier_ != nullptr);
    _impl_.compositeidentifier_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TCompositeAnimation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier compositeIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_compositeidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TCompositeAnimationReturnValue returnValue = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_returnvalue(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TCompositeAnimation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TCompositeAnimation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier compositeIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::compositeidentifier(this),
        _Internal::compositeidentifier(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TCompositeAnimationReturnValue returnValue = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_returnvalue_size()); i < n; i++) {
    const auto& repfield = this->_internal_returnvalue(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TCompositeAnimation)
  return target;
}

size_t TCompositeAnimation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TCompositeAnimation)
  size_t total_size = 0;

  // required .TIdentifier compositeIdentifier = 1;
  if (_internal_has_compositeidentifier()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.compositeidentifier_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TCompositeAnimationReturnValue returnValue = 4;
  total_size += 1UL * this->_internal_returnvalue_size();
  for (const auto& msg : this->_impl_.returnvalue_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TCompositeAnimation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TCompositeAnimation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TCompositeAnimation::GetClassData() const { return &_class_data_; }


void TCompositeAnimation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TCompositeAnimation*>(&to_msg);
  auto& from = static_cast<const TCompositeAnimation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TCompositeAnimation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.returnvalue_.MergeFrom(from._impl_.returnvalue_);
  if (from._internal_has_compositeidentifier()) {
    _this->_internal_mutable_compositeidentifier()->::TIdentifier::MergeFrom(
        from._internal_compositeidentifier());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TCompositeAnimation::CopyFrom(const TCompositeAnimation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TCompositeAnimation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCompositeAnimation::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.returnvalue_))
    return false;
  return true;
}

void TCompositeAnimation::InternalSwap(TCompositeAnimation* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.returnvalue_.InternalSwap(&other->_impl_.returnvalue_);
  swap(_impl_.compositeidentifier_, other->_impl_.compositeidentifier_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TCompositeAnimation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[57]);
}

// ===================================================================

class TLayout::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayout>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayout, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayout* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutStatic& staticlayout(const TLayout* msg);
  static void set_has_staticlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::HmiWidget::TLayoutHorizontal& horizontallayout(const TLayout* msg);
  static void set_has_horizontallayout(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::HmiWidget::TLayoutVertical& verticallayout(const TLayout* msg);
  static void set_has_verticallayout(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::HmiWidget::TLayoutHorizontalDynamic& horizontaldynamiclayout(const TLayout* msg);
  static void set_has_horizontaldynamiclayout(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::HmiWidget::TLayoutVerticalDynamic& verticaldynamiclayout(const TLayout* msg);
  static void set_has_verticaldynamiclayout(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::HmiWidget::TLayoutSceneGraph& scenegraphlayout(const TLayout* msg);
  static void set_has_scenegraphlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::HmiWidget::TLayoutSceneGraphProject& scenegraphprojectlayout(const TLayout* msg);
  static void set_has_scenegraphprojectlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static const ::HmiWidget::TLayoutCircle& circlelayout(const TLayout* msg);
  static void set_has_circlelayout(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::HmiWidget::TLayoutHorizontalList& horizontallistlayout(const TLayout* msg);
  static void set_has_horizontallistlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::HmiWidget::TLayoutVerticalList& verticallistlayout(const TLayout* msg);
  static void set_has_verticallistlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::HmiWidget::TLayoutVerticalRoll& verticalrolllayout(const TLayout* msg);
  static void set_has_verticalrolllayout(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::HmiWidget::TLayoutVerticalCurvedList& verticalcurvedlistlayout(const TLayout* msg);
  static void set_has_verticalcurvedlistlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static const ::HmiWidget::TLayoutGrid& gridlayout(const TLayout* msg);
  static void set_has_gridlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::HmiWidget::TLayoutMatrix& matrixlayout(const TLayout* msg);
  static void set_has_matrixlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::HmiWidget::TLayoutHorizontalPages& horizontalpageslayout(const TLayout* msg);
  static void set_has_horizontalpageslayout(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static const ::HmiWidget::TLayoutMenuBelt& menubeltlayout(const TLayout* msg);
  static void set_has_menubeltlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static const ::HmiWidget::TLayoutMatrixDynamic& matrixdynamiclayout(const TLayout* msg);
  static void set_has_matrixdynamiclayout(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static const ::TDataBinding& visibility(const TLayout* msg);
  static void set_has_visibility(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::TIdentifier&
TLayout::_Internal::identifier(const TLayout* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutStatic&
TLayout::_Internal::staticlayout(const TLayout* msg) {
  return *msg->_impl_.staticlayout_;
}
const ::HmiWidget::TLayoutHorizontal&
TLayout::_Internal::horizontallayout(const TLayout* msg) {
  return *msg->_impl_.horizontallayout_;
}
const ::HmiWidget::TLayoutVertical&
TLayout::_Internal::verticallayout(const TLayout* msg) {
  return *msg->_impl_.verticallayout_;
}
const ::HmiWidget::TLayoutHorizontalDynamic&
TLayout::_Internal::horizontaldynamiclayout(const TLayout* msg) {
  return *msg->_impl_.horizontaldynamiclayout_;
}
const ::HmiWidget::TLayoutVerticalDynamic&
TLayout::_Internal::verticaldynamiclayout(const TLayout* msg) {
  return *msg->_impl_.verticaldynamiclayout_;
}
const ::HmiWidget::TLayoutSceneGraph&
TLayout::_Internal::scenegraphlayout(const TLayout* msg) {
  return *msg->_impl_.scenegraphlayout_;
}
const ::HmiWidget::TLayoutSceneGraphProject&
TLayout::_Internal::scenegraphprojectlayout(const TLayout* msg) {
  return *msg->_impl_.scenegraphprojectlayout_;
}
const ::HmiWidget::TLayoutCircle&
TLayout::_Internal::circlelayout(const TLayout* msg) {
  return *msg->_impl_.circlelayout_;
}
const ::HmiWidget::TLayoutHorizontalList&
TLayout::_Internal::horizontallistlayout(const TLayout* msg) {
  return *msg->_impl_.horizontallistlayout_;
}
const ::HmiWidget::TLayoutVerticalList&
TLayout::_Internal::verticallistlayout(const TLayout* msg) {
  return *msg->_impl_.verticallistlayout_;
}
const ::HmiWidget::TLayoutVerticalRoll&
TLayout::_Internal::verticalrolllayout(const TLayout* msg) {
  return *msg->_impl_.verticalrolllayout_;
}
const ::HmiWidget::TLayoutVerticalCurvedList&
TLayout::_Internal::verticalcurvedlistlayout(const TLayout* msg) {
  return *msg->_impl_.verticalcurvedlistlayout_;
}
const ::HmiWidget::TLayoutGrid&
TLayout::_Internal::gridlayout(const TLayout* msg) {
  return *msg->_impl_.gridlayout_;
}
const ::HmiWidget::TLayoutMatrix&
TLayout::_Internal::matrixlayout(const TLayout* msg) {
  return *msg->_impl_.matrixlayout_;
}
const ::HmiWidget::TLayoutHorizontalPages&
TLayout::_Internal::horizontalpageslayout(const TLayout* msg) {
  return *msg->_impl_.horizontalpageslayout_;
}
const ::HmiWidget::TLayoutMenuBelt&
TLayout::_Internal::menubeltlayout(const TLayout* msg) {
  return *msg->_impl_.menubeltlayout_;
}
const ::HmiWidget::TLayoutMatrixDynamic&
TLayout::_Internal::matrixdynamiclayout(const TLayout* msg) {
  return *msg->_impl_.matrixdynamiclayout_;
}
const ::TDataBinding&
TLayout::_Internal::visibility(const TLayout* msg) {
  return *msg->_impl_.visibility_;
}
void TLayout::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayout::clear_visibility() {
  if (_impl_.visibility_ != nullptr) _impl_.visibility_->Clear();
  _impl_._has_bits_[0] &= ~0x00040000u;
}
void TLayout::clear_useimport() {
  _impl_.useimport_.Clear();
}
TLayout::TLayout(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayout)
}
TLayout::TLayout(const TLayout& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayout* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.triggeredslot_){from._impl_.triggeredslot_}
    , decltype(_impl_.useimport_){from._impl_.useimport_}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.staticlayout_){nullptr}
    , decltype(_impl_.horizontallayout_){nullptr}
    , decltype(_impl_.verticallayout_){nullptr}
    , decltype(_impl_.horizontaldynamiclayout_){nullptr}
    , decltype(_impl_.verticaldynamiclayout_){nullptr}
    , decltype(_impl_.scenegraphlayout_){nullptr}
    , decltype(_impl_.circlelayout_){nullptr}
    , decltype(_impl_.horizontallistlayout_){nullptr}
    , decltype(_impl_.verticallistlayout_){nullptr}
    , decltype(_impl_.verticalrolllayout_){nullptr}
    , decltype(_impl_.gridlayout_){nullptr}
    , decltype(_impl_.matrixlayout_){nullptr}
    , decltype(_impl_.scenegraphprojectlayout_){nullptr}
    , decltype(_impl_.verticalcurvedlistlayout_){nullptr}
    , decltype(_impl_.horizontalpageslayout_){nullptr}
    , decltype(_impl_.menubeltlayout_){nullptr}
    , decltype(_impl_.matrixdynamiclayout_){nullptr}
    , decltype(_impl_.visibility_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_staticlayout()) {
    _this->_impl_.staticlayout_ = new ::HmiWidget::TLayoutStatic(*from._impl_.staticlayout_);
  }
  if (from._internal_has_horizontallayout()) {
    _this->_impl_.horizontallayout_ = new ::HmiWidget::TLayoutHorizontal(*from._impl_.horizontallayout_);
  }
  if (from._internal_has_verticallayout()) {
    _this->_impl_.verticallayout_ = new ::HmiWidget::TLayoutVertical(*from._impl_.verticallayout_);
  }
  if (from._internal_has_horizontaldynamiclayout()) {
    _this->_impl_.horizontaldynamiclayout_ = new ::HmiWidget::TLayoutHorizontalDynamic(*from._impl_.horizontaldynamiclayout_);
  }
  if (from._internal_has_verticaldynamiclayout()) {
    _this->_impl_.verticaldynamiclayout_ = new ::HmiWidget::TLayoutVerticalDynamic(*from._impl_.verticaldynamiclayout_);
  }
  if (from._internal_has_scenegraphlayout()) {
    _this->_impl_.scenegraphlayout_ = new ::HmiWidget::TLayoutSceneGraph(*from._impl_.scenegraphlayout_);
  }
  if (from._internal_has_circlelayout()) {
    _this->_impl_.circlelayout_ = new ::HmiWidget::TLayoutCircle(*from._impl_.circlelayout_);
  }
  if (from._internal_has_horizontallistlayout()) {
    _this->_impl_.horizontallistlayout_ = new ::HmiWidget::TLayoutHorizontalList(*from._impl_.horizontallistlayout_);
  }
  if (from._internal_has_verticallistlayout()) {
    _this->_impl_.verticallistlayout_ = new ::HmiWidget::TLayoutVerticalList(*from._impl_.verticallistlayout_);
  }
  if (from._internal_has_verticalrolllayout()) {
    _this->_impl_.verticalrolllayout_ = new ::HmiWidget::TLayoutVerticalRoll(*from._impl_.verticalrolllayout_);
  }
  if (from._internal_has_gridlayout()) {
    _this->_impl_.gridlayout_ = new ::HmiWidget::TLayoutGrid(*from._impl_.gridlayout_);
  }
  if (from._internal_has_matrixlayout()) {
    _this->_impl_.matrixlayout_ = new ::HmiWidget::TLayoutMatrix(*from._impl_.matrixlayout_);
  }
  if (from._internal_has_scenegraphprojectlayout()) {
    _this->_impl_.scenegraphprojectlayout_ = new ::HmiWidget::TLayoutSceneGraphProject(*from._impl_.scenegraphprojectlayout_);
  }
  if (from._internal_has_verticalcurvedlistlayout()) {
    _this->_impl_.verticalcurvedlistlayout_ = new ::HmiWidget::TLayoutVerticalCurvedList(*from._impl_.verticalcurvedlistlayout_);
  }
  if (from._internal_has_horizontalpageslayout()) {
    _this->_impl_.horizontalpageslayout_ = new ::HmiWidget::TLayoutHorizontalPages(*from._impl_.horizontalpageslayout_);
  }
  if (from._internal_has_menubeltlayout()) {
    _this->_impl_.menubeltlayout_ = new ::HmiWidget::TLayoutMenuBelt(*from._impl_.menubeltlayout_);
  }
  if (from._internal_has_matrixdynamiclayout()) {
    _this->_impl_.matrixdynamiclayout_ = new ::HmiWidget::TLayoutMatrixDynamic(*from._impl_.matrixdynamiclayout_);
  }
  if (from._internal_has_visibility()) {
    _this->_impl_.visibility_ = new ::TDataBinding(*from._impl_.visibility_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayout)
}

inline void TLayout::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.triggeredslot_){arena}
    , decltype(_impl_.useimport_){arena}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.staticlayout_){nullptr}
    , decltype(_impl_.horizontallayout_){nullptr}
    , decltype(_impl_.verticallayout_){nullptr}
    , decltype(_impl_.horizontaldynamiclayout_){nullptr}
    , decltype(_impl_.verticaldynamiclayout_){nullptr}
    , decltype(_impl_.scenegraphlayout_){nullptr}
    , decltype(_impl_.circlelayout_){nullptr}
    , decltype(_impl_.horizontallistlayout_){nullptr}
    , decltype(_impl_.verticallistlayout_){nullptr}
    , decltype(_impl_.verticalrolllayout_){nullptr}
    , decltype(_impl_.gridlayout_){nullptr}
    , decltype(_impl_.matrixlayout_){nullptr}
    , decltype(_impl_.scenegraphprojectlayout_){nullptr}
    , decltype(_impl_.verticalcurvedlistlayout_){nullptr}
    , decltype(_impl_.horizontalpageslayout_){nullptr}
    , decltype(_impl_.menubeltlayout_){nullptr}
    , decltype(_impl_.matrixdynamiclayout_){nullptr}
    , decltype(_impl_.visibility_){nullptr}
  };
}

TLayout::~TLayout() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayout)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayout::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.triggeredslot_.~RepeatedPtrField();
  _impl_.useimport_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.staticlayout_;
  if (this != internal_default_instance()) delete _impl_.horizontallayout_;
  if (this != internal_default_instance()) delete _impl_.verticallayout_;
  if (this != internal_default_instance()) delete _impl_.horizontaldynamiclayout_;
  if (this != internal_default_instance()) delete _impl_.verticaldynamiclayout_;
  if (this != internal_default_instance()) delete _impl_.scenegraphlayout_;
  if (this != internal_default_instance()) delete _impl_.circlelayout_;
  if (this != internal_default_instance()) delete _impl_.horizontallistlayout_;
  if (this != internal_default_instance()) delete _impl_.verticallistlayout_;
  if (this != internal_default_instance()) delete _impl_.verticalrolllayout_;
  if (this != internal_default_instance()) delete _impl_.gridlayout_;
  if (this != internal_default_instance()) delete _impl_.matrixlayout_;
  if (this != internal_default_instance()) delete _impl_.scenegraphprojectlayout_;
  if (this != internal_default_instance()) delete _impl_.verticalcurvedlistlayout_;
  if (this != internal_default_instance()) delete _impl_.horizontalpageslayout_;
  if (this != internal_default_instance()) delete _impl_.menubeltlayout_;
  if (this != internal_default_instance()) delete _impl_.matrixdynamiclayout_;
  if (this != internal_default_instance()) delete _impl_.visibility_;
}

void TLayout::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayout::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayout)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.triggeredslot_.Clear();
  _impl_.useimport_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.staticlayout_ != nullptr);
      _impl_.staticlayout_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.horizontallayout_ != nullptr);
      _impl_.horizontallayout_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.verticallayout_ != nullptr);
      _impl_.verticallayout_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.horizontaldynamiclayout_ != nullptr);
      _impl_.horizontaldynamiclayout_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.verticaldynamiclayout_ != nullptr);
      _impl_.verticaldynamiclayout_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.scenegraphlayout_ != nullptr);
      _impl_.scenegraphlayout_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.circlelayout_ != nullptr);
      _impl_.circlelayout_->Clear();
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.horizontallistlayout_ != nullptr);
      _impl_.horizontallistlayout_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.verticallistlayout_ != nullptr);
      _impl_.verticallistlayout_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.verticalrolllayout_ != nullptr);
      _impl_.verticalrolllayout_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(_impl_.gridlayout_ != nullptr);
      _impl_.gridlayout_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(_impl_.matrixlayout_ != nullptr);
      _impl_.matrixlayout_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(_impl_.scenegraphprojectlayout_ != nullptr);
      _impl_.scenegraphprojectlayout_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      GOOGLE_DCHECK(_impl_.verticalcurvedlistlayout_ != nullptr);
      _impl_.verticalcurvedlistlayout_->Clear();
    }
    if (cached_has_bits & 0x00008000u) {
      GOOGLE_DCHECK(_impl_.horizontalpageslayout_ != nullptr);
      _impl_.horizontalpageslayout_->Clear();
    }
  }
  if (cached_has_bits & 0x00070000u) {
    if (cached_has_bits & 0x00010000u) {
      GOOGLE_DCHECK(_impl_.menubeltlayout_ != nullptr);
      _impl_.menubeltlayout_->Clear();
    }
    if (cached_has_bits & 0x00020000u) {
      GOOGLE_DCHECK(_impl_.matrixdynamiclayout_ != nullptr);
      _impl_.matrixdynamiclayout_->Clear();
    }
    if (cached_has_bits & 0x00040000u) {
      GOOGLE_DCHECK(_impl_.visibility_ != nullptr);
      _impl_.visibility_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayout::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutStatic staticLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_staticlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutHorizontal horizontalLayout = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_horizontallayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutVertical verticalLayout = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_verticallayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutHorizontalDynamic horizontalDynamicLayout = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_horizontaldynamiclayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutVerticalDynamic verticalDynamicLayout = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_verticaldynamiclayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutSceneGraph sceneGraphLayout = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_scenegraphlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutCircle circleLayout = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_circlelayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutHorizontalList horizontalListLayout = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_horizontallistlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutVerticalList verticalListLayout = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_verticallistlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutVerticalRoll verticalRollLayout = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_verticalrolllayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutGrid gridLayout = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_gridlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutMatrix matrixLayout = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_matrixlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutSceneGraphProject sceneGraphProjectLayout = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_scenegraphprojectlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutVerticalCurvedList verticalCurvedListLayout = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_verticalcurvedlistlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutHorizontalPages horizontalPagesLayout = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_horizontalpageslayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutMenuBelt menuBeltLayout = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_menubeltlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutMatrixDynamic matrixDynamicLayout = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_matrixdynamiclayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TTriggeredSlot triggeredSlot = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_triggeredslot(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding visibility = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_visibility(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .TIdentifier useImport = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_useimport(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<178>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayout::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayout)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutStatic staticLayout = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::staticlayout(this),
        _Internal::staticlayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutHorizontal horizontalLayout = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::horizontallayout(this),
        _Internal::horizontallayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutVertical verticalLayout = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::verticallayout(this),
        _Internal::verticallayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutHorizontalDynamic horizontalDynamicLayout = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::horizontaldynamiclayout(this),
        _Internal::horizontaldynamiclayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutVerticalDynamic verticalDynamicLayout = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::verticaldynamiclayout(this),
        _Internal::verticaldynamiclayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutSceneGraph sceneGraphLayout = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::scenegraphlayout(this),
        _Internal::scenegraphlayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutCircle circleLayout = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::circlelayout(this),
        _Internal::circlelayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutHorizontalList horizontalListLayout = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::horizontallistlayout(this),
        _Internal::horizontallistlayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutVerticalList verticalListLayout = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::verticallistlayout(this),
        _Internal::verticallistlayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutVerticalRoll verticalRollLayout = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::verticalrolllayout(this),
        _Internal::verticalrolllayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutGrid gridLayout = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::gridlayout(this),
        _Internal::gridlayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutMatrix matrixLayout = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::matrixlayout(this),
        _Internal::matrixlayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutSceneGraphProject sceneGraphProjectLayout = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::scenegraphprojectlayout(this),
        _Internal::scenegraphprojectlayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutVerticalCurvedList verticalCurvedListLayout = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, _Internal::verticalcurvedlistlayout(this),
        _Internal::verticalcurvedlistlayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutHorizontalPages horizontalPagesLayout = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::horizontalpageslayout(this),
        _Internal::horizontalpageslayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutMenuBelt menuBeltLayout = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(17, _Internal::menubeltlayout(this),
        _Internal::menubeltlayout(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayoutMatrixDynamic matrixDynamicLayout = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(18, _Internal::matrixdynamiclayout(this),
        _Internal::matrixdynamiclayout(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TTriggeredSlot triggeredSlot = 20;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_triggeredslot_size()); i < n; i++) {
    const auto& repfield = this->_internal_triggeredslot(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(20, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .TDataBinding visibility = 21;
  if (cached_has_bits & 0x00040000u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(21, _Internal::visibility(this),
        _Internal::visibility(this).GetCachedSize(), target, stream);
  }

  // repeated .TIdentifier useImport = 22;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_useimport_size()); i < n; i++) {
    const auto& repfield = this->_internal_useimport(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(22, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayout)
  return target;
}

size_t TLayout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayout)
  size_t total_size = 0;

  // required .TIdentifier identifier = 1;
  if (_internal_has_identifier()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TTriggeredSlot triggeredSlot = 20;
  total_size += 2UL * this->_internal_triggeredslot_size();
  for (const auto& msg : this->_impl_.triggeredslot_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .TIdentifier useImport = 22;
  total_size += 2UL * this->_internal_useimport_size();
  for (const auto& msg : this->_impl_.useimport_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000feu) {
    // optional .HmiWidget.TLayoutStatic staticLayout = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.staticlayout_);
    }

    // optional .HmiWidget.TLayoutHorizontal horizontalLayout = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.horizontallayout_);
    }

    // optional .HmiWidget.TLayoutVertical verticalLayout = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.verticallayout_);
    }

    // optional .HmiWidget.TLayoutHorizontalDynamic horizontalDynamicLayout = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.horizontaldynamiclayout_);
    }

    // optional .HmiWidget.TLayoutVerticalDynamic verticalDynamicLayout = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.verticaldynamiclayout_);
    }

    // optional .HmiWidget.TLayoutSceneGraph sceneGraphLayout = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scenegraphlayout_);
    }

    // optional .HmiWidget.TLayoutCircle circleLayout = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.circlelayout_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .HmiWidget.TLayoutHorizontalList horizontalListLayout = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.horizontallistlayout_);
    }

    // optional .HmiWidget.TLayoutVerticalList verticalListLayout = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.verticallistlayout_);
    }

    // optional .HmiWidget.TLayoutVerticalRoll verticalRollLayout = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.verticalrolllayout_);
    }

    // optional .HmiWidget.TLayoutGrid gridLayout = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.gridlayout_);
    }

    // optional .HmiWidget.TLayoutMatrix matrixLayout = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.matrixlayout_);
    }

    // optional .HmiWidget.TLayoutSceneGraphProject sceneGraphProjectLayout = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scenegraphprojectlayout_);
    }

    // optional .HmiWidget.TLayoutVerticalCurvedList verticalCurvedListLayout = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.verticalcurvedlistlayout_);
    }

    // optional .HmiWidget.TLayoutHorizontalPages horizontalPagesLayout = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.horizontalpageslayout_);
    }

  }
  if (cached_has_bits & 0x00070000u) {
    // optional .HmiWidget.TLayoutMenuBelt menuBeltLayout = 17;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.menubeltlayout_);
    }

    // optional .HmiWidget.TLayoutMatrixDynamic matrixDynamicLayout = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.matrixdynamiclayout_);
    }

    // optional .TDataBinding visibility = 21;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.visibility_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayout::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayout::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayout::GetClassData() const { return &_class_data_; }


void TLayout::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayout*>(&to_msg);
  auto& from = static_cast<const TLayout&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayout)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.triggeredslot_.MergeFrom(from._impl_.triggeredslot_);
  _this->_impl_.useimport_.MergeFrom(from._impl_.useimport_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_staticlayout()->::HmiWidget::TLayoutStatic::MergeFrom(
          from._internal_staticlayout());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_horizontallayout()->::HmiWidget::TLayoutHorizontal::MergeFrom(
          from._internal_horizontallayout());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_verticallayout()->::HmiWidget::TLayoutVertical::MergeFrom(
          from._internal_verticallayout());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_horizontaldynamiclayout()->::HmiWidget::TLayoutHorizontalDynamic::MergeFrom(
          from._internal_horizontaldynamiclayout());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_verticaldynamiclayout()->::HmiWidget::TLayoutVerticalDynamic::MergeFrom(
          from._internal_verticaldynamiclayout());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_scenegraphlayout()->::HmiWidget::TLayoutSceneGraph::MergeFrom(
          from._internal_scenegraphlayout());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_circlelayout()->::HmiWidget::TLayoutCircle::MergeFrom(
          from._internal_circlelayout());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_horizontallistlayout()->::HmiWidget::TLayoutHorizontalList::MergeFrom(
          from._internal_horizontallistlayout());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_verticallistlayout()->::HmiWidget::TLayoutVerticalList::MergeFrom(
          from._internal_verticallistlayout());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_verticalrolllayout()->::HmiWidget::TLayoutVerticalRoll::MergeFrom(
          from._internal_verticalrolllayout());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_gridlayout()->::HmiWidget::TLayoutGrid::MergeFrom(
          from._internal_gridlayout());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_matrixlayout()->::HmiWidget::TLayoutMatrix::MergeFrom(
          from._internal_matrixlayout());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_scenegraphprojectlayout()->::HmiWidget::TLayoutSceneGraphProject::MergeFrom(
          from._internal_scenegraphprojectlayout());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_verticalcurvedlistlayout()->::HmiWidget::TLayoutVerticalCurvedList::MergeFrom(
          from._internal_verticalcurvedlistlayout());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_internal_mutable_horizontalpageslayout()->::HmiWidget::TLayoutHorizontalPages::MergeFrom(
          from._internal_horizontalpageslayout());
    }
  }
  if (cached_has_bits & 0x00070000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_internal_mutable_menubeltlayout()->::HmiWidget::TLayoutMenuBelt::MergeFrom(
          from._internal_menubeltlayout());
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_internal_mutable_matrixdynamiclayout()->::HmiWidget::TLayoutMatrixDynamic::MergeFrom(
          from._internal_matrixdynamiclayout());
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_internal_mutable_visibility()->::TDataBinding::MergeFrom(
          from._internal_visibility());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayout::CopyFrom(const TLayout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayout::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.triggeredslot_))
    return false;
  if (_internal_has_staticlayout()) {
    if (!_impl_.staticlayout_->IsInitialized()) return false;
  }
  if (_internal_has_horizontallayout()) {
    if (!_impl_.horizontallayout_->IsInitialized()) return false;
  }
  if (_internal_has_verticallayout()) {
    if (!_impl_.verticallayout_->IsInitialized()) return false;
  }
  if (_internal_has_horizontaldynamiclayout()) {
    if (!_impl_.horizontaldynamiclayout_->IsInitialized()) return false;
  }
  if (_internal_has_verticaldynamiclayout()) {
    if (!_impl_.verticaldynamiclayout_->IsInitialized()) return false;
  }
  if (_internal_has_scenegraphlayout()) {
    if (!_impl_.scenegraphlayout_->IsInitialized()) return false;
  }
  if (_internal_has_circlelayout()) {
    if (!_impl_.circlelayout_->IsInitialized()) return false;
  }
  if (_internal_has_horizontallistlayout()) {
    if (!_impl_.horizontallistlayout_->IsInitialized()) return false;
  }
  if (_internal_has_verticallistlayout()) {
    if (!_impl_.verticallistlayout_->IsInitialized()) return false;
  }
  if (_internal_has_verticalrolllayout()) {
    if (!_impl_.verticalrolllayout_->IsInitialized()) return false;
  }
  if (_internal_has_gridlayout()) {
    if (!_impl_.gridlayout_->IsInitialized()) return false;
  }
  if (_internal_has_matrixlayout()) {
    if (!_impl_.matrixlayout_->IsInitialized()) return false;
  }
  if (_internal_has_scenegraphprojectlayout()) {
    if (!_impl_.scenegraphprojectlayout_->IsInitialized()) return false;
  }
  if (_internal_has_verticalcurvedlistlayout()) {
    if (!_impl_.verticalcurvedlistlayout_->IsInitialized()) return false;
  }
  if (_internal_has_horizontalpageslayout()) {
    if (!_impl_.horizontalpageslayout_->IsInitialized()) return false;
  }
  if (_internal_has_menubeltlayout()) {
    if (!_impl_.menubeltlayout_->IsInitialized()) return false;
  }
  if (_internal_has_matrixdynamiclayout()) {
    if (!_impl_.matrixdynamiclayout_->IsInitialized()) return false;
  }
  if (_internal_has_visibility()) {
    if (!_impl_.visibility_->IsInitialized()) return false;
  }
  return true;
}

void TLayout::InternalSwap(TLayout* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.triggeredslot_.InternalSwap(&other->_impl_.triggeredslot_);
  _impl_.useimport_.InternalSwap(&other->_impl_.useimport_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayout, _impl_.visibility_)
      + sizeof(TLayout::_impl_.visibility_)
      - PROTOBUF_FIELD_OFFSET(TLayout, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayout::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[58]);
}

// ===================================================================

class TLayoutStaticBase::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutStaticBase>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutStaticBase, _impl_._has_bits_);
  static const ::TDataBinding& leftmargin(const TLayoutStaticBase* msg);
  static void set_has_leftmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& rightmargin(const TLayoutStaticBase* msg);
  static void set_has_rightmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& topmargin(const TLayoutStaticBase* msg);
  static void set_has_topmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& bottommargin(const TLayoutStaticBase* msg);
  static void set_has_bottommargin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::TDataBinding&
TLayoutStaticBase::_Internal::leftmargin(const TLayoutStaticBase* msg) {
  return *msg->_impl_.leftmargin_;
}
const ::TDataBinding&
TLayoutStaticBase::_Internal::rightmargin(const TLayoutStaticBase* msg) {
  return *msg->_impl_.rightmargin_;
}
const ::TDataBinding&
TLayoutStaticBase::_Internal::topmargin(const TLayoutStaticBase* msg) {
  return *msg->_impl_.topmargin_;
}
const ::TDataBinding&
TLayoutStaticBase::_Internal::bottommargin(const TLayoutStaticBase* msg) {
  return *msg->_impl_.bottommargin_;
}
void TLayoutStaticBase::clear_leftmargin() {
  if (_impl_.leftmargin_ != nullptr) _impl_.leftmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutStaticBase::clear_rightmargin() {
  if (_impl_.rightmargin_ != nullptr) _impl_.rightmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TLayoutStaticBase::clear_topmargin() {
  if (_impl_.topmargin_ != nullptr) _impl_.topmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutStaticBase::clear_bottommargin() {
  if (_impl_.bottommargin_ != nullptr) _impl_.bottommargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
TLayoutStaticBase::TLayoutStaticBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutStaticBase)
}
TLayoutStaticBase::TLayoutStaticBase(const TLayoutStaticBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutStaticBase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_leftmargin()) {
    _this->_impl_.leftmargin_ = new ::TDataBinding(*from._impl_.leftmargin_);
  }
  if (from._internal_has_rightmargin()) {
    _this->_impl_.rightmargin_ = new ::TDataBinding(*from._impl_.rightmargin_);
  }
  if (from._internal_has_topmargin()) {
    _this->_impl_.topmargin_ = new ::TDataBinding(*from._impl_.topmargin_);
  }
  if (from._internal_has_bottommargin()) {
    _this->_impl_.bottommargin_ = new ::TDataBinding(*from._impl_.bottommargin_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutStaticBase)
}

inline void TLayoutStaticBase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
  };
}

TLayoutStaticBase::~TLayoutStaticBase() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutStaticBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutStaticBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.leftmargin_;
  if (this != internal_default_instance()) delete _impl_.rightmargin_;
  if (this != internal_default_instance()) delete _impl_.topmargin_;
  if (this != internal_default_instance()) delete _impl_.bottommargin_;
}

void TLayoutStaticBase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutStaticBase::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutStaticBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.leftmargin_ != nullptr);
      _impl_.leftmargin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.rightmargin_ != nullptr);
      _impl_.rightmargin_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.topmargin_ != nullptr);
      _impl_.topmargin_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.bottommargin_ != nullptr);
      _impl_.bottommargin_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutStaticBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding leftMargin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_leftmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rightMargin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rightmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding topMargin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_topmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding bottomMargin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_bottommargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutStaticBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutStaticBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding leftMargin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::leftmargin(this),
        _Internal::leftmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rightMargin = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rightmargin(this),
        _Internal::rightmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding topMargin = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::topmargin(this),
        _Internal::topmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding bottomMargin = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::bottommargin(this),
        _Internal::bottommargin(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutStaticBase)
  return target;
}

size_t TLayoutStaticBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutStaticBase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .TDataBinding leftMargin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.leftmargin_);
    }

    // optional .TDataBinding rightMargin = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rightmargin_);
    }

    // optional .TDataBinding topMargin = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.topmargin_);
    }

    // optional .TDataBinding bottomMargin = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bottommargin_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutStaticBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutStaticBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutStaticBase::GetClassData() const { return &_class_data_; }


void TLayoutStaticBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutStaticBase*>(&to_msg);
  auto& from = static_cast<const TLayoutStaticBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutStaticBase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_leftmargin()->::TDataBinding::MergeFrom(
          from._internal_leftmargin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_rightmargin()->::TDataBinding::MergeFrom(
          from._internal_rightmargin());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_topmargin()->::TDataBinding::MergeFrom(
          from._internal_topmargin());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_bottommargin()->::TDataBinding::MergeFrom(
          from._internal_bottommargin());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutStaticBase::CopyFrom(const TLayoutStaticBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutStaticBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutStaticBase::IsInitialized() const {
  if (_internal_has_leftmargin()) {
    if (!_impl_.leftmargin_->IsInitialized()) return false;
  }
  if (_internal_has_rightmargin()) {
    if (!_impl_.rightmargin_->IsInitialized()) return false;
  }
  if (_internal_has_topmargin()) {
    if (!_impl_.topmargin_->IsInitialized()) return false;
  }
  if (_internal_has_bottommargin()) {
    if (!_impl_.bottommargin_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutStaticBase::InternalSwap(TLayoutStaticBase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutStaticBase, _impl_.bottommargin_)
      + sizeof(TLayoutStaticBase::_impl_.bottommargin_)
      - PROTOBUF_FIELD_OFFSET(TLayoutStaticBase, _impl_.leftmargin_)>(
          reinterpret_cast<char*>(&_impl_.leftmargin_),
          reinterpret_cast<char*>(&other->_impl_.leftmargin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutStaticBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[59]);
}

// ===================================================================

class TLayoutStatic_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutStatic_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutStatic_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutStatic_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutStaticElement& element(const TLayoutStatic_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutStatic_TTemplate::_Internal::identifier(const TLayoutStatic_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutStaticElement&
TLayoutStatic_TTemplate::_Internal::element(const TLayoutStatic_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutStatic_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutStatic_TTemplate::TLayoutStatic_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutStatic.TTemplate)
}
TLayoutStatic_TTemplate::TLayoutStatic_TTemplate(const TLayoutStatic_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutStatic_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutStaticElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutStatic.TTemplate)
}

inline void TLayoutStatic_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutStatic_TTemplate::~TLayoutStatic_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutStatic.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutStatic_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutStatic_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutStatic_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutStatic.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutStatic_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutStaticElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutStatic_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutStatic.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutStaticElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutStatic.TTemplate)
  return target;
}

size_t TLayoutStatic_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutStatic.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutStaticElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutStatic_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutStatic.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutStaticElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutStatic_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutStatic_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutStatic_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutStatic_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutStatic_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutStatic_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutStatic.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutStaticElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutStatic_TTemplate::CopyFrom(const TLayoutStatic_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutStatic.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutStatic_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutStatic_TTemplate::InternalSwap(TLayoutStatic_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutStatic_TTemplate, _impl_.element_)
      + sizeof(TLayoutStatic_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutStatic_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutStatic_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[60]);
}

// ===================================================================

class TLayoutStatic::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutStatic>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutStatic, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutStaticBase& base(const TLayoutStatic* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::HmiWidget::TLayoutStaticBase&
TLayoutStatic::_Internal::base(const TLayoutStatic* msg) {
  return *msg->_impl_.base_;
}
TLayoutStatic::TLayoutStatic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutStatic)
}
TLayoutStatic::TLayoutStatic(const TLayoutStatic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutStatic* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutStaticBase(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutStatic)
}

inline void TLayoutStatic::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutStatic::~TLayoutStatic() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutStatic)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutStatic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutStatic::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutStatic::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutStatic)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutStatic::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .HmiWidget.TLayoutStaticElement element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutStatic.TTemplate elementTemplate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayoutStaticBase base = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutStatic::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutStatic)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutStaticElement element = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutStatic.TTemplate elementTemplate = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HmiWidget.TLayoutStaticBase base = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutStatic)
  return target;
}

size_t TLayoutStatic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutStatic)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutStaticElement element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutStatic.TTemplate elementTemplate = 2;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .HmiWidget.TLayoutStaticBase base = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutStatic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutStatic::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutStatic::GetClassData() const { return &_class_data_; }


void TLayoutStatic::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutStatic*>(&to_msg);
  auto& from = static_cast<const TLayoutStatic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutStatic)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::TLayoutStaticBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutStatic::CopyFrom(const TLayoutStatic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutStatic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutStatic::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutStatic::InternalSwap(TLayoutStatic* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutStatic::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[61]);
}

// ===================================================================

class TLayoutStaticElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutStaticElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutStaticElement, _impl_._has_bits_);
  static const ::TIdentifier& childidentifier(const TLayoutStaticElement* msg);
  static void set_has_childidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayout& nestedlayout(const TLayoutStaticElement* msg);
  static void set_has_nestedlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& size(const TLayoutStaticElement* msg);
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& rotation(const TLayoutStaticElement* msg);
  static void set_has_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& position(const TLayoutStaticElement* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& alignment(const TLayoutStaticElement* msg);
  static void set_has_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& sizepolicy(const TLayoutStaticElement* msg);
  static void set_has_sizepolicy(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::TIdentifier&
TLayoutStaticElement::_Internal::childidentifier(const TLayoutStaticElement* msg) {
  return *msg->_impl_.childidentifier_;
}
const ::HmiWidget::TLayout&
TLayoutStaticElement::_Internal::nestedlayout(const TLayoutStaticElement* msg) {
  return *msg->_impl_.nestedlayout_;
}
const ::TDataBinding&
TLayoutStaticElement::_Internal::size(const TLayoutStaticElement* msg) {
  return *msg->_impl_.size_;
}
const ::TDataBinding&
TLayoutStaticElement::_Internal::rotation(const TLayoutStaticElement* msg) {
  return *msg->_impl_.rotation_;
}
const ::TDataBinding&
TLayoutStaticElement::_Internal::position(const TLayoutStaticElement* msg) {
  return *msg->_impl_.position_;
}
const ::TDataBinding&
TLayoutStaticElement::_Internal::alignment(const TLayoutStaticElement* msg) {
  return *msg->_impl_.alignment_;
}
const ::TDataBinding&
TLayoutStaticElement::_Internal::sizepolicy(const TLayoutStaticElement* msg) {
  return *msg->_impl_.sizepolicy_;
}
void TLayoutStaticElement::clear_childidentifier() {
  if (_impl_.childidentifier_ != nullptr) _impl_.childidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutStaticElement::clear_size() {
  if (_impl_.size_ != nullptr) _impl_.size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutStaticElement::clear_rotation() {
  if (_impl_.rotation_ != nullptr) _impl_.rotation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutStaticElement::clear_position() {
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutStaticElement::clear_alignment() {
  if (_impl_.alignment_ != nullptr) _impl_.alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TLayoutStaticElement::clear_sizepolicy() {
  if (_impl_.sizepolicy_ != nullptr) _impl_.sizepolicy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
TLayoutStaticElement::TLayoutStaticElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutStaticElement)
}
TLayoutStaticElement::TLayoutStaticElement(const TLayoutStaticElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutStaticElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.rotation_){nullptr}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_childidentifier()) {
    _this->_impl_.childidentifier_ = new ::TIdentifier(*from._impl_.childidentifier_);
  }
  if (from._internal_has_nestedlayout()) {
    _this->_impl_.nestedlayout_ = new ::HmiWidget::TLayout(*from._impl_.nestedlayout_);
  }
  if (from._internal_has_size()) {
    _this->_impl_.size_ = new ::TDataBinding(*from._impl_.size_);
  }
  if (from._internal_has_rotation()) {
    _this->_impl_.rotation_ = new ::TDataBinding(*from._impl_.rotation_);
  }
  if (from._internal_has_position()) {
    _this->_impl_.position_ = new ::TDataBinding(*from._impl_.position_);
  }
  if (from._internal_has_alignment()) {
    _this->_impl_.alignment_ = new ::TDataBinding(*from._impl_.alignment_);
  }
  if (from._internal_has_sizepolicy()) {
    _this->_impl_.sizepolicy_ = new ::TDataBinding(*from._impl_.sizepolicy_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutStaticElement)
}

inline void TLayoutStaticElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.rotation_){nullptr}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
  };
}

TLayoutStaticElement::~TLayoutStaticElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutStaticElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutStaticElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.childidentifier_;
  if (this != internal_default_instance()) delete _impl_.nestedlayout_;
  if (this != internal_default_instance()) delete _impl_.size_;
  if (this != internal_default_instance()) delete _impl_.rotation_;
  if (this != internal_default_instance()) delete _impl_.position_;
  if (this != internal_default_instance()) delete _impl_.alignment_;
  if (this != internal_default_instance()) delete _impl_.sizepolicy_;
}

void TLayoutStaticElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutStaticElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutStaticElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.childidentifier_ != nullptr);
      _impl_.childidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.nestedlayout_ != nullptr);
      _impl_.nestedlayout_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.size_ != nullptr);
      _impl_.size_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.rotation_ != nullptr);
      _impl_.rotation_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.alignment_ != nullptr);
      _impl_.alignment_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.sizepolicy_ != nullptr);
      _impl_.sizepolicy_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutStaticElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier childIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_childidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayout nestedLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nestedlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rotation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_rotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding position = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding alignment = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding sizePolicy = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_sizepolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutStaticElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutStaticElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier childIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::childidentifier(this),
        _Internal::childidentifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayout nestedLayout = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::nestedlayout(this),
        _Internal::nestedlayout(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::size(this),
        _Internal::size(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rotation = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::rotation(this),
        _Internal::rotation(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding position = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding alignment = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::alignment(this),
        _Internal::alignment(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding sizePolicy = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::sizepolicy(this),
        _Internal::sizepolicy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutStaticElement)
  return target;
}

size_t TLayoutStaticElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutStaticElement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .TIdentifier childIdentifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childidentifier_);
    }

    // optional .HmiWidget.TLayout nestedLayout = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nestedlayout_);
    }

    // optional .TDataBinding size = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.size_);
    }

    // optional .TDataBinding rotation = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rotation_);
    }

    // optional .TDataBinding position = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.position_);
    }

    // optional .TDataBinding alignment = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.alignment_);
    }

    // optional .TDataBinding sizePolicy = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sizepolicy_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutStaticElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutStaticElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutStaticElement::GetClassData() const { return &_class_data_; }


void TLayoutStaticElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutStaticElement*>(&to_msg);
  auto& from = static_cast<const TLayoutStaticElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutStaticElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_childidentifier()->::TIdentifier::MergeFrom(
          from._internal_childidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nestedlayout()->::HmiWidget::TLayout::MergeFrom(
          from._internal_nestedlayout());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_size()->::TDataBinding::MergeFrom(
          from._internal_size());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_rotation()->::TDataBinding::MergeFrom(
          from._internal_rotation());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_position()->::TDataBinding::MergeFrom(
          from._internal_position());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_alignment()->::TDataBinding::MergeFrom(
          from._internal_alignment());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_sizepolicy()->::TDataBinding::MergeFrom(
          from._internal_sizepolicy());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutStaticElement::CopyFrom(const TLayoutStaticElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutStaticElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutStaticElement::IsInitialized() const {
  if (_internal_has_nestedlayout()) {
    if (!_impl_.nestedlayout_->IsInitialized()) return false;
  }
  if (_internal_has_size()) {
    if (!_impl_.size_->IsInitialized()) return false;
  }
  if (_internal_has_rotation()) {
    if (!_impl_.rotation_->IsInitialized()) return false;
  }
  if (_internal_has_position()) {
    if (!_impl_.position_->IsInitialized()) return false;
  }
  if (_internal_has_alignment()) {
    if (!_impl_.alignment_->IsInitialized()) return false;
  }
  if (_internal_has_sizepolicy()) {
    if (!_impl_.sizepolicy_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutStaticElement::InternalSwap(TLayoutStaticElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutStaticElement, _impl_.sizepolicy_)
      + sizeof(TLayoutStaticElement::_impl_.sizepolicy_)
      - PROTOBUF_FIELD_OFFSET(TLayoutStaticElement, _impl_.childidentifier_)>(
          reinterpret_cast<char*>(&_impl_.childidentifier_),
          reinterpret_cast<char*>(&other->_impl_.childidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutStaticElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[62]);
}

// ===================================================================

class TLayoutHorizontal_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHorizontal_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHorizontal_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutHorizontal_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutHorizontalElement& element(const TLayoutHorizontal_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutHorizontal_TTemplate::_Internal::identifier(const TLayoutHorizontal_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutHorizontalElement&
TLayoutHorizontal_TTemplate::_Internal::element(const TLayoutHorizontal_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutHorizontal_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutHorizontal_TTemplate::TLayoutHorizontal_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHorizontal.TTemplate)
}
TLayoutHorizontal_TTemplate::TLayoutHorizontal_TTemplate(const TLayoutHorizontal_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHorizontal_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutHorizontalElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHorizontal.TTemplate)
}

inline void TLayoutHorizontal_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutHorizontal_TTemplate::~TLayoutHorizontal_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHorizontal.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHorizontal_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutHorizontal_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHorizontal_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHorizontal.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHorizontal_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutHorizontalElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHorizontal_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHorizontal.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutHorizontalElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHorizontal.TTemplate)
  return target;
}

size_t TLayoutHorizontal_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutHorizontal.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutHorizontalElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutHorizontal_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHorizontal.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutHorizontalElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHorizontal_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHorizontal_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHorizontal_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutHorizontal_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHorizontal_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutHorizontal_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHorizontal.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutHorizontalElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHorizontal_TTemplate::CopyFrom(const TLayoutHorizontal_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHorizontal.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHorizontal_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHorizontal_TTemplate::InternalSwap(TLayoutHorizontal_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutHorizontal_TTemplate, _impl_.element_)
      + sizeof(TLayoutHorizontal_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutHorizontal_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHorizontal_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[63]);
}

// ===================================================================

class TLayoutHorizontal::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHorizontal>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHorizontal, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutHVBase& base(const TLayoutHorizontal* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::TLayoutHVBase&
TLayoutHorizontal::_Internal::base(const TLayoutHorizontal* msg) {
  return *msg->_impl_.base_;
}
TLayoutHorizontal::TLayoutHorizontal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHorizontal)
}
TLayoutHorizontal::TLayoutHorizontal(const TLayoutHorizontal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHorizontal* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutHVBase(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHorizontal)
}

inline void TLayoutHorizontal::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutHorizontal::~TLayoutHorizontal() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHorizontal)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHorizontal::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutHorizontal::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHorizontal::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHorizontal)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHorizontal::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.TLayoutHVBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutHorizontalElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutHorizontal.TTemplate elementTemplate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHorizontal::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHorizontal)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.TLayoutHVBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutHorizontalElement element = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutHorizontal.TTemplate elementTemplate = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHorizontal)
  return target;
}

size_t TLayoutHorizontal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHorizontal)
  size_t total_size = 0;

  // required .HmiWidget.TLayoutHVBase base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutHorizontalElement element = 2;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutHorizontal.TTemplate elementTemplate = 3;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHorizontal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHorizontal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHorizontal::GetClassData() const { return &_class_data_; }


void TLayoutHorizontal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHorizontal*>(&to_msg);
  auto& from = static_cast<const TLayoutHorizontal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHorizontal)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::TLayoutHVBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHorizontal::CopyFrom(const TLayoutHorizontal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHorizontal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHorizontal::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHorizontal::InternalSwap(TLayoutHorizontal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHorizontal::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[64]);
}

// ===================================================================

class TLayoutVertical_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVertical_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVertical_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutVertical_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutVerticalElement& element(const TLayoutVertical_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutVertical_TTemplate::_Internal::identifier(const TLayoutVertical_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutVerticalElement&
TLayoutVertical_TTemplate::_Internal::element(const TLayoutVertical_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutVertical_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutVertical_TTemplate::TLayoutVertical_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVertical.TTemplate)
}
TLayoutVertical_TTemplate::TLayoutVertical_TTemplate(const TLayoutVertical_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVertical_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutVerticalElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVertical.TTemplate)
}

inline void TLayoutVertical_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutVertical_TTemplate::~TLayoutVertical_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVertical.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVertical_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutVertical_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVertical_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVertical.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVertical_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutVerticalElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVertical_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVertical.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutVerticalElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVertical.TTemplate)
  return target;
}

size_t TLayoutVertical_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutVertical.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutVerticalElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutVertical_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVertical.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutVerticalElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVertical_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVertical_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVertical_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutVertical_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVertical_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutVertical_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVertical.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutVerticalElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVertical_TTemplate::CopyFrom(const TLayoutVertical_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVertical.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVertical_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVertical_TTemplate::InternalSwap(TLayoutVertical_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutVertical_TTemplate, _impl_.element_)
      + sizeof(TLayoutVertical_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutVertical_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVertical_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[65]);
}

// ===================================================================

class TLayoutVertical::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVertical>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVertical, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutHVBase& base(const TLayoutVertical* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::TLayoutHVBase&
TLayoutVertical::_Internal::base(const TLayoutVertical* msg) {
  return *msg->_impl_.base_;
}
TLayoutVertical::TLayoutVertical(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVertical)
}
TLayoutVertical::TLayoutVertical(const TLayoutVertical& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVertical* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutHVBase(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVertical)
}

inline void TLayoutVertical::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutVertical::~TLayoutVertical() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVertical)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVertical::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutVertical::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVertical::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVertical)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVertical::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.TLayoutHVBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutVerticalElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutVertical.TTemplate elementTemplate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVertical::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVertical)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.TLayoutHVBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutVerticalElement element = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutVertical.TTemplate elementTemplate = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVertical)
  return target;
}

size_t TLayoutVertical::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVertical)
  size_t total_size = 0;

  // required .HmiWidget.TLayoutHVBase base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutVerticalElement element = 2;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutVertical.TTemplate elementTemplate = 3;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVertical::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVertical::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVertical::GetClassData() const { return &_class_data_; }


void TLayoutVertical::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVertical*>(&to_msg);
  auto& from = static_cast<const TLayoutVertical&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVertical)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::TLayoutHVBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVertical::CopyFrom(const TLayoutVertical& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVertical)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVertical::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVertical::InternalSwap(TLayoutVertical* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVertical::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[66]);
}

// ===================================================================

class TLayoutHorizontalDynamic_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHorizontalDynamic_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHorizontalDynamic_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutHorizontalDynamic_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutHorizontalDynamicElement& element(const TLayoutHorizontalDynamic_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutHorizontalDynamic_TTemplate::_Internal::identifier(const TLayoutHorizontalDynamic_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutHorizontalDynamicElement&
TLayoutHorizontalDynamic_TTemplate::_Internal::element(const TLayoutHorizontalDynamic_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutHorizontalDynamic_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutHorizontalDynamic_TTemplate::TLayoutHorizontalDynamic_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHorizontalDynamic.TTemplate)
}
TLayoutHorizontalDynamic_TTemplate::TLayoutHorizontalDynamic_TTemplate(const TLayoutHorizontalDynamic_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHorizontalDynamic_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutHorizontalDynamicElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHorizontalDynamic.TTemplate)
}

inline void TLayoutHorizontalDynamic_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutHorizontalDynamic_TTemplate::~TLayoutHorizontalDynamic_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHorizontalDynamic.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHorizontalDynamic_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutHorizontalDynamic_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHorizontalDynamic_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHorizontalDynamic.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHorizontalDynamic_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutHorizontalDynamicElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHorizontalDynamic_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHorizontalDynamic.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutHorizontalDynamicElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHorizontalDynamic.TTemplate)
  return target;
}

size_t TLayoutHorizontalDynamic_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutHorizontalDynamic.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutHorizontalDynamicElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutHorizontalDynamic_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHorizontalDynamic.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutHorizontalDynamicElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHorizontalDynamic_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHorizontalDynamic_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHorizontalDynamic_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutHorizontalDynamic_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHorizontalDynamic_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutHorizontalDynamic_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHorizontalDynamic.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutHorizontalDynamicElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHorizontalDynamic_TTemplate::CopyFrom(const TLayoutHorizontalDynamic_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHorizontalDynamic.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHorizontalDynamic_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHorizontalDynamic_TTemplate::InternalSwap(TLayoutHorizontalDynamic_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutHorizontalDynamic_TTemplate, _impl_.element_)
      + sizeof(TLayoutHorizontalDynamic_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutHorizontalDynamic_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHorizontalDynamic_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[67]);
}

// ===================================================================

class TLayoutHorizontalDynamic::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHorizontalDynamic>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHorizontalDynamic, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutHVBase& base(const TLayoutHorizontalDynamic* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::TLayoutHVBase&
TLayoutHorizontalDynamic::_Internal::base(const TLayoutHorizontalDynamic* msg) {
  return *msg->_impl_.base_;
}
TLayoutHorizontalDynamic::TLayoutHorizontalDynamic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHorizontalDynamic)
}
TLayoutHorizontalDynamic::TLayoutHorizontalDynamic(const TLayoutHorizontalDynamic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHorizontalDynamic* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutHVBase(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHorizontalDynamic)
}

inline void TLayoutHorizontalDynamic::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutHorizontalDynamic::~TLayoutHorizontalDynamic() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHorizontalDynamic)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHorizontalDynamic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutHorizontalDynamic::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHorizontalDynamic::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHorizontalDynamic)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHorizontalDynamic::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.TLayoutHVBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutHorizontalDynamicElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutHorizontalDynamic.TTemplate elementTemplate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHorizontalDynamic::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHorizontalDynamic)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.TLayoutHVBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutHorizontalDynamicElement element = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutHorizontalDynamic.TTemplate elementTemplate = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHorizontalDynamic)
  return target;
}

size_t TLayoutHorizontalDynamic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHorizontalDynamic)
  size_t total_size = 0;

  // required .HmiWidget.TLayoutHVBase base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutHorizontalDynamicElement element = 2;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutHorizontalDynamic.TTemplate elementTemplate = 3;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHorizontalDynamic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHorizontalDynamic::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHorizontalDynamic::GetClassData() const { return &_class_data_; }


void TLayoutHorizontalDynamic::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHorizontalDynamic*>(&to_msg);
  auto& from = static_cast<const TLayoutHorizontalDynamic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHorizontalDynamic)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::TLayoutHVBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHorizontalDynamic::CopyFrom(const TLayoutHorizontalDynamic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHorizontalDynamic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHorizontalDynamic::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHorizontalDynamic::InternalSwap(TLayoutHorizontalDynamic* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHorizontalDynamic::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[68]);
}

// ===================================================================

class TLayoutVerticalDynamic_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVerticalDynamic_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVerticalDynamic_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutVerticalDynamic_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutVerticalDynamicElement& element(const TLayoutVerticalDynamic_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutVerticalDynamic_TTemplate::_Internal::identifier(const TLayoutVerticalDynamic_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutVerticalDynamicElement&
TLayoutVerticalDynamic_TTemplate::_Internal::element(const TLayoutVerticalDynamic_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutVerticalDynamic_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutVerticalDynamic_TTemplate::TLayoutVerticalDynamic_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVerticalDynamic.TTemplate)
}
TLayoutVerticalDynamic_TTemplate::TLayoutVerticalDynamic_TTemplate(const TLayoutVerticalDynamic_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVerticalDynamic_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutVerticalDynamicElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVerticalDynamic.TTemplate)
}

inline void TLayoutVerticalDynamic_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutVerticalDynamic_TTemplate::~TLayoutVerticalDynamic_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVerticalDynamic.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVerticalDynamic_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutVerticalDynamic_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVerticalDynamic_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVerticalDynamic.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVerticalDynamic_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutVerticalDynamicElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVerticalDynamic_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVerticalDynamic.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutVerticalDynamicElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVerticalDynamic.TTemplate)
  return target;
}

size_t TLayoutVerticalDynamic_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutVerticalDynamic.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutVerticalDynamicElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutVerticalDynamic_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVerticalDynamic.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutVerticalDynamicElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVerticalDynamic_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVerticalDynamic_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVerticalDynamic_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutVerticalDynamic_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVerticalDynamic_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutVerticalDynamic_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVerticalDynamic.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutVerticalDynamicElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVerticalDynamic_TTemplate::CopyFrom(const TLayoutVerticalDynamic_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVerticalDynamic.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVerticalDynamic_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVerticalDynamic_TTemplate::InternalSwap(TLayoutVerticalDynamic_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutVerticalDynamic_TTemplate, _impl_.element_)
      + sizeof(TLayoutVerticalDynamic_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutVerticalDynamic_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVerticalDynamic_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[69]);
}

// ===================================================================

class TLayoutVerticalDynamic::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVerticalDynamic>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVerticalDynamic, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutHVBase& base(const TLayoutVerticalDynamic* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::TLayoutHVBase&
TLayoutVerticalDynamic::_Internal::base(const TLayoutVerticalDynamic* msg) {
  return *msg->_impl_.base_;
}
TLayoutVerticalDynamic::TLayoutVerticalDynamic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVerticalDynamic)
}
TLayoutVerticalDynamic::TLayoutVerticalDynamic(const TLayoutVerticalDynamic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVerticalDynamic* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutHVBase(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVerticalDynamic)
}

inline void TLayoutVerticalDynamic::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutVerticalDynamic::~TLayoutVerticalDynamic() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVerticalDynamic)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVerticalDynamic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutVerticalDynamic::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVerticalDynamic::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVerticalDynamic)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVerticalDynamic::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.TLayoutHVBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutVerticalDynamicElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutVerticalDynamic.TTemplate elementTemplate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVerticalDynamic::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVerticalDynamic)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.TLayoutHVBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutVerticalDynamicElement element = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutVerticalDynamic.TTemplate elementTemplate = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVerticalDynamic)
  return target;
}

size_t TLayoutVerticalDynamic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVerticalDynamic)
  size_t total_size = 0;

  // required .HmiWidget.TLayoutHVBase base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutVerticalDynamicElement element = 2;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutVerticalDynamic.TTemplate elementTemplate = 3;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVerticalDynamic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVerticalDynamic::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVerticalDynamic::GetClassData() const { return &_class_data_; }


void TLayoutVerticalDynamic::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVerticalDynamic*>(&to_msg);
  auto& from = static_cast<const TLayoutVerticalDynamic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVerticalDynamic)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::TLayoutHVBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVerticalDynamic::CopyFrom(const TLayoutVerticalDynamic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVerticalDynamic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVerticalDynamic::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVerticalDynamic::InternalSwap(TLayoutVerticalDynamic* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVerticalDynamic::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[70]);
}

// ===================================================================

class TLayoutHorizontalList_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHorizontalList_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHorizontalList_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutHorizontalList_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutHorizontalListElement& element(const TLayoutHorizontalList_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutHorizontalList_TTemplate::_Internal::identifier(const TLayoutHorizontalList_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutHorizontalListElement&
TLayoutHorizontalList_TTemplate::_Internal::element(const TLayoutHorizontalList_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutHorizontalList_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutHorizontalList_TTemplate::TLayoutHorizontalList_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHorizontalList.TTemplate)
}
TLayoutHorizontalList_TTemplate::TLayoutHorizontalList_TTemplate(const TLayoutHorizontalList_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHorizontalList_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutHorizontalListElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHorizontalList.TTemplate)
}

inline void TLayoutHorizontalList_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutHorizontalList_TTemplate::~TLayoutHorizontalList_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHorizontalList.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHorizontalList_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutHorizontalList_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHorizontalList_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHorizontalList.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHorizontalList_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutHorizontalListElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHorizontalList_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHorizontalList.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutHorizontalListElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHorizontalList.TTemplate)
  return target;
}

size_t TLayoutHorizontalList_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutHorizontalList.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutHorizontalListElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutHorizontalList_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHorizontalList.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutHorizontalListElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHorizontalList_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHorizontalList_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHorizontalList_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutHorizontalList_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHorizontalList_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutHorizontalList_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHorizontalList.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutHorizontalListElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHorizontalList_TTemplate::CopyFrom(const TLayoutHorizontalList_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHorizontalList.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHorizontalList_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHorizontalList_TTemplate::InternalSwap(TLayoutHorizontalList_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutHorizontalList_TTemplate, _impl_.element_)
      + sizeof(TLayoutHorizontalList_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutHorizontalList_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHorizontalList_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[71]);
}

// ===================================================================

class TLayoutHorizontalList::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHorizontalList>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHorizontalList, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutHVBase& base(const TLayoutHorizontalList* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::TLayoutHVBase&
TLayoutHorizontalList::_Internal::base(const TLayoutHorizontalList* msg) {
  return *msg->_impl_.base_;
}
TLayoutHorizontalList::TLayoutHorizontalList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHorizontalList)
}
TLayoutHorizontalList::TLayoutHorizontalList(const TLayoutHorizontalList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHorizontalList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutHVBase(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHorizontalList)
}

inline void TLayoutHorizontalList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutHorizontalList::~TLayoutHorizontalList() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHorizontalList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHorizontalList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutHorizontalList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHorizontalList::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHorizontalList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHorizontalList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.TLayoutHVBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutHorizontalListElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutHorizontalList.TTemplate elementTemplate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHorizontalList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHorizontalList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.TLayoutHVBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutHorizontalListElement element = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutHorizontalList.TTemplate elementTemplate = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHorizontalList)
  return target;
}

size_t TLayoutHorizontalList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHorizontalList)
  size_t total_size = 0;

  // required .HmiWidget.TLayoutHVBase base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutHorizontalListElement element = 2;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutHorizontalList.TTemplate elementTemplate = 3;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHorizontalList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHorizontalList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHorizontalList::GetClassData() const { return &_class_data_; }


void TLayoutHorizontalList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHorizontalList*>(&to_msg);
  auto& from = static_cast<const TLayoutHorizontalList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHorizontalList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::TLayoutHVBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHorizontalList::CopyFrom(const TLayoutHorizontalList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHorizontalList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHorizontalList::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHorizontalList::InternalSwap(TLayoutHorizontalList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHorizontalList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[72]);
}

// ===================================================================

class TLayoutVerticalList_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVerticalList_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVerticalList_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutVerticalList_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutVerticalListElement& element(const TLayoutVerticalList_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutVerticalList_TTemplate::_Internal::identifier(const TLayoutVerticalList_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutVerticalListElement&
TLayoutVerticalList_TTemplate::_Internal::element(const TLayoutVerticalList_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutVerticalList_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutVerticalList_TTemplate::TLayoutVerticalList_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVerticalList.TTemplate)
}
TLayoutVerticalList_TTemplate::TLayoutVerticalList_TTemplate(const TLayoutVerticalList_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVerticalList_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutVerticalListElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVerticalList.TTemplate)
}

inline void TLayoutVerticalList_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutVerticalList_TTemplate::~TLayoutVerticalList_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVerticalList.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVerticalList_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutVerticalList_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVerticalList_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVerticalList.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVerticalList_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutVerticalListElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVerticalList_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVerticalList.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutVerticalListElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVerticalList.TTemplate)
  return target;
}

size_t TLayoutVerticalList_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutVerticalList.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutVerticalListElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutVerticalList_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVerticalList.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutVerticalListElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVerticalList_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVerticalList_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVerticalList_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutVerticalList_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVerticalList_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutVerticalList_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVerticalList.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutVerticalListElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVerticalList_TTemplate::CopyFrom(const TLayoutVerticalList_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVerticalList.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVerticalList_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVerticalList_TTemplate::InternalSwap(TLayoutVerticalList_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutVerticalList_TTemplate, _impl_.element_)
      + sizeof(TLayoutVerticalList_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutVerticalList_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVerticalList_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[73]);
}

// ===================================================================

class TLayoutVerticalList::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVerticalList>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVerticalList, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutHVBase& base(const TLayoutVerticalList* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::TLayoutHVBase&
TLayoutVerticalList::_Internal::base(const TLayoutVerticalList* msg) {
  return *msg->_impl_.base_;
}
TLayoutVerticalList::TLayoutVerticalList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVerticalList)
}
TLayoutVerticalList::TLayoutVerticalList(const TLayoutVerticalList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVerticalList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutHVBase(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVerticalList)
}

inline void TLayoutVerticalList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutVerticalList::~TLayoutVerticalList() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVerticalList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVerticalList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutVerticalList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVerticalList::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVerticalList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVerticalList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.TLayoutHVBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutVerticalListElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutVerticalList.TTemplate elementTemplate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVerticalList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVerticalList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.TLayoutHVBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutVerticalListElement element = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutVerticalList.TTemplate elementTemplate = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVerticalList)
  return target;
}

size_t TLayoutVerticalList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVerticalList)
  size_t total_size = 0;

  // required .HmiWidget.TLayoutHVBase base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutVerticalListElement element = 2;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutVerticalList.TTemplate elementTemplate = 3;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVerticalList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVerticalList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVerticalList::GetClassData() const { return &_class_data_; }


void TLayoutVerticalList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVerticalList*>(&to_msg);
  auto& from = static_cast<const TLayoutVerticalList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVerticalList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::TLayoutHVBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVerticalList::CopyFrom(const TLayoutVerticalList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVerticalList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVerticalList::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVerticalList::InternalSwap(TLayoutVerticalList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVerticalList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[74]);
}

// ===================================================================

class TLayoutVerticalCurvedList_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVerticalCurvedList_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVerticalCurvedList_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutVerticalCurvedList_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutVerticalListElement& element(const TLayoutVerticalCurvedList_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutVerticalCurvedList_TTemplate::_Internal::identifier(const TLayoutVerticalCurvedList_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutVerticalListElement&
TLayoutVerticalCurvedList_TTemplate::_Internal::element(const TLayoutVerticalCurvedList_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutVerticalCurvedList_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutVerticalCurvedList_TTemplate::TLayoutVerticalCurvedList_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVerticalCurvedList.TTemplate)
}
TLayoutVerticalCurvedList_TTemplate::TLayoutVerticalCurvedList_TTemplate(const TLayoutVerticalCurvedList_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVerticalCurvedList_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutVerticalListElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVerticalCurvedList.TTemplate)
}

inline void TLayoutVerticalCurvedList_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutVerticalCurvedList_TTemplate::~TLayoutVerticalCurvedList_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVerticalCurvedList.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVerticalCurvedList_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutVerticalCurvedList_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVerticalCurvedList_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVerticalCurvedList.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVerticalCurvedList_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutVerticalListElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVerticalCurvedList_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVerticalCurvedList.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutVerticalListElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVerticalCurvedList.TTemplate)
  return target;
}

size_t TLayoutVerticalCurvedList_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutVerticalCurvedList.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutVerticalListElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutVerticalCurvedList_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVerticalCurvedList.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutVerticalListElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVerticalCurvedList_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVerticalCurvedList_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVerticalCurvedList_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutVerticalCurvedList_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVerticalCurvedList_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutVerticalCurvedList_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVerticalCurvedList.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutVerticalListElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVerticalCurvedList_TTemplate::CopyFrom(const TLayoutVerticalCurvedList_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVerticalCurvedList.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVerticalCurvedList_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVerticalCurvedList_TTemplate::InternalSwap(TLayoutVerticalCurvedList_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutVerticalCurvedList_TTemplate, _impl_.element_)
      + sizeof(TLayoutVerticalCurvedList_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutVerticalCurvedList_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVerticalCurvedList_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[75]);
}

// ===================================================================

class TLayoutVerticalCurvedList::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVerticalCurvedList>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVerticalCurvedList, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutCurvedHVBase& base(const TLayoutVerticalCurvedList* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::TLayoutCurvedHVBase&
TLayoutVerticalCurvedList::_Internal::base(const TLayoutVerticalCurvedList* msg) {
  return *msg->_impl_.base_;
}
TLayoutVerticalCurvedList::TLayoutVerticalCurvedList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVerticalCurvedList)
}
TLayoutVerticalCurvedList::TLayoutVerticalCurvedList(const TLayoutVerticalCurvedList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVerticalCurvedList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutCurvedHVBase(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVerticalCurvedList)
}

inline void TLayoutVerticalCurvedList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutVerticalCurvedList::~TLayoutVerticalCurvedList() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVerticalCurvedList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVerticalCurvedList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutVerticalCurvedList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVerticalCurvedList::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVerticalCurvedList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVerticalCurvedList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.TLayoutCurvedHVBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutVerticalListElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutVerticalCurvedList.TTemplate elementTemplate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVerticalCurvedList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVerticalCurvedList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.TLayoutCurvedHVBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutVerticalListElement element = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutVerticalCurvedList.TTemplate elementTemplate = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVerticalCurvedList)
  return target;
}

size_t TLayoutVerticalCurvedList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVerticalCurvedList)
  size_t total_size = 0;

  // required .HmiWidget.TLayoutCurvedHVBase base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutVerticalListElement element = 2;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutVerticalCurvedList.TTemplate elementTemplate = 3;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVerticalCurvedList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVerticalCurvedList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVerticalCurvedList::GetClassData() const { return &_class_data_; }


void TLayoutVerticalCurvedList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVerticalCurvedList*>(&to_msg);
  auto& from = static_cast<const TLayoutVerticalCurvedList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVerticalCurvedList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::TLayoutCurvedHVBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVerticalCurvedList::CopyFrom(const TLayoutVerticalCurvedList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVerticalCurvedList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVerticalCurvedList::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVerticalCurvedList::InternalSwap(TLayoutVerticalCurvedList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVerticalCurvedList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[76]);
}

// ===================================================================

class TLayoutVerticalRoll_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVerticalRoll_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVerticalRoll_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutVerticalRoll_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutVerticalListElement& element(const TLayoutVerticalRoll_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutVerticalRoll_TTemplate::_Internal::identifier(const TLayoutVerticalRoll_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutVerticalListElement&
TLayoutVerticalRoll_TTemplate::_Internal::element(const TLayoutVerticalRoll_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutVerticalRoll_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutVerticalRoll_TTemplate::TLayoutVerticalRoll_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVerticalRoll.TTemplate)
}
TLayoutVerticalRoll_TTemplate::TLayoutVerticalRoll_TTemplate(const TLayoutVerticalRoll_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVerticalRoll_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutVerticalListElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVerticalRoll.TTemplate)
}

inline void TLayoutVerticalRoll_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutVerticalRoll_TTemplate::~TLayoutVerticalRoll_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVerticalRoll.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVerticalRoll_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutVerticalRoll_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVerticalRoll_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVerticalRoll.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVerticalRoll_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutVerticalListElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVerticalRoll_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVerticalRoll.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutVerticalListElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVerticalRoll.TTemplate)
  return target;
}

size_t TLayoutVerticalRoll_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutVerticalRoll.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutVerticalListElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutVerticalRoll_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVerticalRoll.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutVerticalListElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVerticalRoll_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVerticalRoll_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVerticalRoll_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutVerticalRoll_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVerticalRoll_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutVerticalRoll_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVerticalRoll.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutVerticalListElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVerticalRoll_TTemplate::CopyFrom(const TLayoutVerticalRoll_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVerticalRoll.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVerticalRoll_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVerticalRoll_TTemplate::InternalSwap(TLayoutVerticalRoll_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutVerticalRoll_TTemplate, _impl_.element_)
      + sizeof(TLayoutVerticalRoll_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutVerticalRoll_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVerticalRoll_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[77]);
}

// ===================================================================

class TLayoutVerticalRoll::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVerticalRoll>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVerticalRoll, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutHVRollBase& base(const TLayoutVerticalRoll* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::TLayoutHVRollBase&
TLayoutVerticalRoll::_Internal::base(const TLayoutVerticalRoll* msg) {
  return *msg->_impl_.base_;
}
TLayoutVerticalRoll::TLayoutVerticalRoll(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVerticalRoll)
}
TLayoutVerticalRoll::TLayoutVerticalRoll(const TLayoutVerticalRoll& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVerticalRoll* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutHVRollBase(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVerticalRoll)
}

inline void TLayoutVerticalRoll::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutVerticalRoll::~TLayoutVerticalRoll() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVerticalRoll)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVerticalRoll::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutVerticalRoll::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVerticalRoll::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVerticalRoll)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVerticalRoll::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.TLayoutHVRollBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutVerticalListElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutVerticalRoll.TTemplate elementTemplate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVerticalRoll::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVerticalRoll)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.TLayoutHVRollBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutVerticalListElement element = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutVerticalRoll.TTemplate elementTemplate = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVerticalRoll)
  return target;
}

size_t TLayoutVerticalRoll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVerticalRoll)
  size_t total_size = 0;

  // required .HmiWidget.TLayoutHVRollBase base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutVerticalListElement element = 2;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutVerticalRoll.TTemplate elementTemplate = 3;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVerticalRoll::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVerticalRoll::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVerticalRoll::GetClassData() const { return &_class_data_; }


void TLayoutVerticalRoll::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVerticalRoll*>(&to_msg);
  auto& from = static_cast<const TLayoutVerticalRoll&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVerticalRoll)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::TLayoutHVRollBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVerticalRoll::CopyFrom(const TLayoutVerticalRoll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVerticalRoll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVerticalRoll::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVerticalRoll::InternalSwap(TLayoutVerticalRoll* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVerticalRoll::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[78]);
}

// ===================================================================

class TLayoutHorizontalPages_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHorizontalPages_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHorizontalPages_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutHorizontalPages_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutHorizontalElement& element(const TLayoutHorizontalPages_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutHorizontalPages_TTemplate::_Internal::identifier(const TLayoutHorizontalPages_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutHorizontalElement&
TLayoutHorizontalPages_TTemplate::_Internal::element(const TLayoutHorizontalPages_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutHorizontalPages_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutHorizontalPages_TTemplate::TLayoutHorizontalPages_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHorizontalPages.TTemplate)
}
TLayoutHorizontalPages_TTemplate::TLayoutHorizontalPages_TTemplate(const TLayoutHorizontalPages_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHorizontalPages_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutHorizontalElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHorizontalPages.TTemplate)
}

inline void TLayoutHorizontalPages_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutHorizontalPages_TTemplate::~TLayoutHorizontalPages_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHorizontalPages.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHorizontalPages_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutHorizontalPages_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHorizontalPages_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHorizontalPages.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHorizontalPages_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutHorizontalElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHorizontalPages_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHorizontalPages.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutHorizontalElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHorizontalPages.TTemplate)
  return target;
}

size_t TLayoutHorizontalPages_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutHorizontalPages.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutHorizontalElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutHorizontalPages_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHorizontalPages.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutHorizontalElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHorizontalPages_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHorizontalPages_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHorizontalPages_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutHorizontalPages_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHorizontalPages_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutHorizontalPages_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHorizontalPages.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutHorizontalElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHorizontalPages_TTemplate::CopyFrom(const TLayoutHorizontalPages_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHorizontalPages.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHorizontalPages_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHorizontalPages_TTemplate::InternalSwap(TLayoutHorizontalPages_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutHorizontalPages_TTemplate, _impl_.element_)
      + sizeof(TLayoutHorizontalPages_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutHorizontalPages_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHorizontalPages_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[79]);
}

// ===================================================================

class TLayoutHorizontalPages::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHorizontalPages>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHorizontalPages, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutHVBase& base(const TLayoutHorizontalPages* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& pagesize(const TLayoutHorizontalPages* msg);
  static void set_has_pagesize(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& pagespacing(const TLayoutHorizontalPages* msg);
  static void set_has_pagespacing(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::TLayoutHVBase&
TLayoutHorizontalPages::_Internal::base(const TLayoutHorizontalPages* msg) {
  return *msg->_impl_.base_;
}
const ::TDataBinding&
TLayoutHorizontalPages::_Internal::pagesize(const TLayoutHorizontalPages* msg) {
  return *msg->_impl_.pagesize_;
}
const ::TDataBinding&
TLayoutHorizontalPages::_Internal::pagespacing(const TLayoutHorizontalPages* msg) {
  return *msg->_impl_.pagespacing_;
}
void TLayoutHorizontalPages::clear_pagesize() {
  if (_impl_.pagesize_ != nullptr) _impl_.pagesize_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TLayoutHorizontalPages::clear_pagespacing() {
  if (_impl_.pagespacing_ != nullptr) _impl_.pagespacing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TLayoutHorizontalPages::TLayoutHorizontalPages(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHorizontalPages)
}
TLayoutHorizontalPages::TLayoutHorizontalPages(const TLayoutHorizontalPages& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHorizontalPages* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.pagesize_){nullptr}
    , decltype(_impl_.pagespacing_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutHVBase(*from._impl_.base_);
  }
  if (from._internal_has_pagesize()) {
    _this->_impl_.pagesize_ = new ::TDataBinding(*from._impl_.pagesize_);
  }
  if (from._internal_has_pagespacing()) {
    _this->_impl_.pagespacing_ = new ::TDataBinding(*from._impl_.pagespacing_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHorizontalPages)
}

inline void TLayoutHorizontalPages::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.pagesize_){nullptr}
    , decltype(_impl_.pagespacing_){nullptr}
  };
}

TLayoutHorizontalPages::~TLayoutHorizontalPages() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHorizontalPages)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHorizontalPages::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.pagesize_;
  if (this != internal_default_instance()) delete _impl_.pagespacing_;
}

void TLayoutHorizontalPages::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHorizontalPages::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHorizontalPages)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.base_ != nullptr);
      _impl_.base_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.pagesize_ != nullptr);
      _impl_.pagesize_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.pagespacing_ != nullptr);
      _impl_.pagespacing_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHorizontalPages::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.TLayoutHVBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutHorizontalElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutHorizontalPages.TTemplate elementTemplate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding pageSize = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagesize(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding pageSpacing = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagespacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHorizontalPages::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHorizontalPages)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.TLayoutHVBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutHorizontalElement element = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutHorizontalPages.TTemplate elementTemplate = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .TDataBinding pageSize = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::pagesize(this),
        _Internal::pagesize(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding pageSpacing = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::pagespacing(this),
        _Internal::pagespacing(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHorizontalPages)
  return target;
}

size_t TLayoutHorizontalPages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHorizontalPages)
  size_t total_size = 0;

  // required .HmiWidget.TLayoutHVBase base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutHorizontalElement element = 2;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutHorizontalPages.TTemplate elementTemplate = 3;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional .TDataBinding pageSize = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pagesize_);
    }

    // optional .TDataBinding pageSpacing = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pagespacing_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHorizontalPages::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHorizontalPages::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHorizontalPages::GetClassData() const { return &_class_data_; }


void TLayoutHorizontalPages::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHorizontalPages*>(&to_msg);
  auto& from = static_cast<const TLayoutHorizontalPages&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHorizontalPages)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_base()->::HmiWidget::TLayoutHVBase::MergeFrom(
          from._internal_base());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_pagesize()->::TDataBinding::MergeFrom(
          from._internal_pagesize());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_pagespacing()->::TDataBinding::MergeFrom(
          from._internal_pagespacing());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHorizontalPages::CopyFrom(const TLayoutHorizontalPages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHorizontalPages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHorizontalPages::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  if (_internal_has_pagesize()) {
    if (!_impl_.pagesize_->IsInitialized()) return false;
  }
  if (_internal_has_pagespacing()) {
    if (!_impl_.pagespacing_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHorizontalPages::InternalSwap(TLayoutHorizontalPages* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutHorizontalPages, _impl_.pagespacing_)
      + sizeof(TLayoutHorizontalPages::_impl_.pagespacing_)
      - PROTOBUF_FIELD_OFFSET(TLayoutHorizontalPages, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHorizontalPages::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[80]);
}

// ===================================================================

class TLayoutHVBase::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHVBase>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHVBase, _impl_._has_bits_);
  static const ::TDataBinding& orientation(const TLayoutHVBase* msg);
  static void set_has_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& leftmargin(const TLayoutHVBase* msg);
  static void set_has_leftmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& rightmargin(const TLayoutHVBase* msg);
  static void set_has_rightmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& topmargin(const TLayoutHVBase* msg);
  static void set_has_topmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& bottommargin(const TLayoutHVBase* msg);
  static void set_has_bottommargin(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& spacing(const TLayoutHVBase* msg);
  static void set_has_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& raster(const TLayoutHVBase* msg);
  static void set_has_raster(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::TDataBinding&
TLayoutHVBase::_Internal::orientation(const TLayoutHVBase* msg) {
  return *msg->_impl_.orientation_;
}
const ::TDataBinding&
TLayoutHVBase::_Internal::leftmargin(const TLayoutHVBase* msg) {
  return *msg->_impl_.leftmargin_;
}
const ::TDataBinding&
TLayoutHVBase::_Internal::rightmargin(const TLayoutHVBase* msg) {
  return *msg->_impl_.rightmargin_;
}
const ::TDataBinding&
TLayoutHVBase::_Internal::topmargin(const TLayoutHVBase* msg) {
  return *msg->_impl_.topmargin_;
}
const ::TDataBinding&
TLayoutHVBase::_Internal::bottommargin(const TLayoutHVBase* msg) {
  return *msg->_impl_.bottommargin_;
}
const ::TDataBinding&
TLayoutHVBase::_Internal::spacing(const TLayoutHVBase* msg) {
  return *msg->_impl_.spacing_;
}
const ::TDataBinding&
TLayoutHVBase::_Internal::raster(const TLayoutHVBase* msg) {
  return *msg->_impl_.raster_;
}
void TLayoutHVBase::clear_orientation() {
  if (_impl_.orientation_ != nullptr) _impl_.orientation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutHVBase::clear_leftmargin() {
  if (_impl_.leftmargin_ != nullptr) _impl_.leftmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TLayoutHVBase::clear_rightmargin() {
  if (_impl_.rightmargin_ != nullptr) _impl_.rightmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutHVBase::clear_topmargin() {
  if (_impl_.topmargin_ != nullptr) _impl_.topmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutHVBase::clear_bottommargin() {
  if (_impl_.bottommargin_ != nullptr) _impl_.bottommargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutHVBase::clear_spacing() {
  if (_impl_.spacing_ != nullptr) _impl_.spacing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TLayoutHVBase::clear_raster() {
  if (_impl_.raster_ != nullptr) _impl_.raster_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
TLayoutHVBase::TLayoutHVBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHVBase)
}
TLayoutHVBase::TLayoutHVBase(const TLayoutHVBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHVBase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.orientation_){nullptr}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.spacing_){nullptr}
    , decltype(_impl_.raster_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_orientation()) {
    _this->_impl_.orientation_ = new ::TDataBinding(*from._impl_.orientation_);
  }
  if (from._internal_has_leftmargin()) {
    _this->_impl_.leftmargin_ = new ::TDataBinding(*from._impl_.leftmargin_);
  }
  if (from._internal_has_rightmargin()) {
    _this->_impl_.rightmargin_ = new ::TDataBinding(*from._impl_.rightmargin_);
  }
  if (from._internal_has_topmargin()) {
    _this->_impl_.topmargin_ = new ::TDataBinding(*from._impl_.topmargin_);
  }
  if (from._internal_has_bottommargin()) {
    _this->_impl_.bottommargin_ = new ::TDataBinding(*from._impl_.bottommargin_);
  }
  if (from._internal_has_spacing()) {
    _this->_impl_.spacing_ = new ::TDataBinding(*from._impl_.spacing_);
  }
  if (from._internal_has_raster()) {
    _this->_impl_.raster_ = new ::TDataBinding(*from._impl_.raster_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHVBase)
}

inline void TLayoutHVBase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.orientation_){nullptr}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.spacing_){nullptr}
    , decltype(_impl_.raster_){nullptr}
  };
}

TLayoutHVBase::~TLayoutHVBase() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHVBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHVBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.orientation_;
  if (this != internal_default_instance()) delete _impl_.leftmargin_;
  if (this != internal_default_instance()) delete _impl_.rightmargin_;
  if (this != internal_default_instance()) delete _impl_.topmargin_;
  if (this != internal_default_instance()) delete _impl_.bottommargin_;
  if (this != internal_default_instance()) delete _impl_.spacing_;
  if (this != internal_default_instance()) delete _impl_.raster_;
}

void TLayoutHVBase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHVBase::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHVBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.orientation_ != nullptr);
      _impl_.orientation_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.leftmargin_ != nullptr);
      _impl_.leftmargin_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.rightmargin_ != nullptr);
      _impl_.rightmargin_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.topmargin_ != nullptr);
      _impl_.topmargin_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.bottommargin_ != nullptr);
      _impl_.bottommargin_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.spacing_ != nullptr);
      _impl_.spacing_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.raster_ != nullptr);
      _impl_.raster_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHVBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding orientation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding leftMargin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_leftmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rightMargin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_rightmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding topMargin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_topmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding bottomMargin = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_bottommargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding spacing = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding raster = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_raster(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHVBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHVBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding orientation = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::orientation(this),
        _Internal::orientation(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding leftMargin = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::leftmargin(this),
        _Internal::leftmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rightMargin = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::rightmargin(this),
        _Internal::rightmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding topMargin = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::topmargin(this),
        _Internal::topmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding bottomMargin = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::bottommargin(this),
        _Internal::bottommargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding spacing = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::spacing(this),
        _Internal::spacing(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding raster = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::raster(this),
        _Internal::raster(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHVBase)
  return target;
}

size_t TLayoutHVBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHVBase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .TDataBinding orientation = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.orientation_);
    }

    // optional .TDataBinding leftMargin = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.leftmargin_);
    }

    // optional .TDataBinding rightMargin = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rightmargin_);
    }

    // optional .TDataBinding topMargin = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.topmargin_);
    }

    // optional .TDataBinding bottomMargin = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bottommargin_);
    }

    // optional .TDataBinding spacing = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.spacing_);
    }

    // optional .TDataBinding raster = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.raster_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHVBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHVBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHVBase::GetClassData() const { return &_class_data_; }


void TLayoutHVBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHVBase*>(&to_msg);
  auto& from = static_cast<const TLayoutHVBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHVBase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_orientation()->::TDataBinding::MergeFrom(
          from._internal_orientation());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_leftmargin()->::TDataBinding::MergeFrom(
          from._internal_leftmargin());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_rightmargin()->::TDataBinding::MergeFrom(
          from._internal_rightmargin());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_topmargin()->::TDataBinding::MergeFrom(
          from._internal_topmargin());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_bottommargin()->::TDataBinding::MergeFrom(
          from._internal_bottommargin());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_spacing()->::TDataBinding::MergeFrom(
          from._internal_spacing());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_raster()->::TDataBinding::MergeFrom(
          from._internal_raster());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHVBase::CopyFrom(const TLayoutHVBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHVBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHVBase::IsInitialized() const {
  if (_internal_has_orientation()) {
    if (!_impl_.orientation_->IsInitialized()) return false;
  }
  if (_internal_has_leftmargin()) {
    if (!_impl_.leftmargin_->IsInitialized()) return false;
  }
  if (_internal_has_rightmargin()) {
    if (!_impl_.rightmargin_->IsInitialized()) return false;
  }
  if (_internal_has_topmargin()) {
    if (!_impl_.topmargin_->IsInitialized()) return false;
  }
  if (_internal_has_bottommargin()) {
    if (!_impl_.bottommargin_->IsInitialized()) return false;
  }
  if (_internal_has_spacing()) {
    if (!_impl_.spacing_->IsInitialized()) return false;
  }
  if (_internal_has_raster()) {
    if (!_impl_.raster_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHVBase::InternalSwap(TLayoutHVBase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutHVBase, _impl_.raster_)
      + sizeof(TLayoutHVBase::_impl_.raster_)
      - PROTOBUF_FIELD_OFFSET(TLayoutHVBase, _impl_.orientation_)>(
          reinterpret_cast<char*>(&_impl_.orientation_),
          reinterpret_cast<char*>(&other->_impl_.orientation_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHVBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[81]);
}

// ===================================================================

class TLayoutHVRollBase::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHVRollBase>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHVRollBase, _impl_._has_bits_);
  static const ::TDataBinding& orientation(const TLayoutHVRollBase* msg);
  static void set_has_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& leftmargin(const TLayoutHVRollBase* msg);
  static void set_has_leftmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& rightmargin(const TLayoutHVRollBase* msg);
  static void set_has_rightmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& topmargin(const TLayoutHVRollBase* msg);
  static void set_has_topmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& bottommargin(const TLayoutHVRollBase* msg);
  static void set_has_bottommargin(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& spacing(const TLayoutHVRollBase* msg);
  static void set_has_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& raster(const TLayoutHVRollBase* msg);
  static void set_has_raster(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TDataBinding& focusedchild(const TLayoutHVRollBase* msg);
  static void set_has_focusedchild(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TDataBinding& wraparound(const TLayoutHVRollBase* msg);
  static void set_has_wraparound(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

const ::TDataBinding&
TLayoutHVRollBase::_Internal::orientation(const TLayoutHVRollBase* msg) {
  return *msg->_impl_.orientation_;
}
const ::TDataBinding&
TLayoutHVRollBase::_Internal::leftmargin(const TLayoutHVRollBase* msg) {
  return *msg->_impl_.leftmargin_;
}
const ::TDataBinding&
TLayoutHVRollBase::_Internal::rightmargin(const TLayoutHVRollBase* msg) {
  return *msg->_impl_.rightmargin_;
}
const ::TDataBinding&
TLayoutHVRollBase::_Internal::topmargin(const TLayoutHVRollBase* msg) {
  return *msg->_impl_.topmargin_;
}
const ::TDataBinding&
TLayoutHVRollBase::_Internal::bottommargin(const TLayoutHVRollBase* msg) {
  return *msg->_impl_.bottommargin_;
}
const ::TDataBinding&
TLayoutHVRollBase::_Internal::spacing(const TLayoutHVRollBase* msg) {
  return *msg->_impl_.spacing_;
}
const ::TDataBinding&
TLayoutHVRollBase::_Internal::raster(const TLayoutHVRollBase* msg) {
  return *msg->_impl_.raster_;
}
const ::TDataBinding&
TLayoutHVRollBase::_Internal::focusedchild(const TLayoutHVRollBase* msg) {
  return *msg->_impl_.focusedchild_;
}
const ::TDataBinding&
TLayoutHVRollBase::_Internal::wraparound(const TLayoutHVRollBase* msg) {
  return *msg->_impl_.wraparound_;
}
void TLayoutHVRollBase::clear_orientation() {
  if (_impl_.orientation_ != nullptr) _impl_.orientation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutHVRollBase::clear_leftmargin() {
  if (_impl_.leftmargin_ != nullptr) _impl_.leftmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TLayoutHVRollBase::clear_rightmargin() {
  if (_impl_.rightmargin_ != nullptr) _impl_.rightmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutHVRollBase::clear_topmargin() {
  if (_impl_.topmargin_ != nullptr) _impl_.topmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutHVRollBase::clear_bottommargin() {
  if (_impl_.bottommargin_ != nullptr) _impl_.bottommargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutHVRollBase::clear_spacing() {
  if (_impl_.spacing_ != nullptr) _impl_.spacing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TLayoutHVRollBase::clear_raster() {
  if (_impl_.raster_ != nullptr) _impl_.raster_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void TLayoutHVRollBase::clear_focusedchild() {
  if (_impl_.focusedchild_ != nullptr) _impl_.focusedchild_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void TLayoutHVRollBase::clear_wraparound() {
  if (_impl_.wraparound_ != nullptr) _impl_.wraparound_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
TLayoutHVRollBase::TLayoutHVRollBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHVRollBase)
}
TLayoutHVRollBase::TLayoutHVRollBase(const TLayoutHVRollBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHVRollBase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.orientation_){nullptr}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.spacing_){nullptr}
    , decltype(_impl_.raster_){nullptr}
    , decltype(_impl_.focusedchild_){nullptr}
    , decltype(_impl_.wraparound_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_orientation()) {
    _this->_impl_.orientation_ = new ::TDataBinding(*from._impl_.orientation_);
  }
  if (from._internal_has_leftmargin()) {
    _this->_impl_.leftmargin_ = new ::TDataBinding(*from._impl_.leftmargin_);
  }
  if (from._internal_has_rightmargin()) {
    _this->_impl_.rightmargin_ = new ::TDataBinding(*from._impl_.rightmargin_);
  }
  if (from._internal_has_topmargin()) {
    _this->_impl_.topmargin_ = new ::TDataBinding(*from._impl_.topmargin_);
  }
  if (from._internal_has_bottommargin()) {
    _this->_impl_.bottommargin_ = new ::TDataBinding(*from._impl_.bottommargin_);
  }
  if (from._internal_has_spacing()) {
    _this->_impl_.spacing_ = new ::TDataBinding(*from._impl_.spacing_);
  }
  if (from._internal_has_raster()) {
    _this->_impl_.raster_ = new ::TDataBinding(*from._impl_.raster_);
  }
  if (from._internal_has_focusedchild()) {
    _this->_impl_.focusedchild_ = new ::TDataBinding(*from._impl_.focusedchild_);
  }
  if (from._internal_has_wraparound()) {
    _this->_impl_.wraparound_ = new ::TDataBinding(*from._impl_.wraparound_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHVRollBase)
}

inline void TLayoutHVRollBase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.orientation_){nullptr}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.spacing_){nullptr}
    , decltype(_impl_.raster_){nullptr}
    , decltype(_impl_.focusedchild_){nullptr}
    , decltype(_impl_.wraparound_){nullptr}
  };
}

TLayoutHVRollBase::~TLayoutHVRollBase() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHVRollBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHVRollBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.orientation_;
  if (this != internal_default_instance()) delete _impl_.leftmargin_;
  if (this != internal_default_instance()) delete _impl_.rightmargin_;
  if (this != internal_default_instance()) delete _impl_.topmargin_;
  if (this != internal_default_instance()) delete _impl_.bottommargin_;
  if (this != internal_default_instance()) delete _impl_.spacing_;
  if (this != internal_default_instance()) delete _impl_.raster_;
  if (this != internal_default_instance()) delete _impl_.focusedchild_;
  if (this != internal_default_instance()) delete _impl_.wraparound_;
}

void TLayoutHVRollBase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHVRollBase::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHVRollBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.orientation_ != nullptr);
      _impl_.orientation_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.leftmargin_ != nullptr);
      _impl_.leftmargin_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.rightmargin_ != nullptr);
      _impl_.rightmargin_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.topmargin_ != nullptr);
      _impl_.topmargin_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.bottommargin_ != nullptr);
      _impl_.bottommargin_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.spacing_ != nullptr);
      _impl_.spacing_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.raster_ != nullptr);
      _impl_.raster_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.focusedchild_ != nullptr);
      _impl_.focusedchild_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(_impl_.wraparound_ != nullptr);
    _impl_.wraparound_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHVRollBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding orientation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding leftMargin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_leftmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rightMargin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_rightmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding topMargin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_topmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding bottomMargin = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_bottommargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding spacing = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding raster = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_raster(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding focusedChild = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_focusedchild(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding wrapAround = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_wraparound(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHVRollBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHVRollBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding orientation = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::orientation(this),
        _Internal::orientation(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding leftMargin = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::leftmargin(this),
        _Internal::leftmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rightMargin = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::rightmargin(this),
        _Internal::rightmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding topMargin = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::topmargin(this),
        _Internal::topmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding bottomMargin = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::bottommargin(this),
        _Internal::bottommargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding spacing = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::spacing(this),
        _Internal::spacing(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding raster = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::raster(this),
        _Internal::raster(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding focusedChild = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::focusedchild(this),
        _Internal::focusedchild(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding wrapAround = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::wraparound(this),
        _Internal::wraparound(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHVRollBase)
  return target;
}

size_t TLayoutHVRollBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHVRollBase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TDataBinding orientation = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.orientation_);
    }

    // optional .TDataBinding leftMargin = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.leftmargin_);
    }

    // optional .TDataBinding rightMargin = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rightmargin_);
    }

    // optional .TDataBinding topMargin = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.topmargin_);
    }

    // optional .TDataBinding bottomMargin = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bottommargin_);
    }

    // optional .TDataBinding spacing = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.spacing_);
    }

    // optional .TDataBinding raster = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.raster_);
    }

    // optional .TDataBinding focusedChild = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.focusedchild_);
    }

  }
  // optional .TDataBinding wrapAround = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.wraparound_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHVRollBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHVRollBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHVRollBase::GetClassData() const { return &_class_data_; }


void TLayoutHVRollBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHVRollBase*>(&to_msg);
  auto& from = static_cast<const TLayoutHVRollBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHVRollBase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_orientation()->::TDataBinding::MergeFrom(
          from._internal_orientation());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_leftmargin()->::TDataBinding::MergeFrom(
          from._internal_leftmargin());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_rightmargin()->::TDataBinding::MergeFrom(
          from._internal_rightmargin());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_topmargin()->::TDataBinding::MergeFrom(
          from._internal_topmargin());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_bottommargin()->::TDataBinding::MergeFrom(
          from._internal_bottommargin());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_spacing()->::TDataBinding::MergeFrom(
          from._internal_spacing());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_raster()->::TDataBinding::MergeFrom(
          from._internal_raster());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_focusedchild()->::TDataBinding::MergeFrom(
          from._internal_focusedchild());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_mutable_wraparound()->::TDataBinding::MergeFrom(
        from._internal_wraparound());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHVRollBase::CopyFrom(const TLayoutHVRollBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHVRollBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHVRollBase::IsInitialized() const {
  if (_internal_has_orientation()) {
    if (!_impl_.orientation_->IsInitialized()) return false;
  }
  if (_internal_has_leftmargin()) {
    if (!_impl_.leftmargin_->IsInitialized()) return false;
  }
  if (_internal_has_rightmargin()) {
    if (!_impl_.rightmargin_->IsInitialized()) return false;
  }
  if (_internal_has_topmargin()) {
    if (!_impl_.topmargin_->IsInitialized()) return false;
  }
  if (_internal_has_bottommargin()) {
    if (!_impl_.bottommargin_->IsInitialized()) return false;
  }
  if (_internal_has_spacing()) {
    if (!_impl_.spacing_->IsInitialized()) return false;
  }
  if (_internal_has_raster()) {
    if (!_impl_.raster_->IsInitialized()) return false;
  }
  if (_internal_has_focusedchild()) {
    if (!_impl_.focusedchild_->IsInitialized()) return false;
  }
  if (_internal_has_wraparound()) {
    if (!_impl_.wraparound_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHVRollBase::InternalSwap(TLayoutHVRollBase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutHVRollBase, _impl_.wraparound_)
      + sizeof(TLayoutHVRollBase::_impl_.wraparound_)
      - PROTOBUF_FIELD_OFFSET(TLayoutHVRollBase, _impl_.orientation_)>(
          reinterpret_cast<char*>(&_impl_.orientation_),
          reinterpret_cast<char*>(&other->_impl_.orientation_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHVRollBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[82]);
}

// ===================================================================

class TLayoutCurvedHVBase::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutCurvedHVBase>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutCurvedHVBase, _impl_._has_bits_);
  static const ::TDataBinding& radius(const TLayoutCurvedHVBase* msg);
  static void set_has_radius(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& origin(const TLayoutCurvedHVBase* msg);
  static void set_has_origin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& orientation(const TLayoutCurvedHVBase* msg);
  static void set_has_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& leftmargin(const TLayoutCurvedHVBase* msg);
  static void set_has_leftmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& rightmargin(const TLayoutCurvedHVBase* msg);
  static void set_has_rightmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& topmargin(const TLayoutCurvedHVBase* msg);
  static void set_has_topmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& bottommargin(const TLayoutCurvedHVBase* msg);
  static void set_has_bottommargin(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TDataBinding& spacing(const TLayoutCurvedHVBase* msg);
  static void set_has_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TDataBinding& raster(const TLayoutCurvedHVBase* msg);
  static void set_has_raster(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::TDataBinding& originalignment(const TLayoutCurvedHVBase* msg);
  static void set_has_originalignment(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::TDataBinding& scrollareaheight(const TLayoutCurvedHVBase* msg);
  static void set_has_scrollareaheight(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TDataBinding&
TLayoutCurvedHVBase::_Internal::radius(const TLayoutCurvedHVBase* msg) {
  return *msg->_impl_.radius_;
}
const ::TDataBinding&
TLayoutCurvedHVBase::_Internal::origin(const TLayoutCurvedHVBase* msg) {
  return *msg->_impl_.origin_;
}
const ::TDataBinding&
TLayoutCurvedHVBase::_Internal::orientation(const TLayoutCurvedHVBase* msg) {
  return *msg->_impl_.orientation_;
}
const ::TDataBinding&
TLayoutCurvedHVBase::_Internal::leftmargin(const TLayoutCurvedHVBase* msg) {
  return *msg->_impl_.leftmargin_;
}
const ::TDataBinding&
TLayoutCurvedHVBase::_Internal::rightmargin(const TLayoutCurvedHVBase* msg) {
  return *msg->_impl_.rightmargin_;
}
const ::TDataBinding&
TLayoutCurvedHVBase::_Internal::topmargin(const TLayoutCurvedHVBase* msg) {
  return *msg->_impl_.topmargin_;
}
const ::TDataBinding&
TLayoutCurvedHVBase::_Internal::bottommargin(const TLayoutCurvedHVBase* msg) {
  return *msg->_impl_.bottommargin_;
}
const ::TDataBinding&
TLayoutCurvedHVBase::_Internal::spacing(const TLayoutCurvedHVBase* msg) {
  return *msg->_impl_.spacing_;
}
const ::TDataBinding&
TLayoutCurvedHVBase::_Internal::raster(const TLayoutCurvedHVBase* msg) {
  return *msg->_impl_.raster_;
}
const ::TDataBinding&
TLayoutCurvedHVBase::_Internal::originalignment(const TLayoutCurvedHVBase* msg) {
  return *msg->_impl_.originalignment_;
}
const ::TDataBinding&
TLayoutCurvedHVBase::_Internal::scrollareaheight(const TLayoutCurvedHVBase* msg) {
  return *msg->_impl_.scrollareaheight_;
}
void TLayoutCurvedHVBase::clear_radius() {
  if (_impl_.radius_ != nullptr) _impl_.radius_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutCurvedHVBase::clear_origin() {
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TLayoutCurvedHVBase::clear_orientation() {
  if (_impl_.orientation_ != nullptr) _impl_.orientation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutCurvedHVBase::clear_leftmargin() {
  if (_impl_.leftmargin_ != nullptr) _impl_.leftmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutCurvedHVBase::clear_rightmargin() {
  if (_impl_.rightmargin_ != nullptr) _impl_.rightmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutCurvedHVBase::clear_topmargin() {
  if (_impl_.topmargin_ != nullptr) _impl_.topmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TLayoutCurvedHVBase::clear_bottommargin() {
  if (_impl_.bottommargin_ != nullptr) _impl_.bottommargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void TLayoutCurvedHVBase::clear_spacing() {
  if (_impl_.spacing_ != nullptr) _impl_.spacing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void TLayoutCurvedHVBase::clear_raster() {
  if (_impl_.raster_ != nullptr) _impl_.raster_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void TLayoutCurvedHVBase::clear_originalignment() {
  if (_impl_.originalignment_ != nullptr) _impl_.originalignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
void TLayoutCurvedHVBase::clear_scrollareaheight() {
  if (_impl_.scrollareaheight_ != nullptr) _impl_.scrollareaheight_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
TLayoutCurvedHVBase::TLayoutCurvedHVBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutCurvedHVBase)
}
TLayoutCurvedHVBase::TLayoutCurvedHVBase(const TLayoutCurvedHVBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutCurvedHVBase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.radius_){nullptr}
    , decltype(_impl_.origin_){nullptr}
    , decltype(_impl_.orientation_){nullptr}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.spacing_){nullptr}
    , decltype(_impl_.raster_){nullptr}
    , decltype(_impl_.originalignment_){nullptr}
    , decltype(_impl_.scrollareaheight_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_radius()) {
    _this->_impl_.radius_ = new ::TDataBinding(*from._impl_.radius_);
  }
  if (from._internal_has_origin()) {
    _this->_impl_.origin_ = new ::TDataBinding(*from._impl_.origin_);
  }
  if (from._internal_has_orientation()) {
    _this->_impl_.orientation_ = new ::TDataBinding(*from._impl_.orientation_);
  }
  if (from._internal_has_leftmargin()) {
    _this->_impl_.leftmargin_ = new ::TDataBinding(*from._impl_.leftmargin_);
  }
  if (from._internal_has_rightmargin()) {
    _this->_impl_.rightmargin_ = new ::TDataBinding(*from._impl_.rightmargin_);
  }
  if (from._internal_has_topmargin()) {
    _this->_impl_.topmargin_ = new ::TDataBinding(*from._impl_.topmargin_);
  }
  if (from._internal_has_bottommargin()) {
    _this->_impl_.bottommargin_ = new ::TDataBinding(*from._impl_.bottommargin_);
  }
  if (from._internal_has_spacing()) {
    _this->_impl_.spacing_ = new ::TDataBinding(*from._impl_.spacing_);
  }
  if (from._internal_has_raster()) {
    _this->_impl_.raster_ = new ::TDataBinding(*from._impl_.raster_);
  }
  if (from._internal_has_originalignment()) {
    _this->_impl_.originalignment_ = new ::TDataBinding(*from._impl_.originalignment_);
  }
  if (from._internal_has_scrollareaheight()) {
    _this->_impl_.scrollareaheight_ = new ::TDataBinding(*from._impl_.scrollareaheight_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutCurvedHVBase)
}

inline void TLayoutCurvedHVBase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.radius_){nullptr}
    , decltype(_impl_.origin_){nullptr}
    , decltype(_impl_.orientation_){nullptr}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.spacing_){nullptr}
    , decltype(_impl_.raster_){nullptr}
    , decltype(_impl_.originalignment_){nullptr}
    , decltype(_impl_.scrollareaheight_){nullptr}
  };
}

TLayoutCurvedHVBase::~TLayoutCurvedHVBase() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutCurvedHVBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutCurvedHVBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.radius_;
  if (this != internal_default_instance()) delete _impl_.origin_;
  if (this != internal_default_instance()) delete _impl_.orientation_;
  if (this != internal_default_instance()) delete _impl_.leftmargin_;
  if (this != internal_default_instance()) delete _impl_.rightmargin_;
  if (this != internal_default_instance()) delete _impl_.topmargin_;
  if (this != internal_default_instance()) delete _impl_.bottommargin_;
  if (this != internal_default_instance()) delete _impl_.spacing_;
  if (this != internal_default_instance()) delete _impl_.raster_;
  if (this != internal_default_instance()) delete _impl_.originalignment_;
  if (this != internal_default_instance()) delete _impl_.scrollareaheight_;
}

void TLayoutCurvedHVBase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutCurvedHVBase::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutCurvedHVBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.radius_ != nullptr);
      _impl_.radius_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.orientation_ != nullptr);
      _impl_.orientation_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.leftmargin_ != nullptr);
      _impl_.leftmargin_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.rightmargin_ != nullptr);
      _impl_.rightmargin_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.topmargin_ != nullptr);
      _impl_.topmargin_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.bottommargin_ != nullptr);
      _impl_.bottommargin_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.spacing_ != nullptr);
      _impl_.spacing_->Clear();
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(_impl_.raster_ != nullptr);
      _impl_.raster_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(_impl_.originalignment_ != nullptr);
      _impl_.originalignment_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(_impl_.scrollareaheight_ != nullptr);
      _impl_.scrollareaheight_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutCurvedHVBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TDataBinding radius = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_radius(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TDataBinding origin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_origin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding orientation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding leftMargin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_leftmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rightMargin = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_rightmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding topMargin = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_topmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding bottomMargin = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_bottommargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding spacing = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding raster = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_raster(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding originAlignment = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_originalignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding scrollAreaHeight = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_scrollareaheight(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutCurvedHVBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutCurvedHVBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TDataBinding radius = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::radius(this),
        _Internal::radius(this).GetCachedSize(), target, stream);
  }

  // required .TDataBinding origin = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::origin(this),
        _Internal::origin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding orientation = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::orientation(this),
        _Internal::orientation(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding leftMargin = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::leftmargin(this),
        _Internal::leftmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rightMargin = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::rightmargin(this),
        _Internal::rightmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding topMargin = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::topmargin(this),
        _Internal::topmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding bottomMargin = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::bottommargin(this),
        _Internal::bottommargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding spacing = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::spacing(this),
        _Internal::spacing(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding raster = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::raster(this),
        _Internal::raster(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding originAlignment = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::originalignment(this),
        _Internal::originalignment(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding scrollAreaHeight = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::scrollareaheight(this),
        _Internal::scrollareaheight(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutCurvedHVBase)
  return target;
}

size_t TLayoutCurvedHVBase::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutCurvedHVBase)
  size_t total_size = 0;

  if (_internal_has_radius()) {
    // required .TDataBinding radius = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.radius_);
  }

  if (_internal_has_origin()) {
    // required .TDataBinding origin = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.origin_);
  }

  return total_size;
}
size_t TLayoutCurvedHVBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutCurvedHVBase)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TDataBinding radius = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.radius_);

    // required .TDataBinding origin = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.origin_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000fcu) {
    // optional .TDataBinding orientation = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.orientation_);
    }

    // optional .TDataBinding leftMargin = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.leftmargin_);
    }

    // optional .TDataBinding rightMargin = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rightmargin_);
    }

    // optional .TDataBinding topMargin = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.topmargin_);
    }

    // optional .TDataBinding bottomMargin = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bottommargin_);
    }

    // optional .TDataBinding spacing = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.spacing_);
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional .TDataBinding raster = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.raster_);
    }

    // optional .TDataBinding originAlignment = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.originalignment_);
    }

    // optional .TDataBinding scrollAreaHeight = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.scrollareaheight_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutCurvedHVBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutCurvedHVBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutCurvedHVBase::GetClassData() const { return &_class_data_; }


void TLayoutCurvedHVBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutCurvedHVBase*>(&to_msg);
  auto& from = static_cast<const TLayoutCurvedHVBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutCurvedHVBase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_radius()->::TDataBinding::MergeFrom(
          from._internal_radius());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_origin()->::TDataBinding::MergeFrom(
          from._internal_origin());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_orientation()->::TDataBinding::MergeFrom(
          from._internal_orientation());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_leftmargin()->::TDataBinding::MergeFrom(
          from._internal_leftmargin());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_rightmargin()->::TDataBinding::MergeFrom(
          from._internal_rightmargin());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_topmargin()->::TDataBinding::MergeFrom(
          from._internal_topmargin());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_bottommargin()->::TDataBinding::MergeFrom(
          from._internal_bottommargin());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_spacing()->::TDataBinding::MergeFrom(
          from._internal_spacing());
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_raster()->::TDataBinding::MergeFrom(
          from._internal_raster());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_originalignment()->::TDataBinding::MergeFrom(
          from._internal_originalignment());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_scrollareaheight()->::TDataBinding::MergeFrom(
          from._internal_scrollareaheight());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutCurvedHVBase::CopyFrom(const TLayoutCurvedHVBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutCurvedHVBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutCurvedHVBase::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_radius()) {
    if (!_impl_.radius_->IsInitialized()) return false;
  }
  if (_internal_has_origin()) {
    if (!_impl_.origin_->IsInitialized()) return false;
  }
  if (_internal_has_orientation()) {
    if (!_impl_.orientation_->IsInitialized()) return false;
  }
  if (_internal_has_leftmargin()) {
    if (!_impl_.leftmargin_->IsInitialized()) return false;
  }
  if (_internal_has_rightmargin()) {
    if (!_impl_.rightmargin_->IsInitialized()) return false;
  }
  if (_internal_has_topmargin()) {
    if (!_impl_.topmargin_->IsInitialized()) return false;
  }
  if (_internal_has_bottommargin()) {
    if (!_impl_.bottommargin_->IsInitialized()) return false;
  }
  if (_internal_has_spacing()) {
    if (!_impl_.spacing_->IsInitialized()) return false;
  }
  if (_internal_has_raster()) {
    if (!_impl_.raster_->IsInitialized()) return false;
  }
  if (_internal_has_originalignment()) {
    if (!_impl_.originalignment_->IsInitialized()) return false;
  }
  if (_internal_has_scrollareaheight()) {
    if (!_impl_.scrollareaheight_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutCurvedHVBase::InternalSwap(TLayoutCurvedHVBase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutCurvedHVBase, _impl_.scrollareaheight_)
      + sizeof(TLayoutCurvedHVBase::_impl_.scrollareaheight_)
      - PROTOBUF_FIELD_OFFSET(TLayoutCurvedHVBase, _impl_.radius_)>(
          reinterpret_cast<char*>(&_impl_.radius_),
          reinterpret_cast<char*>(&other->_impl_.radius_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutCurvedHVBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[83]);
}

// ===================================================================

class TLayoutHorizontalElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHorizontalElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHorizontalElement, _impl_._has_bits_);
  static const ::HmiWidget::THVBaseElement& base(const TLayoutHorizontalElement* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::THVBaseElement&
TLayoutHorizontalElement::_Internal::base(const TLayoutHorizontalElement* msg) {
  return *msg->_impl_.base_;
}
TLayoutHorizontalElement::TLayoutHorizontalElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHorizontalElement)
}
TLayoutHorizontalElement::TLayoutHorizontalElement(const TLayoutHorizontalElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHorizontalElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::THVBaseElement(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHorizontalElement)
}

inline void TLayoutHorizontalElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutHorizontalElement::~TLayoutHorizontalElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHorizontalElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHorizontalElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutHorizontalElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHorizontalElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHorizontalElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHorizontalElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.THVBaseElement base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHorizontalElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHorizontalElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.THVBaseElement base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHorizontalElement)
  return target;
}

size_t TLayoutHorizontalElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHorizontalElement)
  size_t total_size = 0;

  // required .HmiWidget.THVBaseElement base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHorizontalElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHorizontalElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHorizontalElement::GetClassData() const { return &_class_data_; }


void TLayoutHorizontalElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHorizontalElement*>(&to_msg);
  auto& from = static_cast<const TLayoutHorizontalElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHorizontalElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::THVBaseElement::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHorizontalElement::CopyFrom(const TLayoutHorizontalElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHorizontalElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHorizontalElement::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHorizontalElement::InternalSwap(TLayoutHorizontalElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHorizontalElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[84]);
}

// ===================================================================

class TLayoutVerticalElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVerticalElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVerticalElement, _impl_._has_bits_);
  static const ::HmiWidget::THVBaseElement& base(const TLayoutVerticalElement* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::THVBaseElement&
TLayoutVerticalElement::_Internal::base(const TLayoutVerticalElement* msg) {
  return *msg->_impl_.base_;
}
TLayoutVerticalElement::TLayoutVerticalElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVerticalElement)
}
TLayoutVerticalElement::TLayoutVerticalElement(const TLayoutVerticalElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVerticalElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::THVBaseElement(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVerticalElement)
}

inline void TLayoutVerticalElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutVerticalElement::~TLayoutVerticalElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVerticalElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVerticalElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutVerticalElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVerticalElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVerticalElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVerticalElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.THVBaseElement base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVerticalElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVerticalElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.THVBaseElement base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVerticalElement)
  return target;
}

size_t TLayoutVerticalElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVerticalElement)
  size_t total_size = 0;

  // required .HmiWidget.THVBaseElement base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVerticalElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVerticalElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVerticalElement::GetClassData() const { return &_class_data_; }


void TLayoutVerticalElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVerticalElement*>(&to_msg);
  auto& from = static_cast<const TLayoutVerticalElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVerticalElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::THVBaseElement::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVerticalElement::CopyFrom(const TLayoutVerticalElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVerticalElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVerticalElement::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVerticalElement::InternalSwap(TLayoutVerticalElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVerticalElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[85]);
}

// ===================================================================

class THVBaseElement::_Internal {
 public:
  using HasBits = decltype(std::declval<THVBaseElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(THVBaseElement, _impl_._has_bits_);
  static const ::TIdentifier& childidentifier(const THVBaseElement* msg);
  static void set_has_childidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayout& nestedlayout(const THVBaseElement* msg);
  static void set_has_nestedlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& size(const THVBaseElement* msg);
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& stretchfactor(const THVBaseElement* msg);
  static void set_has_stretchfactor(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& sizepolicy(const THVBaseElement* msg);
  static void set_has_sizepolicy(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& alignment(const THVBaseElement* msg);
  static void set_has_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::TIdentifier&
THVBaseElement::_Internal::childidentifier(const THVBaseElement* msg) {
  return *msg->_impl_.childidentifier_;
}
const ::HmiWidget::TLayout&
THVBaseElement::_Internal::nestedlayout(const THVBaseElement* msg) {
  return *msg->_impl_.nestedlayout_;
}
const ::TDataBinding&
THVBaseElement::_Internal::size(const THVBaseElement* msg) {
  return *msg->_impl_.size_;
}
const ::TDataBinding&
THVBaseElement::_Internal::stretchfactor(const THVBaseElement* msg) {
  return *msg->_impl_.stretchfactor_;
}
const ::TDataBinding&
THVBaseElement::_Internal::sizepolicy(const THVBaseElement* msg) {
  return *msg->_impl_.sizepolicy_;
}
const ::TDataBinding&
THVBaseElement::_Internal::alignment(const THVBaseElement* msg) {
  return *msg->_impl_.alignment_;
}
void THVBaseElement::clear_childidentifier() {
  if (_impl_.childidentifier_ != nullptr) _impl_.childidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void THVBaseElement::clear_size() {
  if (_impl_.size_ != nullptr) _impl_.size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void THVBaseElement::clear_stretchfactor() {
  if (_impl_.stretchfactor_ != nullptr) _impl_.stretchfactor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void THVBaseElement::clear_sizepolicy() {
  if (_impl_.sizepolicy_ != nullptr) _impl_.sizepolicy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void THVBaseElement::clear_alignment() {
  if (_impl_.alignment_ != nullptr) _impl_.alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
THVBaseElement::THVBaseElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.THVBaseElement)
}
THVBaseElement::THVBaseElement(const THVBaseElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  THVBaseElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.stretchfactor_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
    , decltype(_impl_.alignment_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_childidentifier()) {
    _this->_impl_.childidentifier_ = new ::TIdentifier(*from._impl_.childidentifier_);
  }
  if (from._internal_has_nestedlayout()) {
    _this->_impl_.nestedlayout_ = new ::HmiWidget::TLayout(*from._impl_.nestedlayout_);
  }
  if (from._internal_has_size()) {
    _this->_impl_.size_ = new ::TDataBinding(*from._impl_.size_);
  }
  if (from._internal_has_stretchfactor()) {
    _this->_impl_.stretchfactor_ = new ::TDataBinding(*from._impl_.stretchfactor_);
  }
  if (from._internal_has_sizepolicy()) {
    _this->_impl_.sizepolicy_ = new ::TDataBinding(*from._impl_.sizepolicy_);
  }
  if (from._internal_has_alignment()) {
    _this->_impl_.alignment_ = new ::TDataBinding(*from._impl_.alignment_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.THVBaseElement)
}

inline void THVBaseElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.stretchfactor_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
  };
}

THVBaseElement::~THVBaseElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.THVBaseElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void THVBaseElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.childidentifier_;
  if (this != internal_default_instance()) delete _impl_.nestedlayout_;
  if (this != internal_default_instance()) delete _impl_.size_;
  if (this != internal_default_instance()) delete _impl_.stretchfactor_;
  if (this != internal_default_instance()) delete _impl_.sizepolicy_;
  if (this != internal_default_instance()) delete _impl_.alignment_;
}

void THVBaseElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void THVBaseElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.THVBaseElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.childidentifier_ != nullptr);
      _impl_.childidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.nestedlayout_ != nullptr);
      _impl_.nestedlayout_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.size_ != nullptr);
      _impl_.size_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.stretchfactor_ != nullptr);
      _impl_.stretchfactor_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.sizepolicy_ != nullptr);
      _impl_.sizepolicy_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.alignment_ != nullptr);
      _impl_.alignment_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* THVBaseElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier childIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_childidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayout nestedLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nestedlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding stretchFactor = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_stretchfactor(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding sizePolicy = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_sizepolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding alignment = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* THVBaseElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.THVBaseElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier childIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::childidentifier(this),
        _Internal::childidentifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayout nestedLayout = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::nestedlayout(this),
        _Internal::nestedlayout(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::size(this),
        _Internal::size(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding stretchFactor = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::stretchfactor(this),
        _Internal::stretchfactor(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding sizePolicy = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::sizepolicy(this),
        _Internal::sizepolicy(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding alignment = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::alignment(this),
        _Internal::alignment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.THVBaseElement)
  return target;
}

size_t THVBaseElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.THVBaseElement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .TIdentifier childIdentifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childidentifier_);
    }

    // optional .HmiWidget.TLayout nestedLayout = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nestedlayout_);
    }

    // optional .TDataBinding size = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.size_);
    }

    // optional .TDataBinding stretchFactor = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stretchfactor_);
    }

    // optional .TDataBinding sizePolicy = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sizepolicy_);
    }

    // optional .TDataBinding alignment = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.alignment_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData THVBaseElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    THVBaseElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*THVBaseElement::GetClassData() const { return &_class_data_; }


void THVBaseElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<THVBaseElement*>(&to_msg);
  auto& from = static_cast<const THVBaseElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.THVBaseElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_childidentifier()->::TIdentifier::MergeFrom(
          from._internal_childidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nestedlayout()->::HmiWidget::TLayout::MergeFrom(
          from._internal_nestedlayout());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_size()->::TDataBinding::MergeFrom(
          from._internal_size());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_stretchfactor()->::TDataBinding::MergeFrom(
          from._internal_stretchfactor());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_sizepolicy()->::TDataBinding::MergeFrom(
          from._internal_sizepolicy());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_alignment()->::TDataBinding::MergeFrom(
          from._internal_alignment());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void THVBaseElement::CopyFrom(const THVBaseElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.THVBaseElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THVBaseElement::IsInitialized() const {
  if (_internal_has_nestedlayout()) {
    if (!_impl_.nestedlayout_->IsInitialized()) return false;
  }
  if (_internal_has_size()) {
    if (!_impl_.size_->IsInitialized()) return false;
  }
  if (_internal_has_stretchfactor()) {
    if (!_impl_.stretchfactor_->IsInitialized()) return false;
  }
  if (_internal_has_sizepolicy()) {
    if (!_impl_.sizepolicy_->IsInitialized()) return false;
  }
  if (_internal_has_alignment()) {
    if (!_impl_.alignment_->IsInitialized()) return false;
  }
  return true;
}

void THVBaseElement::InternalSwap(THVBaseElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(THVBaseElement, _impl_.alignment_)
      + sizeof(THVBaseElement::_impl_.alignment_)
      - PROTOBUF_FIELD_OFFSET(THVBaseElement, _impl_.childidentifier_)>(
          reinterpret_cast<char*>(&_impl_.childidentifier_),
          reinterpret_cast<char*>(&other->_impl_.childidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata THVBaseElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[86]);
}

// ===================================================================

class TLayoutHorizontalDynamicElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHorizontalDynamicElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHorizontalDynamicElement, _impl_._has_bits_);
  static const ::HmiWidget::THVDynamicBaseElement& base(const TLayoutHorizontalDynamicElement* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::THVDynamicBaseElement&
TLayoutHorizontalDynamicElement::_Internal::base(const TLayoutHorizontalDynamicElement* msg) {
  return *msg->_impl_.base_;
}
TLayoutHorizontalDynamicElement::TLayoutHorizontalDynamicElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHorizontalDynamicElement)
}
TLayoutHorizontalDynamicElement::TLayoutHorizontalDynamicElement(const TLayoutHorizontalDynamicElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHorizontalDynamicElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::THVDynamicBaseElement(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHorizontalDynamicElement)
}

inline void TLayoutHorizontalDynamicElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutHorizontalDynamicElement::~TLayoutHorizontalDynamicElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHorizontalDynamicElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHorizontalDynamicElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutHorizontalDynamicElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHorizontalDynamicElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHorizontalDynamicElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHorizontalDynamicElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.THVDynamicBaseElement base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHorizontalDynamicElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHorizontalDynamicElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.THVDynamicBaseElement base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHorizontalDynamicElement)
  return target;
}

size_t TLayoutHorizontalDynamicElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHorizontalDynamicElement)
  size_t total_size = 0;

  // required .HmiWidget.THVDynamicBaseElement base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHorizontalDynamicElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHorizontalDynamicElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHorizontalDynamicElement::GetClassData() const { return &_class_data_; }


void TLayoutHorizontalDynamicElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHorizontalDynamicElement*>(&to_msg);
  auto& from = static_cast<const TLayoutHorizontalDynamicElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHorizontalDynamicElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::THVDynamicBaseElement::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHorizontalDynamicElement::CopyFrom(const TLayoutHorizontalDynamicElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHorizontalDynamicElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHorizontalDynamicElement::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHorizontalDynamicElement::InternalSwap(TLayoutHorizontalDynamicElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHorizontalDynamicElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[87]);
}

// ===================================================================

class TLayoutVerticalDynamicElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVerticalDynamicElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVerticalDynamicElement, _impl_._has_bits_);
  static const ::HmiWidget::THVDynamicBaseElement& base(const TLayoutVerticalDynamicElement* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::THVDynamicBaseElement&
TLayoutVerticalDynamicElement::_Internal::base(const TLayoutVerticalDynamicElement* msg) {
  return *msg->_impl_.base_;
}
TLayoutVerticalDynamicElement::TLayoutVerticalDynamicElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVerticalDynamicElement)
}
TLayoutVerticalDynamicElement::TLayoutVerticalDynamicElement(const TLayoutVerticalDynamicElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVerticalDynamicElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::THVDynamicBaseElement(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVerticalDynamicElement)
}

inline void TLayoutVerticalDynamicElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutVerticalDynamicElement::~TLayoutVerticalDynamicElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVerticalDynamicElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVerticalDynamicElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutVerticalDynamicElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVerticalDynamicElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVerticalDynamicElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVerticalDynamicElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.THVDynamicBaseElement base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVerticalDynamicElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVerticalDynamicElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.THVDynamicBaseElement base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVerticalDynamicElement)
  return target;
}

size_t TLayoutVerticalDynamicElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVerticalDynamicElement)
  size_t total_size = 0;

  // required .HmiWidget.THVDynamicBaseElement base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVerticalDynamicElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVerticalDynamicElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVerticalDynamicElement::GetClassData() const { return &_class_data_; }


void TLayoutVerticalDynamicElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVerticalDynamicElement*>(&to_msg);
  auto& from = static_cast<const TLayoutVerticalDynamicElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVerticalDynamicElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::THVDynamicBaseElement::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVerticalDynamicElement::CopyFrom(const TLayoutVerticalDynamicElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVerticalDynamicElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVerticalDynamicElement::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVerticalDynamicElement::InternalSwap(TLayoutVerticalDynamicElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVerticalDynamicElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[88]);
}

// ===================================================================

class THVDynamicBaseElement::_Internal {
 public:
  using HasBits = decltype(std::declval<THVDynamicBaseElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(THVDynamicBaseElement, _impl_._has_bits_);
  static const ::TIdentifier& childidentifier(const THVDynamicBaseElement* msg);
  static void set_has_childidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayout& nestedlayout(const THVDynamicBaseElement* msg);
  static void set_has_nestedlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& sizemin(const THVDynamicBaseElement* msg);
  static void set_has_sizemin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& sizemax(const THVDynamicBaseElement* msg);
  static void set_has_sizemax(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& priority(const THVDynamicBaseElement* msg);
  static void set_has_priority(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& sizepolicy(const THVDynamicBaseElement* msg);
  static void set_has_sizepolicy(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& alignment(const THVDynamicBaseElement* msg);
  static void set_has_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::TIdentifier&
THVDynamicBaseElement::_Internal::childidentifier(const THVDynamicBaseElement* msg) {
  return *msg->_impl_.childidentifier_;
}
const ::HmiWidget::TLayout&
THVDynamicBaseElement::_Internal::nestedlayout(const THVDynamicBaseElement* msg) {
  return *msg->_impl_.nestedlayout_;
}
const ::TDataBinding&
THVDynamicBaseElement::_Internal::sizemin(const THVDynamicBaseElement* msg) {
  return *msg->_impl_.sizemin_;
}
const ::TDataBinding&
THVDynamicBaseElement::_Internal::sizemax(const THVDynamicBaseElement* msg) {
  return *msg->_impl_.sizemax_;
}
const ::TDataBinding&
THVDynamicBaseElement::_Internal::priority(const THVDynamicBaseElement* msg) {
  return *msg->_impl_.priority_;
}
const ::TDataBinding&
THVDynamicBaseElement::_Internal::sizepolicy(const THVDynamicBaseElement* msg) {
  return *msg->_impl_.sizepolicy_;
}
const ::TDataBinding&
THVDynamicBaseElement::_Internal::alignment(const THVDynamicBaseElement* msg) {
  return *msg->_impl_.alignment_;
}
void THVDynamicBaseElement::clear_childidentifier() {
  if (_impl_.childidentifier_ != nullptr) _impl_.childidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void THVDynamicBaseElement::clear_sizemin() {
  if (_impl_.sizemin_ != nullptr) _impl_.sizemin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void THVDynamicBaseElement::clear_sizemax() {
  if (_impl_.sizemax_ != nullptr) _impl_.sizemax_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void THVDynamicBaseElement::clear_priority() {
  if (_impl_.priority_ != nullptr) _impl_.priority_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void THVDynamicBaseElement::clear_sizepolicy() {
  if (_impl_.sizepolicy_ != nullptr) _impl_.sizepolicy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void THVDynamicBaseElement::clear_alignment() {
  if (_impl_.alignment_ != nullptr) _impl_.alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
THVDynamicBaseElement::THVDynamicBaseElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.THVDynamicBaseElement)
}
THVDynamicBaseElement::THVDynamicBaseElement(const THVDynamicBaseElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  THVDynamicBaseElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.sizemin_){nullptr}
    , decltype(_impl_.sizemax_){nullptr}
    , decltype(_impl_.priority_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
    , decltype(_impl_.alignment_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_childidentifier()) {
    _this->_impl_.childidentifier_ = new ::TIdentifier(*from._impl_.childidentifier_);
  }
  if (from._internal_has_nestedlayout()) {
    _this->_impl_.nestedlayout_ = new ::HmiWidget::TLayout(*from._impl_.nestedlayout_);
  }
  if (from._internal_has_sizemin()) {
    _this->_impl_.sizemin_ = new ::TDataBinding(*from._impl_.sizemin_);
  }
  if (from._internal_has_sizemax()) {
    _this->_impl_.sizemax_ = new ::TDataBinding(*from._impl_.sizemax_);
  }
  if (from._internal_has_priority()) {
    _this->_impl_.priority_ = new ::TDataBinding(*from._impl_.priority_);
  }
  if (from._internal_has_sizepolicy()) {
    _this->_impl_.sizepolicy_ = new ::TDataBinding(*from._impl_.sizepolicy_);
  }
  if (from._internal_has_alignment()) {
    _this->_impl_.alignment_ = new ::TDataBinding(*from._impl_.alignment_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.THVDynamicBaseElement)
}

inline void THVDynamicBaseElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.sizemin_){nullptr}
    , decltype(_impl_.sizemax_){nullptr}
    , decltype(_impl_.priority_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
  };
}

THVDynamicBaseElement::~THVDynamicBaseElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.THVDynamicBaseElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void THVDynamicBaseElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.childidentifier_;
  if (this != internal_default_instance()) delete _impl_.nestedlayout_;
  if (this != internal_default_instance()) delete _impl_.sizemin_;
  if (this != internal_default_instance()) delete _impl_.sizemax_;
  if (this != internal_default_instance()) delete _impl_.priority_;
  if (this != internal_default_instance()) delete _impl_.sizepolicy_;
  if (this != internal_default_instance()) delete _impl_.alignment_;
}

void THVDynamicBaseElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void THVDynamicBaseElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.THVDynamicBaseElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.childidentifier_ != nullptr);
      _impl_.childidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.nestedlayout_ != nullptr);
      _impl_.nestedlayout_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.sizemin_ != nullptr);
      _impl_.sizemin_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.sizemax_ != nullptr);
      _impl_.sizemax_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.priority_ != nullptr);
      _impl_.priority_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.sizepolicy_ != nullptr);
      _impl_.sizepolicy_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.alignment_ != nullptr);
      _impl_.alignment_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* THVDynamicBaseElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier childIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_childidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayout nestedLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nestedlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding sizeMin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_sizemin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding sizeMax = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_sizemax(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding priority = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_priority(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding sizePolicy = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_sizepolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding alignment = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* THVDynamicBaseElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.THVDynamicBaseElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier childIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::childidentifier(this),
        _Internal::childidentifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayout nestedLayout = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::nestedlayout(this),
        _Internal::nestedlayout(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding sizeMin = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::sizemin(this),
        _Internal::sizemin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding sizeMax = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::sizemax(this),
        _Internal::sizemax(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding priority = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::priority(this),
        _Internal::priority(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding sizePolicy = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::sizepolicy(this),
        _Internal::sizepolicy(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding alignment = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::alignment(this),
        _Internal::alignment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.THVDynamicBaseElement)
  return target;
}

size_t THVDynamicBaseElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.THVDynamicBaseElement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .TIdentifier childIdentifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childidentifier_);
    }

    // optional .HmiWidget.TLayout nestedLayout = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nestedlayout_);
    }

    // optional .TDataBinding sizeMin = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sizemin_);
    }

    // optional .TDataBinding sizeMax = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sizemax_);
    }

    // optional .TDataBinding priority = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.priority_);
    }

    // optional .TDataBinding sizePolicy = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sizepolicy_);
    }

    // optional .TDataBinding alignment = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.alignment_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData THVDynamicBaseElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    THVDynamicBaseElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*THVDynamicBaseElement::GetClassData() const { return &_class_data_; }


void THVDynamicBaseElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<THVDynamicBaseElement*>(&to_msg);
  auto& from = static_cast<const THVDynamicBaseElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.THVDynamicBaseElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_childidentifier()->::TIdentifier::MergeFrom(
          from._internal_childidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nestedlayout()->::HmiWidget::TLayout::MergeFrom(
          from._internal_nestedlayout());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_sizemin()->::TDataBinding::MergeFrom(
          from._internal_sizemin());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_sizemax()->::TDataBinding::MergeFrom(
          from._internal_sizemax());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_priority()->::TDataBinding::MergeFrom(
          from._internal_priority());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_sizepolicy()->::TDataBinding::MergeFrom(
          from._internal_sizepolicy());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_alignment()->::TDataBinding::MergeFrom(
          from._internal_alignment());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void THVDynamicBaseElement::CopyFrom(const THVDynamicBaseElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.THVDynamicBaseElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THVDynamicBaseElement::IsInitialized() const {
  if (_internal_has_nestedlayout()) {
    if (!_impl_.nestedlayout_->IsInitialized()) return false;
  }
  if (_internal_has_sizemin()) {
    if (!_impl_.sizemin_->IsInitialized()) return false;
  }
  if (_internal_has_sizemax()) {
    if (!_impl_.sizemax_->IsInitialized()) return false;
  }
  if (_internal_has_priority()) {
    if (!_impl_.priority_->IsInitialized()) return false;
  }
  if (_internal_has_sizepolicy()) {
    if (!_impl_.sizepolicy_->IsInitialized()) return false;
  }
  if (_internal_has_alignment()) {
    if (!_impl_.alignment_->IsInitialized()) return false;
  }
  return true;
}

void THVDynamicBaseElement::InternalSwap(THVDynamicBaseElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(THVDynamicBaseElement, _impl_.alignment_)
      + sizeof(THVDynamicBaseElement::_impl_.alignment_)
      - PROTOBUF_FIELD_OFFSET(THVDynamicBaseElement, _impl_.childidentifier_)>(
          reinterpret_cast<char*>(&_impl_.childidentifier_),
          reinterpret_cast<char*>(&other->_impl_.childidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata THVDynamicBaseElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[89]);
}

// ===================================================================

class TLayoutHorizontalListElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutHorizontalListElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutHorizontalListElement, _impl_._has_bits_);
  static const ::HmiWidget::THVListBaseElement& base(const TLayoutHorizontalListElement* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::THVListBaseElement&
TLayoutHorizontalListElement::_Internal::base(const TLayoutHorizontalListElement* msg) {
  return *msg->_impl_.base_;
}
TLayoutHorizontalListElement::TLayoutHorizontalListElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutHorizontalListElement)
}
TLayoutHorizontalListElement::TLayoutHorizontalListElement(const TLayoutHorizontalListElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutHorizontalListElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::THVListBaseElement(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutHorizontalListElement)
}

inline void TLayoutHorizontalListElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutHorizontalListElement::~TLayoutHorizontalListElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutHorizontalListElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutHorizontalListElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutHorizontalListElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutHorizontalListElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutHorizontalListElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutHorizontalListElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.THVListBaseElement base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutHorizontalListElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutHorizontalListElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.THVListBaseElement base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutHorizontalListElement)
  return target;
}

size_t TLayoutHorizontalListElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutHorizontalListElement)
  size_t total_size = 0;

  // required .HmiWidget.THVListBaseElement base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutHorizontalListElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutHorizontalListElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutHorizontalListElement::GetClassData() const { return &_class_data_; }


void TLayoutHorizontalListElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutHorizontalListElement*>(&to_msg);
  auto& from = static_cast<const TLayoutHorizontalListElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutHorizontalListElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::THVListBaseElement::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutHorizontalListElement::CopyFrom(const TLayoutHorizontalListElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutHorizontalListElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutHorizontalListElement::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutHorizontalListElement::InternalSwap(TLayoutHorizontalListElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutHorizontalListElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[90]);
}

// ===================================================================

class TLayoutVerticalListElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutVerticalListElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutVerticalListElement, _impl_._has_bits_);
  static const ::HmiWidget::THVListBaseElement& base(const TLayoutVerticalListElement* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::THVListBaseElement&
TLayoutVerticalListElement::_Internal::base(const TLayoutVerticalListElement* msg) {
  return *msg->_impl_.base_;
}
TLayoutVerticalListElement::TLayoutVerticalListElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutVerticalListElement)
}
TLayoutVerticalListElement::TLayoutVerticalListElement(const TLayoutVerticalListElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutVerticalListElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::THVListBaseElement(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutVerticalListElement)
}

inline void TLayoutVerticalListElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutVerticalListElement::~TLayoutVerticalListElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutVerticalListElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutVerticalListElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutVerticalListElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutVerticalListElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutVerticalListElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutVerticalListElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.THVListBaseElement base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutVerticalListElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutVerticalListElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.THVListBaseElement base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutVerticalListElement)
  return target;
}

size_t TLayoutVerticalListElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutVerticalListElement)
  size_t total_size = 0;

  // required .HmiWidget.THVListBaseElement base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutVerticalListElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutVerticalListElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutVerticalListElement::GetClassData() const { return &_class_data_; }


void TLayoutVerticalListElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutVerticalListElement*>(&to_msg);
  auto& from = static_cast<const TLayoutVerticalListElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutVerticalListElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::THVListBaseElement::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutVerticalListElement::CopyFrom(const TLayoutVerticalListElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutVerticalListElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutVerticalListElement::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutVerticalListElement::InternalSwap(TLayoutVerticalListElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutVerticalListElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[91]);
}

// ===================================================================

class THVListBaseElement::_Internal {
 public:
  using HasBits = decltype(std::declval<THVListBaseElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(THVListBaseElement, _impl_._has_bits_);
  static const ::TIdentifier& childidentifier(const THVListBaseElement* msg);
  static void set_has_childidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayout& nestedlayout(const THVListBaseElement* msg);
  static void set_has_nestedlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& size(const THVListBaseElement* msg);
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& sizemin(const THVListBaseElement* msg);
  static void set_has_sizemin(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& sizepolicy(const THVListBaseElement* msg);
  static void set_has_sizepolicy(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& alignment(const THVListBaseElement* msg);
  static void set_has_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::TIdentifier&
THVListBaseElement::_Internal::childidentifier(const THVListBaseElement* msg) {
  return *msg->_impl_.childidentifier_;
}
const ::HmiWidget::TLayout&
THVListBaseElement::_Internal::nestedlayout(const THVListBaseElement* msg) {
  return *msg->_impl_.nestedlayout_;
}
const ::TDataBinding&
THVListBaseElement::_Internal::size(const THVListBaseElement* msg) {
  return *msg->_impl_.size_;
}
const ::TDataBinding&
THVListBaseElement::_Internal::sizemin(const THVListBaseElement* msg) {
  return *msg->_impl_.sizemin_;
}
const ::TDataBinding&
THVListBaseElement::_Internal::sizepolicy(const THVListBaseElement* msg) {
  return *msg->_impl_.sizepolicy_;
}
const ::TDataBinding&
THVListBaseElement::_Internal::alignment(const THVListBaseElement* msg) {
  return *msg->_impl_.alignment_;
}
void THVListBaseElement::clear_childidentifier() {
  if (_impl_.childidentifier_ != nullptr) _impl_.childidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void THVListBaseElement::clear_size() {
  if (_impl_.size_ != nullptr) _impl_.size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void THVListBaseElement::clear_sizemin() {
  if (_impl_.sizemin_ != nullptr) _impl_.sizemin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void THVListBaseElement::clear_sizepolicy() {
  if (_impl_.sizepolicy_ != nullptr) _impl_.sizepolicy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void THVListBaseElement::clear_alignment() {
  if (_impl_.alignment_ != nullptr) _impl_.alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
THVListBaseElement::THVListBaseElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.THVListBaseElement)
}
THVListBaseElement::THVListBaseElement(const THVListBaseElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  THVListBaseElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
    , decltype(_impl_.sizemin_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_childidentifier()) {
    _this->_impl_.childidentifier_ = new ::TIdentifier(*from._impl_.childidentifier_);
  }
  if (from._internal_has_nestedlayout()) {
    _this->_impl_.nestedlayout_ = new ::HmiWidget::TLayout(*from._impl_.nestedlayout_);
  }
  if (from._internal_has_size()) {
    _this->_impl_.size_ = new ::TDataBinding(*from._impl_.size_);
  }
  if (from._internal_has_alignment()) {
    _this->_impl_.alignment_ = new ::TDataBinding(*from._impl_.alignment_);
  }
  if (from._internal_has_sizepolicy()) {
    _this->_impl_.sizepolicy_ = new ::TDataBinding(*from._impl_.sizepolicy_);
  }
  if (from._internal_has_sizemin()) {
    _this->_impl_.sizemin_ = new ::TDataBinding(*from._impl_.sizemin_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.THVListBaseElement)
}

inline void THVListBaseElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
    , decltype(_impl_.sizemin_){nullptr}
  };
}

THVListBaseElement::~THVListBaseElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.THVListBaseElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void THVListBaseElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.childidentifier_;
  if (this != internal_default_instance()) delete _impl_.nestedlayout_;
  if (this != internal_default_instance()) delete _impl_.size_;
  if (this != internal_default_instance()) delete _impl_.alignment_;
  if (this != internal_default_instance()) delete _impl_.sizepolicy_;
  if (this != internal_default_instance()) delete _impl_.sizemin_;
}

void THVListBaseElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void THVListBaseElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.THVListBaseElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.childidentifier_ != nullptr);
      _impl_.childidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.nestedlayout_ != nullptr);
      _impl_.nestedlayout_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.size_ != nullptr);
      _impl_.size_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.alignment_ != nullptr);
      _impl_.alignment_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.sizepolicy_ != nullptr);
      _impl_.sizepolicy_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.sizemin_ != nullptr);
      _impl_.sizemin_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* THVListBaseElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier childIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_childidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayout nestedLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nestedlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding alignment = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding sizePolicy = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_sizepolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding sizeMin = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_sizemin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* THVListBaseElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.THVListBaseElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier childIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::childidentifier(this),
        _Internal::childidentifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayout nestedLayout = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::nestedlayout(this),
        _Internal::nestedlayout(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::size(this),
        _Internal::size(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding alignment = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::alignment(this),
        _Internal::alignment(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding sizePolicy = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::sizepolicy(this),
        _Internal::sizepolicy(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding sizeMin = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::sizemin(this),
        _Internal::sizemin(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.THVListBaseElement)
  return target;
}

size_t THVListBaseElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.THVListBaseElement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .TIdentifier childIdentifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childidentifier_);
    }

    // optional .HmiWidget.TLayout nestedLayout = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nestedlayout_);
    }

    // optional .TDataBinding size = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.size_);
    }

    // optional .TDataBinding alignment = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.alignment_);
    }

    // optional .TDataBinding sizePolicy = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sizepolicy_);
    }

    // optional .TDataBinding sizeMin = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sizemin_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData THVListBaseElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    THVListBaseElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*THVListBaseElement::GetClassData() const { return &_class_data_; }


void THVListBaseElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<THVListBaseElement*>(&to_msg);
  auto& from = static_cast<const THVListBaseElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.THVListBaseElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_childidentifier()->::TIdentifier::MergeFrom(
          from._internal_childidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nestedlayout()->::HmiWidget::TLayout::MergeFrom(
          from._internal_nestedlayout());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_size()->::TDataBinding::MergeFrom(
          from._internal_size());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_alignment()->::TDataBinding::MergeFrom(
          from._internal_alignment());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_sizepolicy()->::TDataBinding::MergeFrom(
          from._internal_sizepolicy());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_sizemin()->::TDataBinding::MergeFrom(
          from._internal_sizemin());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void THVListBaseElement::CopyFrom(const THVListBaseElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.THVListBaseElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool THVListBaseElement::IsInitialized() const {
  if (_internal_has_nestedlayout()) {
    if (!_impl_.nestedlayout_->IsInitialized()) return false;
  }
  if (_internal_has_size()) {
    if (!_impl_.size_->IsInitialized()) return false;
  }
  if (_internal_has_alignment()) {
    if (!_impl_.alignment_->IsInitialized()) return false;
  }
  if (_internal_has_sizepolicy()) {
    if (!_impl_.sizepolicy_->IsInitialized()) return false;
  }
  if (_internal_has_sizemin()) {
    if (!_impl_.sizemin_->IsInitialized()) return false;
  }
  return true;
}

void THVListBaseElement::InternalSwap(THVListBaseElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(THVListBaseElement, _impl_.sizemin_)
      + sizeof(THVListBaseElement::_impl_.sizemin_)
      - PROTOBUF_FIELD_OFFSET(THVListBaseElement, _impl_.childidentifier_)>(
          reinterpret_cast<char*>(&_impl_.childidentifier_),
          reinterpret_cast<char*>(&other->_impl_.childidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata THVListBaseElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[92]);
}

// ===================================================================

class TLayoutSceneGraph_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutSceneGraph_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutSceneGraph_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutSceneGraph_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutSceneGraphElement& element(const TLayoutSceneGraph_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutSceneGraph_TTemplate::_Internal::identifier(const TLayoutSceneGraph_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutSceneGraphElement&
TLayoutSceneGraph_TTemplate::_Internal::element(const TLayoutSceneGraph_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutSceneGraph_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutSceneGraph_TTemplate::TLayoutSceneGraph_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutSceneGraph.TTemplate)
}
TLayoutSceneGraph_TTemplate::TLayoutSceneGraph_TTemplate(const TLayoutSceneGraph_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutSceneGraph_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutSceneGraphElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutSceneGraph.TTemplate)
}

inline void TLayoutSceneGraph_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutSceneGraph_TTemplate::~TLayoutSceneGraph_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutSceneGraph.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutSceneGraph_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutSceneGraph_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutSceneGraph_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutSceneGraph.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutSceneGraph_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutSceneGraphElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutSceneGraph_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutSceneGraph.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutSceneGraphElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutSceneGraph.TTemplate)
  return target;
}

size_t TLayoutSceneGraph_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutSceneGraph.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutSceneGraphElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutSceneGraph_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutSceneGraph.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutSceneGraphElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutSceneGraph_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutSceneGraph_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutSceneGraph_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutSceneGraph_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutSceneGraph_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutSceneGraph_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutSceneGraph.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutSceneGraphElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutSceneGraph_TTemplate::CopyFrom(const TLayoutSceneGraph_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutSceneGraph.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutSceneGraph_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutSceneGraph_TTemplate::InternalSwap(TLayoutSceneGraph_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutSceneGraph_TTemplate, _impl_.element_)
      + sizeof(TLayoutSceneGraph_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutSceneGraph_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutSceneGraph_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[93]);
}

// ===================================================================

class TLayoutSceneGraph::_Internal {
 public:
};

TLayoutSceneGraph::TLayoutSceneGraph(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutSceneGraph)
}
TLayoutSceneGraph::TLayoutSceneGraph(const TLayoutSceneGraph& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutSceneGraph* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutSceneGraph)
}

inline void TLayoutSceneGraph::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TLayoutSceneGraph::~TLayoutSceneGraph() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutSceneGraph)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutSceneGraph::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
}

void TLayoutSceneGraph::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutSceneGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutSceneGraph)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutSceneGraph::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .HmiWidget.TLayoutSceneGraphElement element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutSceneGraph.TTemplate elementTemplate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutSceneGraph::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutSceneGraph)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutSceneGraphElement element = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutSceneGraph.TTemplate elementTemplate = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutSceneGraph)
  return target;
}

size_t TLayoutSceneGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutSceneGraph)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutSceneGraphElement element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutSceneGraph.TTemplate elementTemplate = 2;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutSceneGraph::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutSceneGraph::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutSceneGraph::GetClassData() const { return &_class_data_; }


void TLayoutSceneGraph::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutSceneGraph*>(&to_msg);
  auto& from = static_cast<const TLayoutSceneGraph&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutSceneGraph)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutSceneGraph::CopyFrom(const TLayoutSceneGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutSceneGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutSceneGraph::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  return true;
}

void TLayoutSceneGraph::InternalSwap(TLayoutSceneGraph* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutSceneGraph::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[94]);
}

// ===================================================================

class TLayoutSceneGraphElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutSceneGraphElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutSceneGraphElement, _impl_._has_bits_);
  static const ::TIdentifier& childidentifier(const TLayoutSceneGraphElement* msg);
  static void set_has_childidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayout& nestedlayout(const TLayoutSceneGraphElement* msg);
  static void set_has_nestedlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& rootnodename(const TLayoutSceneGraphElement* msg);
  static void set_has_rootnodename(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& searchroot(const TLayoutSceneGraphElement* msg);
  static void set_has_searchroot(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& size(const TLayoutSceneGraphElement* msg);
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& rotation(const TLayoutSceneGraphElement* msg);
  static void set_has_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& position(const TLayoutSceneGraphElement* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TDataBinding& alignment(const TLayoutSceneGraphElement* msg);
  static void set_has_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TDataBinding& sizepolicy(const TLayoutSceneGraphElement* msg);
  static void set_has_sizepolicy(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000004) ^ 0x00000004) != 0;
  }
};

const ::TIdentifier&
TLayoutSceneGraphElement::_Internal::childidentifier(const TLayoutSceneGraphElement* msg) {
  return *msg->_impl_.childidentifier_;
}
const ::HmiWidget::TLayout&
TLayoutSceneGraphElement::_Internal::nestedlayout(const TLayoutSceneGraphElement* msg) {
  return *msg->_impl_.nestedlayout_;
}
const ::TDataBinding&
TLayoutSceneGraphElement::_Internal::rootnodename(const TLayoutSceneGraphElement* msg) {
  return *msg->_impl_.rootnodename_;
}
const ::TDataBinding&
TLayoutSceneGraphElement::_Internal::searchroot(const TLayoutSceneGraphElement* msg) {
  return *msg->_impl_.searchroot_;
}
const ::TDataBinding&
TLayoutSceneGraphElement::_Internal::size(const TLayoutSceneGraphElement* msg) {
  return *msg->_impl_.size_;
}
const ::TDataBinding&
TLayoutSceneGraphElement::_Internal::rotation(const TLayoutSceneGraphElement* msg) {
  return *msg->_impl_.rotation_;
}
const ::TDataBinding&
TLayoutSceneGraphElement::_Internal::position(const TLayoutSceneGraphElement* msg) {
  return *msg->_impl_.position_;
}
const ::TDataBinding&
TLayoutSceneGraphElement::_Internal::alignment(const TLayoutSceneGraphElement* msg) {
  return *msg->_impl_.alignment_;
}
const ::TDataBinding&
TLayoutSceneGraphElement::_Internal::sizepolicy(const TLayoutSceneGraphElement* msg) {
  return *msg->_impl_.sizepolicy_;
}
void TLayoutSceneGraphElement::clear_childidentifier() {
  if (_impl_.childidentifier_ != nullptr) _impl_.childidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutSceneGraphElement::clear_rootnodename() {
  if (_impl_.rootnodename_ != nullptr) _impl_.rootnodename_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutSceneGraphElement::clear_searchroot() {
  if (_impl_.searchroot_ != nullptr) _impl_.searchroot_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutSceneGraphElement::clear_size() {
  if (_impl_.size_ != nullptr) _impl_.size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutSceneGraphElement::clear_rotation() {
  if (_impl_.rotation_ != nullptr) _impl_.rotation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TLayoutSceneGraphElement::clear_position() {
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void TLayoutSceneGraphElement::clear_alignment() {
  if (_impl_.alignment_ != nullptr) _impl_.alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void TLayoutSceneGraphElement::clear_sizepolicy() {
  if (_impl_.sizepolicy_ != nullptr) _impl_.sizepolicy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
TLayoutSceneGraphElement::TLayoutSceneGraphElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutSceneGraphElement)
}
TLayoutSceneGraphElement::TLayoutSceneGraphElement(const TLayoutSceneGraphElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutSceneGraphElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.rootnodename_){nullptr}
    , decltype(_impl_.searchroot_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.rotation_){nullptr}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_childidentifier()) {
    _this->_impl_.childidentifier_ = new ::TIdentifier(*from._impl_.childidentifier_);
  }
  if (from._internal_has_nestedlayout()) {
    _this->_impl_.nestedlayout_ = new ::HmiWidget::TLayout(*from._impl_.nestedlayout_);
  }
  if (from._internal_has_rootnodename()) {
    _this->_impl_.rootnodename_ = new ::TDataBinding(*from._impl_.rootnodename_);
  }
  if (from._internal_has_searchroot()) {
    _this->_impl_.searchroot_ = new ::TDataBinding(*from._impl_.searchroot_);
  }
  if (from._internal_has_size()) {
    _this->_impl_.size_ = new ::TDataBinding(*from._impl_.size_);
  }
  if (from._internal_has_rotation()) {
    _this->_impl_.rotation_ = new ::TDataBinding(*from._impl_.rotation_);
  }
  if (from._internal_has_position()) {
    _this->_impl_.position_ = new ::TDataBinding(*from._impl_.position_);
  }
  if (from._internal_has_alignment()) {
    _this->_impl_.alignment_ = new ::TDataBinding(*from._impl_.alignment_);
  }
  if (from._internal_has_sizepolicy()) {
    _this->_impl_.sizepolicy_ = new ::TDataBinding(*from._impl_.sizepolicy_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutSceneGraphElement)
}

inline void TLayoutSceneGraphElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.rootnodename_){nullptr}
    , decltype(_impl_.searchroot_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.rotation_){nullptr}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
  };
}

TLayoutSceneGraphElement::~TLayoutSceneGraphElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutSceneGraphElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutSceneGraphElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.childidentifier_;
  if (this != internal_default_instance()) delete _impl_.nestedlayout_;
  if (this != internal_default_instance()) delete _impl_.rootnodename_;
  if (this != internal_default_instance()) delete _impl_.searchroot_;
  if (this != internal_default_instance()) delete _impl_.size_;
  if (this != internal_default_instance()) delete _impl_.rotation_;
  if (this != internal_default_instance()) delete _impl_.position_;
  if (this != internal_default_instance()) delete _impl_.alignment_;
  if (this != internal_default_instance()) delete _impl_.sizepolicy_;
}

void TLayoutSceneGraphElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutSceneGraphElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutSceneGraphElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.childidentifier_ != nullptr);
      _impl_.childidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.nestedlayout_ != nullptr);
      _impl_.nestedlayout_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.rootnodename_ != nullptr);
      _impl_.rootnodename_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.searchroot_ != nullptr);
      _impl_.searchroot_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.size_ != nullptr);
      _impl_.size_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.rotation_ != nullptr);
      _impl_.rotation_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.alignment_ != nullptr);
      _impl_.alignment_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(_impl_.sizepolicy_ != nullptr);
    _impl_.sizepolicy_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutSceneGraphElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier childIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_childidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayout nestedLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nestedlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TDataBinding rootNodeName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_rootnodename(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding searchRoot = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_searchroot(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding size = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rotation = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_rotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding position = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding alignment = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding sizePolicy = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_sizepolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutSceneGraphElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutSceneGraphElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier childIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::childidentifier(this),
        _Internal::childidentifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayout nestedLayout = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::nestedlayout(this),
        _Internal::nestedlayout(this).GetCachedSize(), target, stream);
  }

  // required .TDataBinding rootNodeName = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::rootnodename(this),
        _Internal::rootnodename(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding searchRoot = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::searchroot(this),
        _Internal::searchroot(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::size(this),
        _Internal::size(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rotation = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::rotation(this),
        _Internal::rotation(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding position = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding alignment = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::alignment(this),
        _Internal::alignment(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding sizePolicy = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::sizepolicy(this),
        _Internal::sizepolicy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutSceneGraphElement)
  return target;
}

size_t TLayoutSceneGraphElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutSceneGraphElement)
  size_t total_size = 0;

  // required .TDataBinding rootNodeName = 3;
  if (_internal_has_rootnodename()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.rootnodename_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .TIdentifier childIdentifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childidentifier_);
    }

    // optional .HmiWidget.TLayout nestedLayout = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nestedlayout_);
    }

  }
  if (cached_has_bits & 0x000000f8u) {
    // optional .TDataBinding searchRoot = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.searchroot_);
    }

    // optional .TDataBinding size = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.size_);
    }

    // optional .TDataBinding rotation = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rotation_);
    }

    // optional .TDataBinding position = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.position_);
    }

    // optional .TDataBinding alignment = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.alignment_);
    }

  }
  // optional .TDataBinding sizePolicy = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.sizepolicy_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutSceneGraphElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutSceneGraphElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutSceneGraphElement::GetClassData() const { return &_class_data_; }


void TLayoutSceneGraphElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutSceneGraphElement*>(&to_msg);
  auto& from = static_cast<const TLayoutSceneGraphElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutSceneGraphElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_childidentifier()->::TIdentifier::MergeFrom(
          from._internal_childidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nestedlayout()->::HmiWidget::TLayout::MergeFrom(
          from._internal_nestedlayout());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_rootnodename()->::TDataBinding::MergeFrom(
          from._internal_rootnodename());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_searchroot()->::TDataBinding::MergeFrom(
          from._internal_searchroot());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_size()->::TDataBinding::MergeFrom(
          from._internal_size());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_rotation()->::TDataBinding::MergeFrom(
          from._internal_rotation());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_position()->::TDataBinding::MergeFrom(
          from._internal_position());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_alignment()->::TDataBinding::MergeFrom(
          from._internal_alignment());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_mutable_sizepolicy()->::TDataBinding::MergeFrom(
        from._internal_sizepolicy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutSceneGraphElement::CopyFrom(const TLayoutSceneGraphElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutSceneGraphElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutSceneGraphElement::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_nestedlayout()) {
    if (!_impl_.nestedlayout_->IsInitialized()) return false;
  }
  if (_internal_has_rootnodename()) {
    if (!_impl_.rootnodename_->IsInitialized()) return false;
  }
  if (_internal_has_searchroot()) {
    if (!_impl_.searchroot_->IsInitialized()) return false;
  }
  if (_internal_has_size()) {
    if (!_impl_.size_->IsInitialized()) return false;
  }
  if (_internal_has_rotation()) {
    if (!_impl_.rotation_->IsInitialized()) return false;
  }
  if (_internal_has_position()) {
    if (!_impl_.position_->IsInitialized()) return false;
  }
  if (_internal_has_alignment()) {
    if (!_impl_.alignment_->IsInitialized()) return false;
  }
  if (_internal_has_sizepolicy()) {
    if (!_impl_.sizepolicy_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutSceneGraphElement::InternalSwap(TLayoutSceneGraphElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutSceneGraphElement, _impl_.sizepolicy_)
      + sizeof(TLayoutSceneGraphElement::_impl_.sizepolicy_)
      - PROTOBUF_FIELD_OFFSET(TLayoutSceneGraphElement, _impl_.childidentifier_)>(
          reinterpret_cast<char*>(&_impl_.childidentifier_),
          reinterpret_cast<char*>(&other->_impl_.childidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutSceneGraphElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[95]);
}

// ===================================================================

class TLayoutSceneGraphProject::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutSceneGraphProject>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutSceneGraphProject, _impl_._has_bits_);
  static const ::TDataBinding& searchroot(const TLayoutSceneGraphProject* msg);
  static void set_has_searchroot(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::TDataBinding&
TLayoutSceneGraphProject::_Internal::searchroot(const TLayoutSceneGraphProject* msg) {
  return *msg->_impl_.searchroot_;
}
void TLayoutSceneGraphProject::clear_searchroot() {
  if (_impl_.searchroot_ != nullptr) _impl_.searchroot_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutSceneGraphProject::TLayoutSceneGraphProject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutSceneGraphProject)
}
TLayoutSceneGraphProject::TLayoutSceneGraphProject(const TLayoutSceneGraphProject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutSceneGraphProject* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.searchroot_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_searchroot()) {
    _this->_impl_.searchroot_ = new ::TDataBinding(*from._impl_.searchroot_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutSceneGraphProject)
}

inline void TLayoutSceneGraphProject::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.searchroot_){nullptr}
  };
}

TLayoutSceneGraphProject::~TLayoutSceneGraphProject() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutSceneGraphProject)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutSceneGraphProject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.searchroot_;
}

void TLayoutSceneGraphProject::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutSceneGraphProject::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutSceneGraphProject)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.searchroot_ != nullptr);
    _impl_.searchroot_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutSceneGraphProject::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding searchRoot = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_searchroot(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutSceneGraphProjectElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutSceneGraphProject::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutSceneGraphProject)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding searchRoot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::searchroot(this),
        _Internal::searchroot(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutSceneGraphProjectElement element = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutSceneGraphProject)
  return target;
}

size_t TLayoutSceneGraphProject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutSceneGraphProject)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutSceneGraphProjectElement element = 2;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .TDataBinding searchRoot = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.searchroot_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutSceneGraphProject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutSceneGraphProject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutSceneGraphProject::GetClassData() const { return &_class_data_; }


void TLayoutSceneGraphProject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutSceneGraphProject*>(&to_msg);
  auto& from = static_cast<const TLayoutSceneGraphProject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutSceneGraphProject)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  if (from._internal_has_searchroot()) {
    _this->_internal_mutable_searchroot()->::TDataBinding::MergeFrom(
        from._internal_searchroot());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutSceneGraphProject::CopyFrom(const TLayoutSceneGraphProject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutSceneGraphProject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutSceneGraphProject::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (_internal_has_searchroot()) {
    if (!_impl_.searchroot_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutSceneGraphProject::InternalSwap(TLayoutSceneGraphProject* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  swap(_impl_.searchroot_, other->_impl_.searchroot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutSceneGraphProject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[96]);
}

// ===================================================================

class TLayoutSceneGraphProjectElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutSceneGraphProjectElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutSceneGraphProjectElement, _impl_._has_bits_);
  static const ::TIdentifier& childidentifier(const TLayoutSceneGraphProjectElement* msg);
  static void set_has_childidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayout& nestedlayout(const TLayoutSceneGraphProjectElement* msg);
  static void set_has_nestedlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& nodename(const TLayoutSceneGraphProjectElement* msg);
  static void set_has_nodename(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& offset(const TLayoutSceneGraphProjectElement* msg);
  static void set_has_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& size(const TLayoutSceneGraphProjectElement* msg);
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& rotation(const TLayoutSceneGraphProjectElement* msg);
  static void set_has_rotation(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& position(const TLayoutSceneGraphProjectElement* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TDataBinding& alignment(const TLayoutSceneGraphProjectElement* msg);
  static void set_has_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TDataBinding& sizepolicy(const TLayoutSceneGraphProjectElement* msg);
  static void set_has_sizepolicy(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000004) ^ 0x00000004) != 0;
  }
};

const ::TIdentifier&
TLayoutSceneGraphProjectElement::_Internal::childidentifier(const TLayoutSceneGraphProjectElement* msg) {
  return *msg->_impl_.childidentifier_;
}
const ::HmiWidget::TLayout&
TLayoutSceneGraphProjectElement::_Internal::nestedlayout(const TLayoutSceneGraphProjectElement* msg) {
  return *msg->_impl_.nestedlayout_;
}
const ::TDataBinding&
TLayoutSceneGraphProjectElement::_Internal::nodename(const TLayoutSceneGraphProjectElement* msg) {
  return *msg->_impl_.nodename_;
}
const ::TDataBinding&
TLayoutSceneGraphProjectElement::_Internal::offset(const TLayoutSceneGraphProjectElement* msg) {
  return *msg->_impl_.offset_;
}
const ::TDataBinding&
TLayoutSceneGraphProjectElement::_Internal::size(const TLayoutSceneGraphProjectElement* msg) {
  return *msg->_impl_.size_;
}
const ::TDataBinding&
TLayoutSceneGraphProjectElement::_Internal::rotation(const TLayoutSceneGraphProjectElement* msg) {
  return *msg->_impl_.rotation_;
}
const ::TDataBinding&
TLayoutSceneGraphProjectElement::_Internal::position(const TLayoutSceneGraphProjectElement* msg) {
  return *msg->_impl_.position_;
}
const ::TDataBinding&
TLayoutSceneGraphProjectElement::_Internal::alignment(const TLayoutSceneGraphProjectElement* msg) {
  return *msg->_impl_.alignment_;
}
const ::TDataBinding&
TLayoutSceneGraphProjectElement::_Internal::sizepolicy(const TLayoutSceneGraphProjectElement* msg) {
  return *msg->_impl_.sizepolicy_;
}
void TLayoutSceneGraphProjectElement::clear_childidentifier() {
  if (_impl_.childidentifier_ != nullptr) _impl_.childidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutSceneGraphProjectElement::clear_nodename() {
  if (_impl_.nodename_ != nullptr) _impl_.nodename_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutSceneGraphProjectElement::clear_offset() {
  if (_impl_.offset_ != nullptr) _impl_.offset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutSceneGraphProjectElement::clear_size() {
  if (_impl_.size_ != nullptr) _impl_.size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutSceneGraphProjectElement::clear_rotation() {
  if (_impl_.rotation_ != nullptr) _impl_.rotation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TLayoutSceneGraphProjectElement::clear_position() {
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void TLayoutSceneGraphProjectElement::clear_alignment() {
  if (_impl_.alignment_ != nullptr) _impl_.alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void TLayoutSceneGraphProjectElement::clear_sizepolicy() {
  if (_impl_.sizepolicy_ != nullptr) _impl_.sizepolicy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
TLayoutSceneGraphProjectElement::TLayoutSceneGraphProjectElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutSceneGraphProjectElement)
}
TLayoutSceneGraphProjectElement::TLayoutSceneGraphProjectElement(const TLayoutSceneGraphProjectElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutSceneGraphProjectElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.nodename_){nullptr}
    , decltype(_impl_.offset_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.rotation_){nullptr}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_childidentifier()) {
    _this->_impl_.childidentifier_ = new ::TIdentifier(*from._impl_.childidentifier_);
  }
  if (from._internal_has_nestedlayout()) {
    _this->_impl_.nestedlayout_ = new ::HmiWidget::TLayout(*from._impl_.nestedlayout_);
  }
  if (from._internal_has_nodename()) {
    _this->_impl_.nodename_ = new ::TDataBinding(*from._impl_.nodename_);
  }
  if (from._internal_has_offset()) {
    _this->_impl_.offset_ = new ::TDataBinding(*from._impl_.offset_);
  }
  if (from._internal_has_size()) {
    _this->_impl_.size_ = new ::TDataBinding(*from._impl_.size_);
  }
  if (from._internal_has_rotation()) {
    _this->_impl_.rotation_ = new ::TDataBinding(*from._impl_.rotation_);
  }
  if (from._internal_has_position()) {
    _this->_impl_.position_ = new ::TDataBinding(*from._impl_.position_);
  }
  if (from._internal_has_alignment()) {
    _this->_impl_.alignment_ = new ::TDataBinding(*from._impl_.alignment_);
  }
  if (from._internal_has_sizepolicy()) {
    _this->_impl_.sizepolicy_ = new ::TDataBinding(*from._impl_.sizepolicy_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutSceneGraphProjectElement)
}

inline void TLayoutSceneGraphProjectElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.nodename_){nullptr}
    , decltype(_impl_.offset_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.rotation_){nullptr}
    , decltype(_impl_.position_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
  };
}

TLayoutSceneGraphProjectElement::~TLayoutSceneGraphProjectElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutSceneGraphProjectElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutSceneGraphProjectElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.childidentifier_;
  if (this != internal_default_instance()) delete _impl_.nestedlayout_;
  if (this != internal_default_instance()) delete _impl_.nodename_;
  if (this != internal_default_instance()) delete _impl_.offset_;
  if (this != internal_default_instance()) delete _impl_.size_;
  if (this != internal_default_instance()) delete _impl_.rotation_;
  if (this != internal_default_instance()) delete _impl_.position_;
  if (this != internal_default_instance()) delete _impl_.alignment_;
  if (this != internal_default_instance()) delete _impl_.sizepolicy_;
}

void TLayoutSceneGraphProjectElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutSceneGraphProjectElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutSceneGraphProjectElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.childidentifier_ != nullptr);
      _impl_.childidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.nestedlayout_ != nullptr);
      _impl_.nestedlayout_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.nodename_ != nullptr);
      _impl_.nodename_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.offset_ != nullptr);
      _impl_.offset_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.size_ != nullptr);
      _impl_.size_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.rotation_ != nullptr);
      _impl_.rotation_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.alignment_ != nullptr);
      _impl_.alignment_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(_impl_.sizepolicy_ != nullptr);
    _impl_.sizepolicy_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutSceneGraphProjectElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier childIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_childidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayout nestedLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nestedlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TDataBinding nodeName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_nodename(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding offset = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_offset(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding size = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rotation = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_rotation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding position = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding alignment = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding sizePolicy = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_sizepolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutSceneGraphProjectElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutSceneGraphProjectElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier childIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::childidentifier(this),
        _Internal::childidentifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayout nestedLayout = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::nestedlayout(this),
        _Internal::nestedlayout(this).GetCachedSize(), target, stream);
  }

  // required .TDataBinding nodeName = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::nodename(this),
        _Internal::nodename(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding offset = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::offset(this),
        _Internal::offset(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::size(this),
        _Internal::size(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rotation = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::rotation(this),
        _Internal::rotation(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding position = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::position(this),
        _Internal::position(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding alignment = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::alignment(this),
        _Internal::alignment(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding sizePolicy = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::sizepolicy(this),
        _Internal::sizepolicy(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutSceneGraphProjectElement)
  return target;
}

size_t TLayoutSceneGraphProjectElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutSceneGraphProjectElement)
  size_t total_size = 0;

  // required .TDataBinding nodeName = 3;
  if (_internal_has_nodename()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.nodename_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .TIdentifier childIdentifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childidentifier_);
    }

    // optional .HmiWidget.TLayout nestedLayout = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nestedlayout_);
    }

  }
  if (cached_has_bits & 0x000000f8u) {
    // optional .TDataBinding offset = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.offset_);
    }

    // optional .TDataBinding size = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.size_);
    }

    // optional .TDataBinding rotation = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rotation_);
    }

    // optional .TDataBinding position = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.position_);
    }

    // optional .TDataBinding alignment = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.alignment_);
    }

  }
  // optional .TDataBinding sizePolicy = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.sizepolicy_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutSceneGraphProjectElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutSceneGraphProjectElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutSceneGraphProjectElement::GetClassData() const { return &_class_data_; }


void TLayoutSceneGraphProjectElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutSceneGraphProjectElement*>(&to_msg);
  auto& from = static_cast<const TLayoutSceneGraphProjectElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutSceneGraphProjectElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_childidentifier()->::TIdentifier::MergeFrom(
          from._internal_childidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nestedlayout()->::HmiWidget::TLayout::MergeFrom(
          from._internal_nestedlayout());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_nodename()->::TDataBinding::MergeFrom(
          from._internal_nodename());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_offset()->::TDataBinding::MergeFrom(
          from._internal_offset());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_size()->::TDataBinding::MergeFrom(
          from._internal_size());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_rotation()->::TDataBinding::MergeFrom(
          from._internal_rotation());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_position()->::TDataBinding::MergeFrom(
          from._internal_position());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_alignment()->::TDataBinding::MergeFrom(
          from._internal_alignment());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_mutable_sizepolicy()->::TDataBinding::MergeFrom(
        from._internal_sizepolicy());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutSceneGraphProjectElement::CopyFrom(const TLayoutSceneGraphProjectElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutSceneGraphProjectElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutSceneGraphProjectElement::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_nestedlayout()) {
    if (!_impl_.nestedlayout_->IsInitialized()) return false;
  }
  if (_internal_has_nodename()) {
    if (!_impl_.nodename_->IsInitialized()) return false;
  }
  if (_internal_has_offset()) {
    if (!_impl_.offset_->IsInitialized()) return false;
  }
  if (_internal_has_size()) {
    if (!_impl_.size_->IsInitialized()) return false;
  }
  if (_internal_has_rotation()) {
    if (!_impl_.rotation_->IsInitialized()) return false;
  }
  if (_internal_has_position()) {
    if (!_impl_.position_->IsInitialized()) return false;
  }
  if (_internal_has_alignment()) {
    if (!_impl_.alignment_->IsInitialized()) return false;
  }
  if (_internal_has_sizepolicy()) {
    if (!_impl_.sizepolicy_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutSceneGraphProjectElement::InternalSwap(TLayoutSceneGraphProjectElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutSceneGraphProjectElement, _impl_.sizepolicy_)
      + sizeof(TLayoutSceneGraphProjectElement::_impl_.sizepolicy_)
      - PROTOBUF_FIELD_OFFSET(TLayoutSceneGraphProjectElement, _impl_.childidentifier_)>(
          reinterpret_cast<char*>(&_impl_.childidentifier_),
          reinterpret_cast<char*>(&other->_impl_.childidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutSceneGraphProjectElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[97]);
}

// ===================================================================

class TLayoutCircle_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutCircle_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutCircle_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutCircle_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutCircleElement& element(const TLayoutCircle_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutCircle_TTemplate::_Internal::identifier(const TLayoutCircle_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutCircleElement&
TLayoutCircle_TTemplate::_Internal::element(const TLayoutCircle_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutCircle_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutCircle_TTemplate::TLayoutCircle_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutCircle.TTemplate)
}
TLayoutCircle_TTemplate::TLayoutCircle_TTemplate(const TLayoutCircle_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutCircle_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutCircleElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutCircle.TTemplate)
}

inline void TLayoutCircle_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutCircle_TTemplate::~TLayoutCircle_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutCircle.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutCircle_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutCircle_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutCircle_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutCircle.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutCircle_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutCircleElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutCircle_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutCircle.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutCircleElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutCircle.TTemplate)
  return target;
}

size_t TLayoutCircle_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutCircle.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutCircleElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutCircle_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutCircle.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutCircleElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutCircle_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutCircle_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutCircle_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutCircle_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutCircle_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutCircle_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutCircle.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutCircleElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutCircle_TTemplate::CopyFrom(const TLayoutCircle_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutCircle.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutCircle_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutCircle_TTemplate::InternalSwap(TLayoutCircle_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutCircle_TTemplate, _impl_.element_)
      + sizeof(TLayoutCircle_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutCircle_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutCircle_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[98]);
}

// ===================================================================

class TLayoutCircle::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutCircle>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutCircle, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutCircleBase& base(const TLayoutCircle* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::TLayoutCircleBase&
TLayoutCircle::_Internal::base(const TLayoutCircle* msg) {
  return *msg->_impl_.base_;
}
TLayoutCircle::TLayoutCircle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutCircle)
}
TLayoutCircle::TLayoutCircle(const TLayoutCircle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutCircle* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutCircleBase(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutCircle)
}

inline void TLayoutCircle::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutCircle::~TLayoutCircle() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutCircle)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutCircle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutCircle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutCircle::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutCircle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutCircle::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.TLayoutCircleBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutCircleElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutCircle.TTemplate elementTemplate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutCircle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutCircle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.TLayoutCircleBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutCircleElement element = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutCircle.TTemplate elementTemplate = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutCircle)
  return target;
}

size_t TLayoutCircle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutCircle)
  size_t total_size = 0;

  // required .HmiWidget.TLayoutCircleBase base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutCircleElement element = 2;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutCircle.TTemplate elementTemplate = 3;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutCircle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutCircle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutCircle::GetClassData() const { return &_class_data_; }


void TLayoutCircle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutCircle*>(&to_msg);
  auto& from = static_cast<const TLayoutCircle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutCircle)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::TLayoutCircleBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutCircle::CopyFrom(const TLayoutCircle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutCircle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutCircle::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutCircle::InternalSwap(TLayoutCircle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutCircle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[99]);
}

// ===================================================================

class TLayoutCircleBase::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutCircleBase>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutCircleBase, _impl_._has_bits_);
  static const ::TDataBinding& orientation(const TLayoutCircleBase* msg);
  static void set_has_orientation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& leftmargin(const TLayoutCircleBase* msg);
  static void set_has_leftmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& rightmargin(const TLayoutCircleBase* msg);
  static void set_has_rightmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& topmargin(const TLayoutCircleBase* msg);
  static void set_has_topmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& bottommargin(const TLayoutCircleBase* msg);
  static void set_has_bottommargin(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& spacing(const TLayoutCircleBase* msg);
  static void set_has_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& startangle(const TLayoutCircleBase* msg);
  static void set_has_startangle(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TDataBinding& endangle(const TLayoutCircleBase* msg);
  static void set_has_endangle(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TDataBinding& radius(const TLayoutCircleBase* msg);
  static void set_has_radius(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

const ::TDataBinding&
TLayoutCircleBase::_Internal::orientation(const TLayoutCircleBase* msg) {
  return *msg->_impl_.orientation_;
}
const ::TDataBinding&
TLayoutCircleBase::_Internal::leftmargin(const TLayoutCircleBase* msg) {
  return *msg->_impl_.leftmargin_;
}
const ::TDataBinding&
TLayoutCircleBase::_Internal::rightmargin(const TLayoutCircleBase* msg) {
  return *msg->_impl_.rightmargin_;
}
const ::TDataBinding&
TLayoutCircleBase::_Internal::topmargin(const TLayoutCircleBase* msg) {
  return *msg->_impl_.topmargin_;
}
const ::TDataBinding&
TLayoutCircleBase::_Internal::bottommargin(const TLayoutCircleBase* msg) {
  return *msg->_impl_.bottommargin_;
}
const ::TDataBinding&
TLayoutCircleBase::_Internal::spacing(const TLayoutCircleBase* msg) {
  return *msg->_impl_.spacing_;
}
const ::TDataBinding&
TLayoutCircleBase::_Internal::startangle(const TLayoutCircleBase* msg) {
  return *msg->_impl_.startangle_;
}
const ::TDataBinding&
TLayoutCircleBase::_Internal::endangle(const TLayoutCircleBase* msg) {
  return *msg->_impl_.endangle_;
}
const ::TDataBinding&
TLayoutCircleBase::_Internal::radius(const TLayoutCircleBase* msg) {
  return *msg->_impl_.radius_;
}
void TLayoutCircleBase::clear_orientation() {
  if (_impl_.orientation_ != nullptr) _impl_.orientation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutCircleBase::clear_leftmargin() {
  if (_impl_.leftmargin_ != nullptr) _impl_.leftmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TLayoutCircleBase::clear_rightmargin() {
  if (_impl_.rightmargin_ != nullptr) _impl_.rightmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutCircleBase::clear_topmargin() {
  if (_impl_.topmargin_ != nullptr) _impl_.topmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutCircleBase::clear_bottommargin() {
  if (_impl_.bottommargin_ != nullptr) _impl_.bottommargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutCircleBase::clear_spacing() {
  if (_impl_.spacing_ != nullptr) _impl_.spacing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TLayoutCircleBase::clear_startangle() {
  if (_impl_.startangle_ != nullptr) _impl_.startangle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void TLayoutCircleBase::clear_endangle() {
  if (_impl_.endangle_ != nullptr) _impl_.endangle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void TLayoutCircleBase::clear_radius() {
  if (_impl_.radius_ != nullptr) _impl_.radius_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
TLayoutCircleBase::TLayoutCircleBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutCircleBase)
}
TLayoutCircleBase::TLayoutCircleBase(const TLayoutCircleBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutCircleBase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.orientation_){nullptr}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.spacing_){nullptr}
    , decltype(_impl_.startangle_){nullptr}
    , decltype(_impl_.endangle_){nullptr}
    , decltype(_impl_.radius_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_orientation()) {
    _this->_impl_.orientation_ = new ::TDataBinding(*from._impl_.orientation_);
  }
  if (from._internal_has_leftmargin()) {
    _this->_impl_.leftmargin_ = new ::TDataBinding(*from._impl_.leftmargin_);
  }
  if (from._internal_has_rightmargin()) {
    _this->_impl_.rightmargin_ = new ::TDataBinding(*from._impl_.rightmargin_);
  }
  if (from._internal_has_topmargin()) {
    _this->_impl_.topmargin_ = new ::TDataBinding(*from._impl_.topmargin_);
  }
  if (from._internal_has_bottommargin()) {
    _this->_impl_.bottommargin_ = new ::TDataBinding(*from._impl_.bottommargin_);
  }
  if (from._internal_has_spacing()) {
    _this->_impl_.spacing_ = new ::TDataBinding(*from._impl_.spacing_);
  }
  if (from._internal_has_startangle()) {
    _this->_impl_.startangle_ = new ::TDataBinding(*from._impl_.startangle_);
  }
  if (from._internal_has_endangle()) {
    _this->_impl_.endangle_ = new ::TDataBinding(*from._impl_.endangle_);
  }
  if (from._internal_has_radius()) {
    _this->_impl_.radius_ = new ::TDataBinding(*from._impl_.radius_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutCircleBase)
}

inline void TLayoutCircleBase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.orientation_){nullptr}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.spacing_){nullptr}
    , decltype(_impl_.startangle_){nullptr}
    , decltype(_impl_.endangle_){nullptr}
    , decltype(_impl_.radius_){nullptr}
  };
}

TLayoutCircleBase::~TLayoutCircleBase() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutCircleBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutCircleBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.orientation_;
  if (this != internal_default_instance()) delete _impl_.leftmargin_;
  if (this != internal_default_instance()) delete _impl_.rightmargin_;
  if (this != internal_default_instance()) delete _impl_.topmargin_;
  if (this != internal_default_instance()) delete _impl_.bottommargin_;
  if (this != internal_default_instance()) delete _impl_.spacing_;
  if (this != internal_default_instance()) delete _impl_.startangle_;
  if (this != internal_default_instance()) delete _impl_.endangle_;
  if (this != internal_default_instance()) delete _impl_.radius_;
}

void TLayoutCircleBase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutCircleBase::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutCircleBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.orientation_ != nullptr);
      _impl_.orientation_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.leftmargin_ != nullptr);
      _impl_.leftmargin_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.rightmargin_ != nullptr);
      _impl_.rightmargin_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.topmargin_ != nullptr);
      _impl_.topmargin_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.bottommargin_ != nullptr);
      _impl_.bottommargin_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.spacing_ != nullptr);
      _impl_.spacing_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.startangle_ != nullptr);
      _impl_.startangle_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.endangle_ != nullptr);
      _impl_.endangle_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(_impl_.radius_ != nullptr);
    _impl_.radius_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutCircleBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding orientation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding leftMargin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_leftmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rightMargin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_rightmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding topMargin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_topmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding bottomMargin = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_bottommargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding spacing = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding startAngle = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_startangle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding endAngle = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_endangle(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding radius = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_radius(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutCircleBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutCircleBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding orientation = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::orientation(this),
        _Internal::orientation(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding leftMargin = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::leftmargin(this),
        _Internal::leftmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rightMargin = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::rightmargin(this),
        _Internal::rightmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding topMargin = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::topmargin(this),
        _Internal::topmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding bottomMargin = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::bottommargin(this),
        _Internal::bottommargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding spacing = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::spacing(this),
        _Internal::spacing(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding startAngle = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::startangle(this),
        _Internal::startangle(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding endAngle = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::endangle(this),
        _Internal::endangle(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding radius = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::radius(this),
        _Internal::radius(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutCircleBase)
  return target;
}

size_t TLayoutCircleBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutCircleBase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TDataBinding orientation = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.orientation_);
    }

    // optional .TDataBinding leftMargin = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.leftmargin_);
    }

    // optional .TDataBinding rightMargin = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rightmargin_);
    }

    // optional .TDataBinding topMargin = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.topmargin_);
    }

    // optional .TDataBinding bottomMargin = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bottommargin_);
    }

    // optional .TDataBinding spacing = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.spacing_);
    }

    // optional .TDataBinding startAngle = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.startangle_);
    }

    // optional .TDataBinding endAngle = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.endangle_);
    }

  }
  // optional .TDataBinding radius = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.radius_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutCircleBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutCircleBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutCircleBase::GetClassData() const { return &_class_data_; }


void TLayoutCircleBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutCircleBase*>(&to_msg);
  auto& from = static_cast<const TLayoutCircleBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutCircleBase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_orientation()->::TDataBinding::MergeFrom(
          from._internal_orientation());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_leftmargin()->::TDataBinding::MergeFrom(
          from._internal_leftmargin());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_rightmargin()->::TDataBinding::MergeFrom(
          from._internal_rightmargin());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_topmargin()->::TDataBinding::MergeFrom(
          from._internal_topmargin());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_bottommargin()->::TDataBinding::MergeFrom(
          from._internal_bottommargin());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_spacing()->::TDataBinding::MergeFrom(
          from._internal_spacing());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_startangle()->::TDataBinding::MergeFrom(
          from._internal_startangle());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_endangle()->::TDataBinding::MergeFrom(
          from._internal_endangle());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_mutable_radius()->::TDataBinding::MergeFrom(
        from._internal_radius());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutCircleBase::CopyFrom(const TLayoutCircleBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutCircleBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutCircleBase::IsInitialized() const {
  if (_internal_has_orientation()) {
    if (!_impl_.orientation_->IsInitialized()) return false;
  }
  if (_internal_has_leftmargin()) {
    if (!_impl_.leftmargin_->IsInitialized()) return false;
  }
  if (_internal_has_rightmargin()) {
    if (!_impl_.rightmargin_->IsInitialized()) return false;
  }
  if (_internal_has_topmargin()) {
    if (!_impl_.topmargin_->IsInitialized()) return false;
  }
  if (_internal_has_bottommargin()) {
    if (!_impl_.bottommargin_->IsInitialized()) return false;
  }
  if (_internal_has_spacing()) {
    if (!_impl_.spacing_->IsInitialized()) return false;
  }
  if (_internal_has_startangle()) {
    if (!_impl_.startangle_->IsInitialized()) return false;
  }
  if (_internal_has_endangle()) {
    if (!_impl_.endangle_->IsInitialized()) return false;
  }
  if (_internal_has_radius()) {
    if (!_impl_.radius_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutCircleBase::InternalSwap(TLayoutCircleBase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutCircleBase, _impl_.radius_)
      + sizeof(TLayoutCircleBase::_impl_.radius_)
      - PROTOBUF_FIELD_OFFSET(TLayoutCircleBase, _impl_.orientation_)>(
          reinterpret_cast<char*>(&_impl_.orientation_),
          reinterpret_cast<char*>(&other->_impl_.orientation_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutCircleBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[100]);
}

// ===================================================================

class TLayoutCircleElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutCircleElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutCircleElement, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutCircleBaseElement& base(const TLayoutCircleElement* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::HmiWidget::TLayoutCircleBaseElement&
TLayoutCircleElement::_Internal::base(const TLayoutCircleElement* msg) {
  return *msg->_impl_.base_;
}
TLayoutCircleElement::TLayoutCircleElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutCircleElement)
}
TLayoutCircleElement::TLayoutCircleElement(const TLayoutCircleElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutCircleElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutCircleBaseElement(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutCircleElement)
}

inline void TLayoutCircleElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutCircleElement::~TLayoutCircleElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutCircleElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutCircleElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutCircleElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutCircleElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutCircleElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutCircleElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .HmiWidget.TLayoutCircleBaseElement base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutCircleElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutCircleElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .HmiWidget.TLayoutCircleBaseElement base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutCircleElement)
  return target;
}

size_t TLayoutCircleElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutCircleElement)
  size_t total_size = 0;

  // required .HmiWidget.TLayoutCircleBaseElement base = 1;
  if (_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutCircleElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutCircleElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutCircleElement::GetClassData() const { return &_class_data_; }


void TLayoutCircleElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutCircleElement*>(&to_msg);
  auto& from = static_cast<const TLayoutCircleElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutCircleElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::TLayoutCircleBaseElement::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutCircleElement::CopyFrom(const TLayoutCircleElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutCircleElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutCircleElement::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutCircleElement::InternalSwap(TLayoutCircleElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutCircleElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[101]);
}

// ===================================================================

class TLayoutCircleBaseElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutCircleBaseElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutCircleBaseElement, _impl_._has_bits_);
  static const ::TIdentifier& childidentifier(const TLayoutCircleBaseElement* msg);
  static void set_has_childidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayout& nestedlayout(const TLayoutCircleBaseElement* msg);
  static void set_has_nestedlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& size(const TLayoutCircleBaseElement* msg);
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& stretchfactor(const TLayoutCircleBaseElement* msg);
  static void set_has_stretchfactor(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& sizepolicy(const TLayoutCircleBaseElement* msg);
  static void set_has_sizepolicy(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& alignment(const TLayoutCircleBaseElement* msg);
  static void set_has_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::TIdentifier&
TLayoutCircleBaseElement::_Internal::childidentifier(const TLayoutCircleBaseElement* msg) {
  return *msg->_impl_.childidentifier_;
}
const ::HmiWidget::TLayout&
TLayoutCircleBaseElement::_Internal::nestedlayout(const TLayoutCircleBaseElement* msg) {
  return *msg->_impl_.nestedlayout_;
}
const ::TDataBinding&
TLayoutCircleBaseElement::_Internal::size(const TLayoutCircleBaseElement* msg) {
  return *msg->_impl_.size_;
}
const ::TDataBinding&
TLayoutCircleBaseElement::_Internal::stretchfactor(const TLayoutCircleBaseElement* msg) {
  return *msg->_impl_.stretchfactor_;
}
const ::TDataBinding&
TLayoutCircleBaseElement::_Internal::sizepolicy(const TLayoutCircleBaseElement* msg) {
  return *msg->_impl_.sizepolicy_;
}
const ::TDataBinding&
TLayoutCircleBaseElement::_Internal::alignment(const TLayoutCircleBaseElement* msg) {
  return *msg->_impl_.alignment_;
}
void TLayoutCircleBaseElement::clear_childidentifier() {
  if (_impl_.childidentifier_ != nullptr) _impl_.childidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutCircleBaseElement::clear_size() {
  if (_impl_.size_ != nullptr) _impl_.size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutCircleBaseElement::clear_stretchfactor() {
  if (_impl_.stretchfactor_ != nullptr) _impl_.stretchfactor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutCircleBaseElement::clear_sizepolicy() {
  if (_impl_.sizepolicy_ != nullptr) _impl_.sizepolicy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutCircleBaseElement::clear_alignment() {
  if (_impl_.alignment_ != nullptr) _impl_.alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
TLayoutCircleBaseElement::TLayoutCircleBaseElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutCircleBaseElement)
}
TLayoutCircleBaseElement::TLayoutCircleBaseElement(const TLayoutCircleBaseElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutCircleBaseElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.stretchfactor_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
    , decltype(_impl_.alignment_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_childidentifier()) {
    _this->_impl_.childidentifier_ = new ::TIdentifier(*from._impl_.childidentifier_);
  }
  if (from._internal_has_nestedlayout()) {
    _this->_impl_.nestedlayout_ = new ::HmiWidget::TLayout(*from._impl_.nestedlayout_);
  }
  if (from._internal_has_size()) {
    _this->_impl_.size_ = new ::TDataBinding(*from._impl_.size_);
  }
  if (from._internal_has_stretchfactor()) {
    _this->_impl_.stretchfactor_ = new ::TDataBinding(*from._impl_.stretchfactor_);
  }
  if (from._internal_has_sizepolicy()) {
    _this->_impl_.sizepolicy_ = new ::TDataBinding(*from._impl_.sizepolicy_);
  }
  if (from._internal_has_alignment()) {
    _this->_impl_.alignment_ = new ::TDataBinding(*from._impl_.alignment_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutCircleBaseElement)
}

inline void TLayoutCircleBaseElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.stretchfactor_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
  };
}

TLayoutCircleBaseElement::~TLayoutCircleBaseElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutCircleBaseElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutCircleBaseElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.childidentifier_;
  if (this != internal_default_instance()) delete _impl_.nestedlayout_;
  if (this != internal_default_instance()) delete _impl_.size_;
  if (this != internal_default_instance()) delete _impl_.stretchfactor_;
  if (this != internal_default_instance()) delete _impl_.sizepolicy_;
  if (this != internal_default_instance()) delete _impl_.alignment_;
}

void TLayoutCircleBaseElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutCircleBaseElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutCircleBaseElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.childidentifier_ != nullptr);
      _impl_.childidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.nestedlayout_ != nullptr);
      _impl_.nestedlayout_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.size_ != nullptr);
      _impl_.size_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.stretchfactor_ != nullptr);
      _impl_.stretchfactor_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.sizepolicy_ != nullptr);
      _impl_.sizepolicy_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.alignment_ != nullptr);
      _impl_.alignment_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutCircleBaseElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier childIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_childidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayout nestedLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nestedlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding stretchFactor = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_stretchfactor(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding sizePolicy = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_sizepolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding alignment = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutCircleBaseElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutCircleBaseElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier childIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::childidentifier(this),
        _Internal::childidentifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayout nestedLayout = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::nestedlayout(this),
        _Internal::nestedlayout(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::size(this),
        _Internal::size(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding stretchFactor = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::stretchfactor(this),
        _Internal::stretchfactor(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding sizePolicy = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::sizepolicy(this),
        _Internal::sizepolicy(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding alignment = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::alignment(this),
        _Internal::alignment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutCircleBaseElement)
  return target;
}

size_t TLayoutCircleBaseElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutCircleBaseElement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .TIdentifier childIdentifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childidentifier_);
    }

    // optional .HmiWidget.TLayout nestedLayout = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nestedlayout_);
    }

    // optional .TDataBinding size = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.size_);
    }

    // optional .TDataBinding stretchFactor = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stretchfactor_);
    }

    // optional .TDataBinding sizePolicy = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sizepolicy_);
    }

    // optional .TDataBinding alignment = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.alignment_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutCircleBaseElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutCircleBaseElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutCircleBaseElement::GetClassData() const { return &_class_data_; }


void TLayoutCircleBaseElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutCircleBaseElement*>(&to_msg);
  auto& from = static_cast<const TLayoutCircleBaseElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutCircleBaseElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_childidentifier()->::TIdentifier::MergeFrom(
          from._internal_childidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nestedlayout()->::HmiWidget::TLayout::MergeFrom(
          from._internal_nestedlayout());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_size()->::TDataBinding::MergeFrom(
          from._internal_size());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_stretchfactor()->::TDataBinding::MergeFrom(
          from._internal_stretchfactor());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_sizepolicy()->::TDataBinding::MergeFrom(
          from._internal_sizepolicy());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_alignment()->::TDataBinding::MergeFrom(
          from._internal_alignment());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutCircleBaseElement::CopyFrom(const TLayoutCircleBaseElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutCircleBaseElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutCircleBaseElement::IsInitialized() const {
  if (_internal_has_nestedlayout()) {
    if (!_impl_.nestedlayout_->IsInitialized()) return false;
  }
  if (_internal_has_size()) {
    if (!_impl_.size_->IsInitialized()) return false;
  }
  if (_internal_has_stretchfactor()) {
    if (!_impl_.stretchfactor_->IsInitialized()) return false;
  }
  if (_internal_has_sizepolicy()) {
    if (!_impl_.sizepolicy_->IsInitialized()) return false;
  }
  if (_internal_has_alignment()) {
    if (!_impl_.alignment_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutCircleBaseElement::InternalSwap(TLayoutCircleBaseElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutCircleBaseElement, _impl_.alignment_)
      + sizeof(TLayoutCircleBaseElement::_impl_.alignment_)
      - PROTOBUF_FIELD_OFFSET(TLayoutCircleBaseElement, _impl_.childidentifier_)>(
          reinterpret_cast<char*>(&_impl_.childidentifier_),
          reinterpret_cast<char*>(&other->_impl_.childidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutCircleBaseElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[102]);
}

// ===================================================================

class TLayoutGrid_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutGrid_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutGrid_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutGrid_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutGridElement& element(const TLayoutGrid_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutGrid_TTemplate::_Internal::identifier(const TLayoutGrid_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutGridElement&
TLayoutGrid_TTemplate::_Internal::element(const TLayoutGrid_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutGrid_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutGrid_TTemplate::TLayoutGrid_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutGrid.TTemplate)
}
TLayoutGrid_TTemplate::TLayoutGrid_TTemplate(const TLayoutGrid_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutGrid_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutGridElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutGrid.TTemplate)
}

inline void TLayoutGrid_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutGrid_TTemplate::~TLayoutGrid_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutGrid.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutGrid_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutGrid_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutGrid_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutGrid.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutGrid_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutGridElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutGrid_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutGrid.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutGridElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutGrid.TTemplate)
  return target;
}

size_t TLayoutGrid_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutGrid.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutGridElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutGrid_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutGrid.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutGridElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutGrid_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutGrid_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutGrid_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutGrid_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutGrid_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutGrid_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutGrid.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutGridElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutGrid_TTemplate::CopyFrom(const TLayoutGrid_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutGrid.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutGrid_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutGrid_TTemplate::InternalSwap(TLayoutGrid_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutGrid_TTemplate, _impl_.element_)
      + sizeof(TLayoutGrid_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutGrid_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutGrid_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[103]);
}

// ===================================================================

class TLayoutGrid::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutGrid>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutGrid, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutGridBase& base(const TLayoutGrid* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& numberofrows(const TLayoutGrid* msg);
  static void set_has_numberofrows(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& numberofcolumns(const TLayoutGrid* msg);
  static void set_has_numberofcolumns(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::HmiWidget::TLayoutGridBase&
TLayoutGrid::_Internal::base(const TLayoutGrid* msg) {
  return *msg->_impl_.base_;
}
const ::TDataBinding&
TLayoutGrid::_Internal::numberofrows(const TLayoutGrid* msg) {
  return *msg->_impl_.numberofrows_;
}
const ::TDataBinding&
TLayoutGrid::_Internal::numberofcolumns(const TLayoutGrid* msg) {
  return *msg->_impl_.numberofcolumns_;
}
void TLayoutGrid::clear_numberofrows() {
  if (_impl_.numberofrows_ != nullptr) _impl_.numberofrows_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TLayoutGrid::clear_numberofcolumns() {
  if (_impl_.numberofcolumns_ != nullptr) _impl_.numberofcolumns_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TLayoutGrid::TLayoutGrid(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutGrid)
}
TLayoutGrid::TLayoutGrid(const TLayoutGrid& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutGrid* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.numberofrows_){nullptr}
    , decltype(_impl_.numberofcolumns_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutGridBase(*from._impl_.base_);
  }
  if (from._internal_has_numberofrows()) {
    _this->_impl_.numberofrows_ = new ::TDataBinding(*from._impl_.numberofrows_);
  }
  if (from._internal_has_numberofcolumns()) {
    _this->_impl_.numberofcolumns_ = new ::TDataBinding(*from._impl_.numberofcolumns_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutGrid)
}

inline void TLayoutGrid::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.numberofrows_){nullptr}
    , decltype(_impl_.numberofcolumns_){nullptr}
  };
}

TLayoutGrid::~TLayoutGrid() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutGrid)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutGrid::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.numberofrows_;
  if (this != internal_default_instance()) delete _impl_.numberofcolumns_;
}

void TLayoutGrid::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutGrid::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutGrid)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.base_ != nullptr);
      _impl_.base_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.numberofrows_ != nullptr);
      _impl_.numberofrows_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.numberofcolumns_ != nullptr);
      _impl_.numberofcolumns_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutGrid::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .HmiWidget.TLayoutGridBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding numberOfRows = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_numberofrows(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding numberOfColumns = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_numberofcolumns(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutGridElement element = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutGrid.TTemplate elementTemplate = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutGrid::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutGrid)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HmiWidget.TLayoutGridBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding numberOfRows = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::numberofrows(this),
        _Internal::numberofrows(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding numberOfColumns = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::numberofcolumns(this),
        _Internal::numberofcolumns(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutGridElement element = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutGrid.TTemplate elementTemplate = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutGrid)
  return target;
}

size_t TLayoutGrid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutGrid)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutGridElement element = 4;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutGrid.TTemplate elementTemplate = 5;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .HmiWidget.TLayoutGridBase base = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.base_);
    }

    // optional .TDataBinding numberOfRows = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.numberofrows_);
    }

    // optional .TDataBinding numberOfColumns = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.numberofcolumns_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutGrid::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutGrid::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutGrid::GetClassData() const { return &_class_data_; }


void TLayoutGrid::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutGrid*>(&to_msg);
  auto& from = static_cast<const TLayoutGrid&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutGrid)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_base()->::HmiWidget::TLayoutGridBase::MergeFrom(
          from._internal_base());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_numberofrows()->::TDataBinding::MergeFrom(
          from._internal_numberofrows());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_numberofcolumns()->::TDataBinding::MergeFrom(
          from._internal_numberofcolumns());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutGrid::CopyFrom(const TLayoutGrid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutGrid::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  if (_internal_has_numberofrows()) {
    if (!_impl_.numberofrows_->IsInitialized()) return false;
  }
  if (_internal_has_numberofcolumns()) {
    if (!_impl_.numberofcolumns_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutGrid::InternalSwap(TLayoutGrid* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutGrid, _impl_.numberofcolumns_)
      + sizeof(TLayoutGrid::_impl_.numberofcolumns_)
      - PROTOBUF_FIELD_OFFSET(TLayoutGrid, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutGrid::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[104]);
}

// ===================================================================

class TLayoutGridBase::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutGridBase>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutGridBase, _impl_._has_bits_);
  static const ::TDataBinding& leftmargin(const TLayoutGridBase* msg);
  static void set_has_leftmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& rightmargin(const TLayoutGridBase* msg);
  static void set_has_rightmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& topmargin(const TLayoutGridBase* msg);
  static void set_has_topmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& bottommargin(const TLayoutGridBase* msg);
  static void set_has_bottommargin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::TDataBinding&
TLayoutGridBase::_Internal::leftmargin(const TLayoutGridBase* msg) {
  return *msg->_impl_.leftmargin_;
}
const ::TDataBinding&
TLayoutGridBase::_Internal::rightmargin(const TLayoutGridBase* msg) {
  return *msg->_impl_.rightmargin_;
}
const ::TDataBinding&
TLayoutGridBase::_Internal::topmargin(const TLayoutGridBase* msg) {
  return *msg->_impl_.topmargin_;
}
const ::TDataBinding&
TLayoutGridBase::_Internal::bottommargin(const TLayoutGridBase* msg) {
  return *msg->_impl_.bottommargin_;
}
void TLayoutGridBase::clear_leftmargin() {
  if (_impl_.leftmargin_ != nullptr) _impl_.leftmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutGridBase::clear_rightmargin() {
  if (_impl_.rightmargin_ != nullptr) _impl_.rightmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TLayoutGridBase::clear_topmargin() {
  if (_impl_.topmargin_ != nullptr) _impl_.topmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutGridBase::clear_bottommargin() {
  if (_impl_.bottommargin_ != nullptr) _impl_.bottommargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
TLayoutGridBase::TLayoutGridBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutGridBase)
}
TLayoutGridBase::TLayoutGridBase(const TLayoutGridBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutGridBase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_leftmargin()) {
    _this->_impl_.leftmargin_ = new ::TDataBinding(*from._impl_.leftmargin_);
  }
  if (from._internal_has_rightmargin()) {
    _this->_impl_.rightmargin_ = new ::TDataBinding(*from._impl_.rightmargin_);
  }
  if (from._internal_has_topmargin()) {
    _this->_impl_.topmargin_ = new ::TDataBinding(*from._impl_.topmargin_);
  }
  if (from._internal_has_bottommargin()) {
    _this->_impl_.bottommargin_ = new ::TDataBinding(*from._impl_.bottommargin_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutGridBase)
}

inline void TLayoutGridBase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
  };
}

TLayoutGridBase::~TLayoutGridBase() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutGridBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutGridBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.leftmargin_;
  if (this != internal_default_instance()) delete _impl_.rightmargin_;
  if (this != internal_default_instance()) delete _impl_.topmargin_;
  if (this != internal_default_instance()) delete _impl_.bottommargin_;
}

void TLayoutGridBase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutGridBase::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutGridBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.leftmargin_ != nullptr);
      _impl_.leftmargin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.rightmargin_ != nullptr);
      _impl_.rightmargin_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.topmargin_ != nullptr);
      _impl_.topmargin_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.bottommargin_ != nullptr);
      _impl_.bottommargin_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutGridBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding leftMargin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_leftmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rightMargin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rightmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding topMargin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_topmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding bottomMargin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_bottommargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutGridBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutGridBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding leftMargin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::leftmargin(this),
        _Internal::leftmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rightMargin = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rightmargin(this),
        _Internal::rightmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding topMargin = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::topmargin(this),
        _Internal::topmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding bottomMargin = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::bottommargin(this),
        _Internal::bottommargin(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutGridBase)
  return target;
}

size_t TLayoutGridBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutGridBase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .TDataBinding leftMargin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.leftmargin_);
    }

    // optional .TDataBinding rightMargin = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rightmargin_);
    }

    // optional .TDataBinding topMargin = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.topmargin_);
    }

    // optional .TDataBinding bottomMargin = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bottommargin_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutGridBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutGridBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutGridBase::GetClassData() const { return &_class_data_; }


void TLayoutGridBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutGridBase*>(&to_msg);
  auto& from = static_cast<const TLayoutGridBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutGridBase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_leftmargin()->::TDataBinding::MergeFrom(
          from._internal_leftmargin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_rightmargin()->::TDataBinding::MergeFrom(
          from._internal_rightmargin());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_topmargin()->::TDataBinding::MergeFrom(
          from._internal_topmargin());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_bottommargin()->::TDataBinding::MergeFrom(
          from._internal_bottommargin());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutGridBase::CopyFrom(const TLayoutGridBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutGridBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutGridBase::IsInitialized() const {
  if (_internal_has_leftmargin()) {
    if (!_impl_.leftmargin_->IsInitialized()) return false;
  }
  if (_internal_has_rightmargin()) {
    if (!_impl_.rightmargin_->IsInitialized()) return false;
  }
  if (_internal_has_topmargin()) {
    if (!_impl_.topmargin_->IsInitialized()) return false;
  }
  if (_internal_has_bottommargin()) {
    if (!_impl_.bottommargin_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutGridBase::InternalSwap(TLayoutGridBase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutGridBase, _impl_.bottommargin_)
      + sizeof(TLayoutGridBase::_impl_.bottommargin_)
      - PROTOBUF_FIELD_OFFSET(TLayoutGridBase, _impl_.leftmargin_)>(
          reinterpret_cast<char*>(&_impl_.leftmargin_),
          reinterpret_cast<char*>(&other->_impl_.leftmargin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutGridBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[105]);
}

// ===================================================================

class TLayoutGridElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutGridElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutGridElement, _impl_._has_bits_);
  static const ::TIdentifier& childidentifier(const TLayoutGridElement* msg);
  static void set_has_childidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayout& nestedlayout(const TLayoutGridElement* msg);
  static void set_has_nestedlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& row(const TLayoutGridElement* msg);
  static void set_has_row(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& column(const TLayoutGridElement* msg);
  static void set_has_column(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& rowspan(const TLayoutGridElement* msg);
  static void set_has_rowspan(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& columnspan(const TLayoutGridElement* msg);
  static void set_has_columnspan(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::TIdentifier&
TLayoutGridElement::_Internal::childidentifier(const TLayoutGridElement* msg) {
  return *msg->_impl_.childidentifier_;
}
const ::HmiWidget::TLayout&
TLayoutGridElement::_Internal::nestedlayout(const TLayoutGridElement* msg) {
  return *msg->_impl_.nestedlayout_;
}
const ::TDataBinding&
TLayoutGridElement::_Internal::row(const TLayoutGridElement* msg) {
  return *msg->_impl_.row_;
}
const ::TDataBinding&
TLayoutGridElement::_Internal::column(const TLayoutGridElement* msg) {
  return *msg->_impl_.column_;
}
const ::TDataBinding&
TLayoutGridElement::_Internal::rowspan(const TLayoutGridElement* msg) {
  return *msg->_impl_.rowspan_;
}
const ::TDataBinding&
TLayoutGridElement::_Internal::columnspan(const TLayoutGridElement* msg) {
  return *msg->_impl_.columnspan_;
}
void TLayoutGridElement::clear_childidentifier() {
  if (_impl_.childidentifier_ != nullptr) _impl_.childidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutGridElement::clear_row() {
  if (_impl_.row_ != nullptr) _impl_.row_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutGridElement::clear_column() {
  if (_impl_.column_ != nullptr) _impl_.column_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutGridElement::clear_rowspan() {
  if (_impl_.rowspan_ != nullptr) _impl_.rowspan_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutGridElement::clear_columnspan() {
  if (_impl_.columnspan_ != nullptr) _impl_.columnspan_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
TLayoutGridElement::TLayoutGridElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutGridElement)
}
TLayoutGridElement::TLayoutGridElement(const TLayoutGridElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutGridElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.row_){nullptr}
    , decltype(_impl_.column_){nullptr}
    , decltype(_impl_.rowspan_){nullptr}
    , decltype(_impl_.columnspan_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_childidentifier()) {
    _this->_impl_.childidentifier_ = new ::TIdentifier(*from._impl_.childidentifier_);
  }
  if (from._internal_has_nestedlayout()) {
    _this->_impl_.nestedlayout_ = new ::HmiWidget::TLayout(*from._impl_.nestedlayout_);
  }
  if (from._internal_has_row()) {
    _this->_impl_.row_ = new ::TDataBinding(*from._impl_.row_);
  }
  if (from._internal_has_column()) {
    _this->_impl_.column_ = new ::TDataBinding(*from._impl_.column_);
  }
  if (from._internal_has_rowspan()) {
    _this->_impl_.rowspan_ = new ::TDataBinding(*from._impl_.rowspan_);
  }
  if (from._internal_has_columnspan()) {
    _this->_impl_.columnspan_ = new ::TDataBinding(*from._impl_.columnspan_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutGridElement)
}

inline void TLayoutGridElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.row_){nullptr}
    , decltype(_impl_.column_){nullptr}
    , decltype(_impl_.rowspan_){nullptr}
    , decltype(_impl_.columnspan_){nullptr}
  };
}

TLayoutGridElement::~TLayoutGridElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutGridElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutGridElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.childidentifier_;
  if (this != internal_default_instance()) delete _impl_.nestedlayout_;
  if (this != internal_default_instance()) delete _impl_.row_;
  if (this != internal_default_instance()) delete _impl_.column_;
  if (this != internal_default_instance()) delete _impl_.rowspan_;
  if (this != internal_default_instance()) delete _impl_.columnspan_;
}

void TLayoutGridElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutGridElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutGridElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.childidentifier_ != nullptr);
      _impl_.childidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.nestedlayout_ != nullptr);
      _impl_.nestedlayout_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.row_ != nullptr);
      _impl_.row_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.column_ != nullptr);
      _impl_.column_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.rowspan_ != nullptr);
      _impl_.rowspan_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.columnspan_ != nullptr);
      _impl_.columnspan_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutGridElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier childIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_childidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayout nestedLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nestedlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding row = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_row(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding column = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_column(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rowSpan = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_rowspan(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding columnSpan = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_columnspan(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutGridElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutGridElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier childIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::childidentifier(this),
        _Internal::childidentifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayout nestedLayout = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::nestedlayout(this),
        _Internal::nestedlayout(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding row = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::row(this),
        _Internal::row(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding column = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::column(this),
        _Internal::column(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rowSpan = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::rowspan(this),
        _Internal::rowspan(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding columnSpan = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::columnspan(this),
        _Internal::columnspan(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutGridElement)
  return target;
}

size_t TLayoutGridElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutGridElement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .TIdentifier childIdentifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childidentifier_);
    }

    // optional .HmiWidget.TLayout nestedLayout = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nestedlayout_);
    }

    // optional .TDataBinding row = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.row_);
    }

    // optional .TDataBinding column = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.column_);
    }

    // optional .TDataBinding rowSpan = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rowspan_);
    }

    // optional .TDataBinding columnSpan = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.columnspan_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutGridElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutGridElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutGridElement::GetClassData() const { return &_class_data_; }


void TLayoutGridElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutGridElement*>(&to_msg);
  auto& from = static_cast<const TLayoutGridElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutGridElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_childidentifier()->::TIdentifier::MergeFrom(
          from._internal_childidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nestedlayout()->::HmiWidget::TLayout::MergeFrom(
          from._internal_nestedlayout());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_row()->::TDataBinding::MergeFrom(
          from._internal_row());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_column()->::TDataBinding::MergeFrom(
          from._internal_column());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_rowspan()->::TDataBinding::MergeFrom(
          from._internal_rowspan());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_columnspan()->::TDataBinding::MergeFrom(
          from._internal_columnspan());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutGridElement::CopyFrom(const TLayoutGridElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutGridElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutGridElement::IsInitialized() const {
  if (_internal_has_nestedlayout()) {
    if (!_impl_.nestedlayout_->IsInitialized()) return false;
  }
  if (_internal_has_row()) {
    if (!_impl_.row_->IsInitialized()) return false;
  }
  if (_internal_has_column()) {
    if (!_impl_.column_->IsInitialized()) return false;
  }
  if (_internal_has_rowspan()) {
    if (!_impl_.rowspan_->IsInitialized()) return false;
  }
  if (_internal_has_columnspan()) {
    if (!_impl_.columnspan_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutGridElement::InternalSwap(TLayoutGridElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutGridElement, _impl_.columnspan_)
      + sizeof(TLayoutGridElement::_impl_.columnspan_)
      - PROTOBUF_FIELD_OFFSET(TLayoutGridElement, _impl_.childidentifier_)>(
          reinterpret_cast<char*>(&_impl_.childidentifier_),
          reinterpret_cast<char*>(&other->_impl_.childidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutGridElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[106]);
}

// ===================================================================

class TLayoutMatrix_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutMatrix_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutMatrix_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutMatrix_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutMatrixElement& element(const TLayoutMatrix_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutMatrix_TTemplate::_Internal::identifier(const TLayoutMatrix_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutMatrixElement&
TLayoutMatrix_TTemplate::_Internal::element(const TLayoutMatrix_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutMatrix_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutMatrix_TTemplate::TLayoutMatrix_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutMatrix.TTemplate)
}
TLayoutMatrix_TTemplate::TLayoutMatrix_TTemplate(const TLayoutMatrix_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutMatrix_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutMatrixElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutMatrix.TTemplate)
}

inline void TLayoutMatrix_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutMatrix_TTemplate::~TLayoutMatrix_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutMatrix.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutMatrix_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutMatrix_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutMatrix_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutMatrix.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutMatrix_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutMatrixElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutMatrix_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutMatrix.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutMatrixElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutMatrix.TTemplate)
  return target;
}

size_t TLayoutMatrix_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutMatrix.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutMatrixElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutMatrix_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutMatrix.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutMatrixElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutMatrix_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutMatrix_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutMatrix_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutMatrix_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutMatrix_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutMatrix_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutMatrix.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutMatrixElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutMatrix_TTemplate::CopyFrom(const TLayoutMatrix_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutMatrix.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutMatrix_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutMatrix_TTemplate::InternalSwap(TLayoutMatrix_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutMatrix_TTemplate, _impl_.element_)
      + sizeof(TLayoutMatrix_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutMatrix_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutMatrix_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[107]);
}

// ===================================================================

class TLayoutMatrix::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutMatrix>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutMatrix, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutMatrixBase& base(const TLayoutMatrix* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& cellsize(const TLayoutMatrix* msg);
  static void set_has_cellsize(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000002) ^ 0x00000002) != 0;
  }
};

const ::HmiWidget::TLayoutMatrixBase&
TLayoutMatrix::_Internal::base(const TLayoutMatrix* msg) {
  return *msg->_impl_.base_;
}
const ::TDataBinding&
TLayoutMatrix::_Internal::cellsize(const TLayoutMatrix* msg) {
  return *msg->_impl_.cellsize_;
}
void TLayoutMatrix::clear_cellsize() {
  if (_impl_.cellsize_ != nullptr) _impl_.cellsize_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TLayoutMatrix::TLayoutMatrix(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutMatrix)
}
TLayoutMatrix::TLayoutMatrix(const TLayoutMatrix& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutMatrix* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.cellsize_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutMatrixBase(*from._impl_.base_);
  }
  if (from._internal_has_cellsize()) {
    _this->_impl_.cellsize_ = new ::TDataBinding(*from._impl_.cellsize_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutMatrix)
}

inline void TLayoutMatrix::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.cellsize_){nullptr}
  };
}

TLayoutMatrix::~TLayoutMatrix() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutMatrix)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutMatrix::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.cellsize_;
}

void TLayoutMatrix::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutMatrix::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutMatrix)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.base_ != nullptr);
      _impl_.base_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.cellsize_ != nullptr);
      _impl_.cellsize_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutMatrix::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .HmiWidget.TLayoutMatrixBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .TDataBinding cellSize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_cellsize(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutMatrixElement element = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutMatrix.TTemplate elementTemplate = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutMatrix::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutMatrix)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HmiWidget.TLayoutMatrixBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // required .TDataBinding cellSize = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::cellsize(this),
        _Internal::cellsize(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutMatrixElement element = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutMatrix.TTemplate elementTemplate = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutMatrix)
  return target;
}

size_t TLayoutMatrix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutMatrix)
  size_t total_size = 0;

  // required .TDataBinding cellSize = 2;
  if (_internal_has_cellsize()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.cellsize_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutMatrixElement element = 3;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutMatrix.TTemplate elementTemplate = 4;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .HmiWidget.TLayoutMatrixBase base = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutMatrix::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutMatrix::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutMatrix::GetClassData() const { return &_class_data_; }


void TLayoutMatrix::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutMatrix*>(&to_msg);
  auto& from = static_cast<const TLayoutMatrix&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutMatrix)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_base()->::HmiWidget::TLayoutMatrixBase::MergeFrom(
          from._internal_base());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_cellsize()->::TDataBinding::MergeFrom(
          from._internal_cellsize());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutMatrix::CopyFrom(const TLayoutMatrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutMatrix::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  if (_internal_has_cellsize()) {
    if (!_impl_.cellsize_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutMatrix::InternalSwap(TLayoutMatrix* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutMatrix, _impl_.cellsize_)
      + sizeof(TLayoutMatrix::_impl_.cellsize_)
      - PROTOBUF_FIELD_OFFSET(TLayoutMatrix, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutMatrix::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[108]);
}

// ===================================================================

class TLayoutMatrixBase::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutMatrixBase>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutMatrixBase, _impl_._has_bits_);
  static const ::TDataBinding& leftmargin(const TLayoutMatrixBase* msg);
  static void set_has_leftmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& rightmargin(const TLayoutMatrixBase* msg);
  static void set_has_rightmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& topmargin(const TLayoutMatrixBase* msg);
  static void set_has_topmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& bottommargin(const TLayoutMatrixBase* msg);
  static void set_has_bottommargin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& orientationx(const TLayoutMatrixBase* msg);
  static void set_has_orientationx(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& orientationy(const TLayoutMatrixBase* msg);
  static void set_has_orientationy(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& spacing(const TLayoutMatrixBase* msg);
  static void set_has_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::TDataBinding&
TLayoutMatrixBase::_Internal::leftmargin(const TLayoutMatrixBase* msg) {
  return *msg->_impl_.leftmargin_;
}
const ::TDataBinding&
TLayoutMatrixBase::_Internal::rightmargin(const TLayoutMatrixBase* msg) {
  return *msg->_impl_.rightmargin_;
}
const ::TDataBinding&
TLayoutMatrixBase::_Internal::topmargin(const TLayoutMatrixBase* msg) {
  return *msg->_impl_.topmargin_;
}
const ::TDataBinding&
TLayoutMatrixBase::_Internal::bottommargin(const TLayoutMatrixBase* msg) {
  return *msg->_impl_.bottommargin_;
}
const ::TDataBinding&
TLayoutMatrixBase::_Internal::orientationx(const TLayoutMatrixBase* msg) {
  return *msg->_impl_.orientationx_;
}
const ::TDataBinding&
TLayoutMatrixBase::_Internal::orientationy(const TLayoutMatrixBase* msg) {
  return *msg->_impl_.orientationy_;
}
const ::TDataBinding&
TLayoutMatrixBase::_Internal::spacing(const TLayoutMatrixBase* msg) {
  return *msg->_impl_.spacing_;
}
void TLayoutMatrixBase::clear_leftmargin() {
  if (_impl_.leftmargin_ != nullptr) _impl_.leftmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutMatrixBase::clear_rightmargin() {
  if (_impl_.rightmargin_ != nullptr) _impl_.rightmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TLayoutMatrixBase::clear_topmargin() {
  if (_impl_.topmargin_ != nullptr) _impl_.topmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutMatrixBase::clear_bottommargin() {
  if (_impl_.bottommargin_ != nullptr) _impl_.bottommargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutMatrixBase::clear_orientationx() {
  if (_impl_.orientationx_ != nullptr) _impl_.orientationx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutMatrixBase::clear_orientationy() {
  if (_impl_.orientationy_ != nullptr) _impl_.orientationy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TLayoutMatrixBase::clear_spacing() {
  if (_impl_.spacing_ != nullptr) _impl_.spacing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
TLayoutMatrixBase::TLayoutMatrixBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutMatrixBase)
}
TLayoutMatrixBase::TLayoutMatrixBase(const TLayoutMatrixBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutMatrixBase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.orientationx_){nullptr}
    , decltype(_impl_.orientationy_){nullptr}
    , decltype(_impl_.spacing_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_leftmargin()) {
    _this->_impl_.leftmargin_ = new ::TDataBinding(*from._impl_.leftmargin_);
  }
  if (from._internal_has_rightmargin()) {
    _this->_impl_.rightmargin_ = new ::TDataBinding(*from._impl_.rightmargin_);
  }
  if (from._internal_has_topmargin()) {
    _this->_impl_.topmargin_ = new ::TDataBinding(*from._impl_.topmargin_);
  }
  if (from._internal_has_bottommargin()) {
    _this->_impl_.bottommargin_ = new ::TDataBinding(*from._impl_.bottommargin_);
  }
  if (from._internal_has_orientationx()) {
    _this->_impl_.orientationx_ = new ::TDataBinding(*from._impl_.orientationx_);
  }
  if (from._internal_has_orientationy()) {
    _this->_impl_.orientationy_ = new ::TDataBinding(*from._impl_.orientationy_);
  }
  if (from._internal_has_spacing()) {
    _this->_impl_.spacing_ = new ::TDataBinding(*from._impl_.spacing_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutMatrixBase)
}

inline void TLayoutMatrixBase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.orientationx_){nullptr}
    , decltype(_impl_.orientationy_){nullptr}
    , decltype(_impl_.spacing_){nullptr}
  };
}

TLayoutMatrixBase::~TLayoutMatrixBase() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutMatrixBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutMatrixBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.leftmargin_;
  if (this != internal_default_instance()) delete _impl_.rightmargin_;
  if (this != internal_default_instance()) delete _impl_.topmargin_;
  if (this != internal_default_instance()) delete _impl_.bottommargin_;
  if (this != internal_default_instance()) delete _impl_.orientationx_;
  if (this != internal_default_instance()) delete _impl_.orientationy_;
  if (this != internal_default_instance()) delete _impl_.spacing_;
}

void TLayoutMatrixBase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutMatrixBase::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutMatrixBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.leftmargin_ != nullptr);
      _impl_.leftmargin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.rightmargin_ != nullptr);
      _impl_.rightmargin_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.topmargin_ != nullptr);
      _impl_.topmargin_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.bottommargin_ != nullptr);
      _impl_.bottommargin_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.orientationx_ != nullptr);
      _impl_.orientationx_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.orientationy_ != nullptr);
      _impl_.orientationy_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.spacing_ != nullptr);
      _impl_.spacing_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutMatrixBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding leftMargin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_leftmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rightMargin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rightmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding topMargin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_topmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding bottomMargin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_bottommargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding orientationX = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientationx(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding orientationY = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientationy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding spacing = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutMatrixBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutMatrixBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding leftMargin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::leftmargin(this),
        _Internal::leftmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rightMargin = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rightmargin(this),
        _Internal::rightmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding topMargin = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::topmargin(this),
        _Internal::topmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding bottomMargin = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::bottommargin(this),
        _Internal::bottommargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding orientationX = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::orientationx(this),
        _Internal::orientationx(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding orientationY = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::orientationy(this),
        _Internal::orientationy(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding spacing = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::spacing(this),
        _Internal::spacing(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutMatrixBase)
  return target;
}

size_t TLayoutMatrixBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutMatrixBase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .TDataBinding leftMargin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.leftmargin_);
    }

    // optional .TDataBinding rightMargin = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rightmargin_);
    }

    // optional .TDataBinding topMargin = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.topmargin_);
    }

    // optional .TDataBinding bottomMargin = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bottommargin_);
    }

    // optional .TDataBinding orientationX = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.orientationx_);
    }

    // optional .TDataBinding orientationY = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.orientationy_);
    }

    // optional .TDataBinding spacing = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.spacing_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutMatrixBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutMatrixBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutMatrixBase::GetClassData() const { return &_class_data_; }


void TLayoutMatrixBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutMatrixBase*>(&to_msg);
  auto& from = static_cast<const TLayoutMatrixBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutMatrixBase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_leftmargin()->::TDataBinding::MergeFrom(
          from._internal_leftmargin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_rightmargin()->::TDataBinding::MergeFrom(
          from._internal_rightmargin());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_topmargin()->::TDataBinding::MergeFrom(
          from._internal_topmargin());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_bottommargin()->::TDataBinding::MergeFrom(
          from._internal_bottommargin());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_orientationx()->::TDataBinding::MergeFrom(
          from._internal_orientationx());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_orientationy()->::TDataBinding::MergeFrom(
          from._internal_orientationy());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_spacing()->::TDataBinding::MergeFrom(
          from._internal_spacing());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutMatrixBase::CopyFrom(const TLayoutMatrixBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutMatrixBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutMatrixBase::IsInitialized() const {
  if (_internal_has_leftmargin()) {
    if (!_impl_.leftmargin_->IsInitialized()) return false;
  }
  if (_internal_has_rightmargin()) {
    if (!_impl_.rightmargin_->IsInitialized()) return false;
  }
  if (_internal_has_topmargin()) {
    if (!_impl_.topmargin_->IsInitialized()) return false;
  }
  if (_internal_has_bottommargin()) {
    if (!_impl_.bottommargin_->IsInitialized()) return false;
  }
  if (_internal_has_orientationx()) {
    if (!_impl_.orientationx_->IsInitialized()) return false;
  }
  if (_internal_has_orientationy()) {
    if (!_impl_.orientationy_->IsInitialized()) return false;
  }
  if (_internal_has_spacing()) {
    if (!_impl_.spacing_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutMatrixBase::InternalSwap(TLayoutMatrixBase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutMatrixBase, _impl_.spacing_)
      + sizeof(TLayoutMatrixBase::_impl_.spacing_)
      - PROTOBUF_FIELD_OFFSET(TLayoutMatrixBase, _impl_.leftmargin_)>(
          reinterpret_cast<char*>(&_impl_.leftmargin_),
          reinterpret_cast<char*>(&other->_impl_.leftmargin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutMatrixBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[109]);
}

// ===================================================================

class TLayoutMatrixElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutMatrixElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutMatrixElement, _impl_._has_bits_);
  static const ::TIdentifier& childidentifier(const TLayoutMatrixElement* msg);
  static void set_has_childidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayout& nestedlayout(const TLayoutMatrixElement* msg);
  static void set_has_nestedlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& alignment(const TLayoutMatrixElement* msg);
  static void set_has_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::TIdentifier&
TLayoutMatrixElement::_Internal::childidentifier(const TLayoutMatrixElement* msg) {
  return *msg->_impl_.childidentifier_;
}
const ::HmiWidget::TLayout&
TLayoutMatrixElement::_Internal::nestedlayout(const TLayoutMatrixElement* msg) {
  return *msg->_impl_.nestedlayout_;
}
const ::TDataBinding&
TLayoutMatrixElement::_Internal::alignment(const TLayoutMatrixElement* msg) {
  return *msg->_impl_.alignment_;
}
void TLayoutMatrixElement::clear_childidentifier() {
  if (_impl_.childidentifier_ != nullptr) _impl_.childidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutMatrixElement::clear_alignment() {
  if (_impl_.alignment_ != nullptr) _impl_.alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
TLayoutMatrixElement::TLayoutMatrixElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutMatrixElement)
}
TLayoutMatrixElement::TLayoutMatrixElement(const TLayoutMatrixElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutMatrixElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.alignment_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_childidentifier()) {
    _this->_impl_.childidentifier_ = new ::TIdentifier(*from._impl_.childidentifier_);
  }
  if (from._internal_has_nestedlayout()) {
    _this->_impl_.nestedlayout_ = new ::HmiWidget::TLayout(*from._impl_.nestedlayout_);
  }
  if (from._internal_has_alignment()) {
    _this->_impl_.alignment_ = new ::TDataBinding(*from._impl_.alignment_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutMatrixElement)
}

inline void TLayoutMatrixElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
  };
}

TLayoutMatrixElement::~TLayoutMatrixElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutMatrixElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutMatrixElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.childidentifier_;
  if (this != internal_default_instance()) delete _impl_.nestedlayout_;
  if (this != internal_default_instance()) delete _impl_.alignment_;
}

void TLayoutMatrixElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutMatrixElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutMatrixElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.childidentifier_ != nullptr);
      _impl_.childidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.nestedlayout_ != nullptr);
      _impl_.nestedlayout_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.alignment_ != nullptr);
      _impl_.alignment_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutMatrixElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier childIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_childidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayout nestedLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nestedlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding alignment = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutMatrixElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutMatrixElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier childIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::childidentifier(this),
        _Internal::childidentifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayout nestedLayout = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::nestedlayout(this),
        _Internal::nestedlayout(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding alignment = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::alignment(this),
        _Internal::alignment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutMatrixElement)
  return target;
}

size_t TLayoutMatrixElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutMatrixElement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .TIdentifier childIdentifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childidentifier_);
    }

    // optional .HmiWidget.TLayout nestedLayout = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nestedlayout_);
    }

    // optional .TDataBinding alignment = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.alignment_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutMatrixElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutMatrixElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutMatrixElement::GetClassData() const { return &_class_data_; }


void TLayoutMatrixElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutMatrixElement*>(&to_msg);
  auto& from = static_cast<const TLayoutMatrixElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutMatrixElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_childidentifier()->::TIdentifier::MergeFrom(
          from._internal_childidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nestedlayout()->::HmiWidget::TLayout::MergeFrom(
          from._internal_nestedlayout());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_alignment()->::TDataBinding::MergeFrom(
          from._internal_alignment());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutMatrixElement::CopyFrom(const TLayoutMatrixElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutMatrixElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutMatrixElement::IsInitialized() const {
  if (_internal_has_nestedlayout()) {
    if (!_impl_.nestedlayout_->IsInitialized()) return false;
  }
  if (_internal_has_alignment()) {
    if (!_impl_.alignment_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutMatrixElement::InternalSwap(TLayoutMatrixElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutMatrixElement, _impl_.alignment_)
      + sizeof(TLayoutMatrixElement::_impl_.alignment_)
      - PROTOBUF_FIELD_OFFSET(TLayoutMatrixElement, _impl_.childidentifier_)>(
          reinterpret_cast<char*>(&_impl_.childidentifier_),
          reinterpret_cast<char*>(&other->_impl_.childidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutMatrixElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[110]);
}

// ===================================================================

class TLayoutMatrixDynamic_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutMatrixDynamic_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutMatrixDynamic_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutMatrixDynamic_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutMatrixDynamicElement& element(const TLayoutMatrixDynamic_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutMatrixDynamic_TTemplate::_Internal::identifier(const TLayoutMatrixDynamic_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutMatrixDynamicElement&
TLayoutMatrixDynamic_TTemplate::_Internal::element(const TLayoutMatrixDynamic_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutMatrixDynamic_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutMatrixDynamic_TTemplate::TLayoutMatrixDynamic_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutMatrixDynamic.TTemplate)
}
TLayoutMatrixDynamic_TTemplate::TLayoutMatrixDynamic_TTemplate(const TLayoutMatrixDynamic_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutMatrixDynamic_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutMatrixDynamicElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutMatrixDynamic.TTemplate)
}

inline void TLayoutMatrixDynamic_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutMatrixDynamic_TTemplate::~TLayoutMatrixDynamic_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutMatrixDynamic.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutMatrixDynamic_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutMatrixDynamic_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutMatrixDynamic_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutMatrixDynamic.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutMatrixDynamic_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutMatrixDynamicElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutMatrixDynamic_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutMatrixDynamic.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutMatrixDynamicElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutMatrixDynamic.TTemplate)
  return target;
}

size_t TLayoutMatrixDynamic_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutMatrixDynamic.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutMatrixDynamicElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutMatrixDynamic_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutMatrixDynamic.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutMatrixDynamicElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutMatrixDynamic_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutMatrixDynamic_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutMatrixDynamic_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutMatrixDynamic_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutMatrixDynamic_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutMatrixDynamic_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutMatrixDynamic.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutMatrixDynamicElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutMatrixDynamic_TTemplate::CopyFrom(const TLayoutMatrixDynamic_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutMatrixDynamic.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutMatrixDynamic_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutMatrixDynamic_TTemplate::InternalSwap(TLayoutMatrixDynamic_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutMatrixDynamic_TTemplate, _impl_.element_)
      + sizeof(TLayoutMatrixDynamic_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutMatrixDynamic_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutMatrixDynamic_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[111]);
}

// ===================================================================

class TLayoutMatrixDynamic::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutMatrixDynamic>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutMatrixDynamic, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutMatrixDynamicBase& base(const TLayoutMatrixDynamic* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& defaultcellsize(const TLayoutMatrixDynamic* msg);
  static void set_has_defaultcellsize(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::HmiWidget::TLayoutMatrixDynamicBase&
TLayoutMatrixDynamic::_Internal::base(const TLayoutMatrixDynamic* msg) {
  return *msg->_impl_.base_;
}
const ::TDataBinding&
TLayoutMatrixDynamic::_Internal::defaultcellsize(const TLayoutMatrixDynamic* msg) {
  return *msg->_impl_.defaultcellsize_;
}
void TLayoutMatrixDynamic::clear_defaultcellsize() {
  if (_impl_.defaultcellsize_ != nullptr) _impl_.defaultcellsize_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TLayoutMatrixDynamic::TLayoutMatrixDynamic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutMatrixDynamic)
}
TLayoutMatrixDynamic::TLayoutMatrixDynamic(const TLayoutMatrixDynamic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutMatrixDynamic* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.defaultcellsize_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutMatrixDynamicBase(*from._impl_.base_);
  }
  if (from._internal_has_defaultcellsize()) {
    _this->_impl_.defaultcellsize_ = new ::TDataBinding(*from._impl_.defaultcellsize_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutMatrixDynamic)
}

inline void TLayoutMatrixDynamic::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.defaultcellsize_){nullptr}
  };
}

TLayoutMatrixDynamic::~TLayoutMatrixDynamic() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutMatrixDynamic)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutMatrixDynamic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.defaultcellsize_;
}

void TLayoutMatrixDynamic::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutMatrixDynamic::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutMatrixDynamic)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.base_ != nullptr);
      _impl_.base_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.defaultcellsize_ != nullptr);
      _impl_.defaultcellsize_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutMatrixDynamic::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .HmiWidget.TLayoutMatrixDynamicBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding defaultCellSize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultcellsize(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutMatrixDynamicElement element = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutMatrixDynamic.TTemplate elementTemplate = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutMatrixDynamic::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutMatrixDynamic)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HmiWidget.TLayoutMatrixDynamicBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding defaultCellSize = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::defaultcellsize(this),
        _Internal::defaultcellsize(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutMatrixDynamicElement element = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutMatrixDynamic.TTemplate elementTemplate = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutMatrixDynamic)
  return target;
}

size_t TLayoutMatrixDynamic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutMatrixDynamic)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutMatrixDynamicElement element = 3;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutMatrixDynamic.TTemplate elementTemplate = 4;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .HmiWidget.TLayoutMatrixDynamicBase base = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.base_);
    }

    // optional .TDataBinding defaultCellSize = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.defaultcellsize_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutMatrixDynamic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutMatrixDynamic::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutMatrixDynamic::GetClassData() const { return &_class_data_; }


void TLayoutMatrixDynamic::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutMatrixDynamic*>(&to_msg);
  auto& from = static_cast<const TLayoutMatrixDynamic&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutMatrixDynamic)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_base()->::HmiWidget::TLayoutMatrixDynamicBase::MergeFrom(
          from._internal_base());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_defaultcellsize()->::TDataBinding::MergeFrom(
          from._internal_defaultcellsize());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutMatrixDynamic::CopyFrom(const TLayoutMatrixDynamic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutMatrixDynamic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutMatrixDynamic::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  if (_internal_has_defaultcellsize()) {
    if (!_impl_.defaultcellsize_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutMatrixDynamic::InternalSwap(TLayoutMatrixDynamic* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutMatrixDynamic, _impl_.defaultcellsize_)
      + sizeof(TLayoutMatrixDynamic::_impl_.defaultcellsize_)
      - PROTOBUF_FIELD_OFFSET(TLayoutMatrixDynamic, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutMatrixDynamic::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[112]);
}

// ===================================================================

class TLayoutMatrixDynamicBase::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutMatrixDynamicBase>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutMatrixDynamicBase, _impl_._has_bits_);
  static const ::TDataBinding& leftmargin(const TLayoutMatrixDynamicBase* msg);
  static void set_has_leftmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& rightmargin(const TLayoutMatrixDynamicBase* msg);
  static void set_has_rightmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& topmargin(const TLayoutMatrixDynamicBase* msg);
  static void set_has_topmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& bottommargin(const TLayoutMatrixDynamicBase* msg);
  static void set_has_bottommargin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& orientationx(const TLayoutMatrixDynamicBase* msg);
  static void set_has_orientationx(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& orientationy(const TLayoutMatrixDynamicBase* msg);
  static void set_has_orientationy(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& spacing(const TLayoutMatrixDynamicBase* msg);
  static void set_has_spacing(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::TDataBinding&
TLayoutMatrixDynamicBase::_Internal::leftmargin(const TLayoutMatrixDynamicBase* msg) {
  return *msg->_impl_.leftmargin_;
}
const ::TDataBinding&
TLayoutMatrixDynamicBase::_Internal::rightmargin(const TLayoutMatrixDynamicBase* msg) {
  return *msg->_impl_.rightmargin_;
}
const ::TDataBinding&
TLayoutMatrixDynamicBase::_Internal::topmargin(const TLayoutMatrixDynamicBase* msg) {
  return *msg->_impl_.topmargin_;
}
const ::TDataBinding&
TLayoutMatrixDynamicBase::_Internal::bottommargin(const TLayoutMatrixDynamicBase* msg) {
  return *msg->_impl_.bottommargin_;
}
const ::TDataBinding&
TLayoutMatrixDynamicBase::_Internal::orientationx(const TLayoutMatrixDynamicBase* msg) {
  return *msg->_impl_.orientationx_;
}
const ::TDataBinding&
TLayoutMatrixDynamicBase::_Internal::orientationy(const TLayoutMatrixDynamicBase* msg) {
  return *msg->_impl_.orientationy_;
}
const ::TDataBinding&
TLayoutMatrixDynamicBase::_Internal::spacing(const TLayoutMatrixDynamicBase* msg) {
  return *msg->_impl_.spacing_;
}
void TLayoutMatrixDynamicBase::clear_leftmargin() {
  if (_impl_.leftmargin_ != nullptr) _impl_.leftmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutMatrixDynamicBase::clear_rightmargin() {
  if (_impl_.rightmargin_ != nullptr) _impl_.rightmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TLayoutMatrixDynamicBase::clear_topmargin() {
  if (_impl_.topmargin_ != nullptr) _impl_.topmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutMatrixDynamicBase::clear_bottommargin() {
  if (_impl_.bottommargin_ != nullptr) _impl_.bottommargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutMatrixDynamicBase::clear_orientationx() {
  if (_impl_.orientationx_ != nullptr) _impl_.orientationx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutMatrixDynamicBase::clear_orientationy() {
  if (_impl_.orientationy_ != nullptr) _impl_.orientationy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TLayoutMatrixDynamicBase::clear_spacing() {
  if (_impl_.spacing_ != nullptr) _impl_.spacing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
TLayoutMatrixDynamicBase::TLayoutMatrixDynamicBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutMatrixDynamicBase)
}
TLayoutMatrixDynamicBase::TLayoutMatrixDynamicBase(const TLayoutMatrixDynamicBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutMatrixDynamicBase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.orientationx_){nullptr}
    , decltype(_impl_.orientationy_){nullptr}
    , decltype(_impl_.spacing_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_leftmargin()) {
    _this->_impl_.leftmargin_ = new ::TDataBinding(*from._impl_.leftmargin_);
  }
  if (from._internal_has_rightmargin()) {
    _this->_impl_.rightmargin_ = new ::TDataBinding(*from._impl_.rightmargin_);
  }
  if (from._internal_has_topmargin()) {
    _this->_impl_.topmargin_ = new ::TDataBinding(*from._impl_.topmargin_);
  }
  if (from._internal_has_bottommargin()) {
    _this->_impl_.bottommargin_ = new ::TDataBinding(*from._impl_.bottommargin_);
  }
  if (from._internal_has_orientationx()) {
    _this->_impl_.orientationx_ = new ::TDataBinding(*from._impl_.orientationx_);
  }
  if (from._internal_has_orientationy()) {
    _this->_impl_.orientationy_ = new ::TDataBinding(*from._impl_.orientationy_);
  }
  if (from._internal_has_spacing()) {
    _this->_impl_.spacing_ = new ::TDataBinding(*from._impl_.spacing_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutMatrixDynamicBase)
}

inline void TLayoutMatrixDynamicBase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.orientationx_){nullptr}
    , decltype(_impl_.orientationy_){nullptr}
    , decltype(_impl_.spacing_){nullptr}
  };
}

TLayoutMatrixDynamicBase::~TLayoutMatrixDynamicBase() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutMatrixDynamicBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutMatrixDynamicBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.leftmargin_;
  if (this != internal_default_instance()) delete _impl_.rightmargin_;
  if (this != internal_default_instance()) delete _impl_.topmargin_;
  if (this != internal_default_instance()) delete _impl_.bottommargin_;
  if (this != internal_default_instance()) delete _impl_.orientationx_;
  if (this != internal_default_instance()) delete _impl_.orientationy_;
  if (this != internal_default_instance()) delete _impl_.spacing_;
}

void TLayoutMatrixDynamicBase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutMatrixDynamicBase::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutMatrixDynamicBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.leftmargin_ != nullptr);
      _impl_.leftmargin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.rightmargin_ != nullptr);
      _impl_.rightmargin_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.topmargin_ != nullptr);
      _impl_.topmargin_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.bottommargin_ != nullptr);
      _impl_.bottommargin_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.orientationx_ != nullptr);
      _impl_.orientationx_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.orientationy_ != nullptr);
      _impl_.orientationy_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.spacing_ != nullptr);
      _impl_.spacing_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutMatrixDynamicBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding leftMargin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_leftmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rightMargin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rightmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding topMargin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_topmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding bottomMargin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_bottommargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding orientationX = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientationx(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding orientationY = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientationy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding spacing = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_spacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutMatrixDynamicBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutMatrixDynamicBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding leftMargin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::leftmargin(this),
        _Internal::leftmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rightMargin = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rightmargin(this),
        _Internal::rightmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding topMargin = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::topmargin(this),
        _Internal::topmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding bottomMargin = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::bottommargin(this),
        _Internal::bottommargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding orientationX = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::orientationx(this),
        _Internal::orientationx(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding orientationY = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::orientationy(this),
        _Internal::orientationy(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding spacing = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::spacing(this),
        _Internal::spacing(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutMatrixDynamicBase)
  return target;
}

size_t TLayoutMatrixDynamicBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutMatrixDynamicBase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .TDataBinding leftMargin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.leftmargin_);
    }

    // optional .TDataBinding rightMargin = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rightmargin_);
    }

    // optional .TDataBinding topMargin = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.topmargin_);
    }

    // optional .TDataBinding bottomMargin = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bottommargin_);
    }

    // optional .TDataBinding orientationX = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.orientationx_);
    }

    // optional .TDataBinding orientationY = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.orientationy_);
    }

    // optional .TDataBinding spacing = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.spacing_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutMatrixDynamicBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutMatrixDynamicBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutMatrixDynamicBase::GetClassData() const { return &_class_data_; }


void TLayoutMatrixDynamicBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutMatrixDynamicBase*>(&to_msg);
  auto& from = static_cast<const TLayoutMatrixDynamicBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutMatrixDynamicBase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_leftmargin()->::TDataBinding::MergeFrom(
          from._internal_leftmargin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_rightmargin()->::TDataBinding::MergeFrom(
          from._internal_rightmargin());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_topmargin()->::TDataBinding::MergeFrom(
          from._internal_topmargin());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_bottommargin()->::TDataBinding::MergeFrom(
          from._internal_bottommargin());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_orientationx()->::TDataBinding::MergeFrom(
          from._internal_orientationx());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_orientationy()->::TDataBinding::MergeFrom(
          from._internal_orientationy());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_spacing()->::TDataBinding::MergeFrom(
          from._internal_spacing());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutMatrixDynamicBase::CopyFrom(const TLayoutMatrixDynamicBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutMatrixDynamicBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutMatrixDynamicBase::IsInitialized() const {
  if (_internal_has_leftmargin()) {
    if (!_impl_.leftmargin_->IsInitialized()) return false;
  }
  if (_internal_has_rightmargin()) {
    if (!_impl_.rightmargin_->IsInitialized()) return false;
  }
  if (_internal_has_topmargin()) {
    if (!_impl_.topmargin_->IsInitialized()) return false;
  }
  if (_internal_has_bottommargin()) {
    if (!_impl_.bottommargin_->IsInitialized()) return false;
  }
  if (_internal_has_orientationx()) {
    if (!_impl_.orientationx_->IsInitialized()) return false;
  }
  if (_internal_has_orientationy()) {
    if (!_impl_.orientationy_->IsInitialized()) return false;
  }
  if (_internal_has_spacing()) {
    if (!_impl_.spacing_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutMatrixDynamicBase::InternalSwap(TLayoutMatrixDynamicBase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutMatrixDynamicBase, _impl_.spacing_)
      + sizeof(TLayoutMatrixDynamicBase::_impl_.spacing_)
      - PROTOBUF_FIELD_OFFSET(TLayoutMatrixDynamicBase, _impl_.leftmargin_)>(
          reinterpret_cast<char*>(&_impl_.leftmargin_),
          reinterpret_cast<char*>(&other->_impl_.leftmargin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutMatrixDynamicBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[113]);
}

// ===================================================================

class TLayoutMatrixDynamicElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutMatrixDynamicElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutMatrixDynamicElement, _impl_._has_bits_);
  static const ::TIdentifier& childidentifier(const TLayoutMatrixDynamicElement* msg);
  static void set_has_childidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayout& nestedlayout(const TLayoutMatrixDynamicElement* msg);
  static void set_has_nestedlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& alignment(const TLayoutMatrixDynamicElement* msg);
  static void set_has_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& sizepolicy(const TLayoutMatrixDynamicElement* msg);
  static void set_has_sizepolicy(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& size(const TLayoutMatrixDynamicElement* msg);
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& stretchfactor(const TLayoutMatrixDynamicElement* msg);
  static void set_has_stretchfactor(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

const ::TIdentifier&
TLayoutMatrixDynamicElement::_Internal::childidentifier(const TLayoutMatrixDynamicElement* msg) {
  return *msg->_impl_.childidentifier_;
}
const ::HmiWidget::TLayout&
TLayoutMatrixDynamicElement::_Internal::nestedlayout(const TLayoutMatrixDynamicElement* msg) {
  return *msg->_impl_.nestedlayout_;
}
const ::TDataBinding&
TLayoutMatrixDynamicElement::_Internal::alignment(const TLayoutMatrixDynamicElement* msg) {
  return *msg->_impl_.alignment_;
}
const ::TDataBinding&
TLayoutMatrixDynamicElement::_Internal::sizepolicy(const TLayoutMatrixDynamicElement* msg) {
  return *msg->_impl_.sizepolicy_;
}
const ::TDataBinding&
TLayoutMatrixDynamicElement::_Internal::size(const TLayoutMatrixDynamicElement* msg) {
  return *msg->_impl_.size_;
}
const ::TDataBinding&
TLayoutMatrixDynamicElement::_Internal::stretchfactor(const TLayoutMatrixDynamicElement* msg) {
  return *msg->_impl_.stretchfactor_;
}
void TLayoutMatrixDynamicElement::clear_childidentifier() {
  if (_impl_.childidentifier_ != nullptr) _impl_.childidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutMatrixDynamicElement::clear_alignment() {
  if (_impl_.alignment_ != nullptr) _impl_.alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutMatrixDynamicElement::clear_sizepolicy() {
  if (_impl_.sizepolicy_ != nullptr) _impl_.sizepolicy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutMatrixDynamicElement::clear_size() {
  if (_impl_.size_ != nullptr) _impl_.size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutMatrixDynamicElement::clear_stretchfactor() {
  if (_impl_.stretchfactor_ != nullptr) _impl_.stretchfactor_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
TLayoutMatrixDynamicElement::TLayoutMatrixDynamicElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutMatrixDynamicElement)
}
TLayoutMatrixDynamicElement::TLayoutMatrixDynamicElement(const TLayoutMatrixDynamicElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutMatrixDynamicElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.stretchfactor_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_childidentifier()) {
    _this->_impl_.childidentifier_ = new ::TIdentifier(*from._impl_.childidentifier_);
  }
  if (from._internal_has_nestedlayout()) {
    _this->_impl_.nestedlayout_ = new ::HmiWidget::TLayout(*from._impl_.nestedlayout_);
  }
  if (from._internal_has_alignment()) {
    _this->_impl_.alignment_ = new ::TDataBinding(*from._impl_.alignment_);
  }
  if (from._internal_has_sizepolicy()) {
    _this->_impl_.sizepolicy_ = new ::TDataBinding(*from._impl_.sizepolicy_);
  }
  if (from._internal_has_size()) {
    _this->_impl_.size_ = new ::TDataBinding(*from._impl_.size_);
  }
  if (from._internal_has_stretchfactor()) {
    _this->_impl_.stretchfactor_ = new ::TDataBinding(*from._impl_.stretchfactor_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutMatrixDynamicElement)
}

inline void TLayoutMatrixDynamicElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.stretchfactor_){nullptr}
  };
}

TLayoutMatrixDynamicElement::~TLayoutMatrixDynamicElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutMatrixDynamicElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutMatrixDynamicElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.childidentifier_;
  if (this != internal_default_instance()) delete _impl_.nestedlayout_;
  if (this != internal_default_instance()) delete _impl_.alignment_;
  if (this != internal_default_instance()) delete _impl_.sizepolicy_;
  if (this != internal_default_instance()) delete _impl_.size_;
  if (this != internal_default_instance()) delete _impl_.stretchfactor_;
}

void TLayoutMatrixDynamicElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutMatrixDynamicElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutMatrixDynamicElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.childidentifier_ != nullptr);
      _impl_.childidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.nestedlayout_ != nullptr);
      _impl_.nestedlayout_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.alignment_ != nullptr);
      _impl_.alignment_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.sizepolicy_ != nullptr);
      _impl_.sizepolicy_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.size_ != nullptr);
      _impl_.size_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.stretchfactor_ != nullptr);
      _impl_.stretchfactor_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutMatrixDynamicElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier childIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_childidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayout nestedLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nestedlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding alignment = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding sizePolicy = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_sizepolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding size = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding stretchFactor = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_stretchfactor(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutMatrixDynamicElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutMatrixDynamicElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier childIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::childidentifier(this),
        _Internal::childidentifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayout nestedLayout = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::nestedlayout(this),
        _Internal::nestedlayout(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding alignment = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::alignment(this),
        _Internal::alignment(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding sizePolicy = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::sizepolicy(this),
        _Internal::sizepolicy(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::size(this),
        _Internal::size(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding stretchFactor = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::stretchfactor(this),
        _Internal::stretchfactor(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutMatrixDynamicElement)
  return target;
}

size_t TLayoutMatrixDynamicElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutMatrixDynamicElement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .TIdentifier childIdentifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childidentifier_);
    }

    // optional .HmiWidget.TLayout nestedLayout = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nestedlayout_);
    }

    // optional .TDataBinding alignment = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.alignment_);
    }

    // optional .TDataBinding sizePolicy = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sizepolicy_);
    }

    // optional .TDataBinding size = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.size_);
    }

    // optional .TDataBinding stretchFactor = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.stretchfactor_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutMatrixDynamicElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutMatrixDynamicElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutMatrixDynamicElement::GetClassData() const { return &_class_data_; }


void TLayoutMatrixDynamicElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutMatrixDynamicElement*>(&to_msg);
  auto& from = static_cast<const TLayoutMatrixDynamicElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutMatrixDynamicElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_childidentifier()->::TIdentifier::MergeFrom(
          from._internal_childidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nestedlayout()->::HmiWidget::TLayout::MergeFrom(
          from._internal_nestedlayout());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_alignment()->::TDataBinding::MergeFrom(
          from._internal_alignment());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_sizepolicy()->::TDataBinding::MergeFrom(
          from._internal_sizepolicy());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_size()->::TDataBinding::MergeFrom(
          from._internal_size());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_stretchfactor()->::TDataBinding::MergeFrom(
          from._internal_stretchfactor());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutMatrixDynamicElement::CopyFrom(const TLayoutMatrixDynamicElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutMatrixDynamicElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutMatrixDynamicElement::IsInitialized() const {
  if (_internal_has_nestedlayout()) {
    if (!_impl_.nestedlayout_->IsInitialized()) return false;
  }
  if (_internal_has_alignment()) {
    if (!_impl_.alignment_->IsInitialized()) return false;
  }
  if (_internal_has_sizepolicy()) {
    if (!_impl_.sizepolicy_->IsInitialized()) return false;
  }
  if (_internal_has_size()) {
    if (!_impl_.size_->IsInitialized()) return false;
  }
  if (_internal_has_stretchfactor()) {
    if (!_impl_.stretchfactor_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutMatrixDynamicElement::InternalSwap(TLayoutMatrixDynamicElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutMatrixDynamicElement, _impl_.stretchfactor_)
      + sizeof(TLayoutMatrixDynamicElement::_impl_.stretchfactor_)
      - PROTOBUF_FIELD_OFFSET(TLayoutMatrixDynamicElement, _impl_.childidentifier_)>(
          reinterpret_cast<char*>(&_impl_.childidentifier_),
          reinterpret_cast<char*>(&other->_impl_.childidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutMatrixDynamicElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[114]);
}

// ===================================================================

class TLayoutMenuBelt_TTemplate::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutMenuBelt_TTemplate>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutMenuBelt_TTemplate, _impl_._has_bits_);
  static const ::TIdentifier& identifier(const TLayoutMenuBelt_TTemplate* msg);
  static void set_has_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayoutMenuBeltElement& element(const TLayoutMenuBelt_TTemplate* msg);
  static void set_has_element(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::TIdentifier&
TLayoutMenuBelt_TTemplate::_Internal::identifier(const TLayoutMenuBelt_TTemplate* msg) {
  return *msg->_impl_.identifier_;
}
const ::HmiWidget::TLayoutMenuBeltElement&
TLayoutMenuBelt_TTemplate::_Internal::element(const TLayoutMenuBelt_TTemplate* msg) {
  return *msg->_impl_.element_;
}
void TLayoutMenuBelt_TTemplate::clear_identifier() {
  if (_impl_.identifier_ != nullptr) _impl_.identifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TLayoutMenuBelt_TTemplate::TLayoutMenuBelt_TTemplate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutMenuBelt.TTemplate)
}
TLayoutMenuBelt_TTemplate::TLayoutMenuBelt_TTemplate(const TLayoutMenuBelt_TTemplate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutMenuBelt_TTemplate* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_identifier()) {
    _this->_impl_.identifier_ = new ::TIdentifier(*from._impl_.identifier_);
  }
  if (from._internal_has_element()) {
    _this->_impl_.element_ = new ::HmiWidget::TLayoutMenuBeltElement(*from._impl_.element_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutMenuBelt.TTemplate)
}

inline void TLayoutMenuBelt_TTemplate::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.identifier_){nullptr}
    , decltype(_impl_.element_){nullptr}
  };
}

TLayoutMenuBelt_TTemplate::~TLayoutMenuBelt_TTemplate() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutMenuBelt.TTemplate)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutMenuBelt_TTemplate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.identifier_;
  if (this != internal_default_instance()) delete _impl_.element_;
}

void TLayoutMenuBelt_TTemplate::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutMenuBelt_TTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutMenuBelt.TTemplate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.identifier_ != nullptr);
      _impl_.identifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.element_ != nullptr);
      _impl_.element_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutMenuBelt_TTemplate::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .TIdentifier identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_identifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .HmiWidget.TLayoutMenuBeltElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_element(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutMenuBelt_TTemplate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutMenuBelt.TTemplate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .TIdentifier identifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::identifier(this),
        _Internal::identifier(this).GetCachedSize(), target, stream);
  }

  // required .HmiWidget.TLayoutMenuBeltElement element = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::element(this),
        _Internal::element(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutMenuBelt.TTemplate)
  return target;
}

size_t TLayoutMenuBelt_TTemplate::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:HmiWidget.TLayoutMenuBelt.TTemplate)
  size_t total_size = 0;

  if (_internal_has_identifier()) {
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);
  }

  if (_internal_has_element()) {
    // required .HmiWidget.TLayoutMenuBeltElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);
  }

  return total_size;
}
size_t TLayoutMenuBelt_TTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutMenuBelt.TTemplate)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .TIdentifier identifier = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.identifier_);

    // required .HmiWidget.TLayoutMenuBeltElement element = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.element_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutMenuBelt_TTemplate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutMenuBelt_TTemplate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutMenuBelt_TTemplate::GetClassData() const { return &_class_data_; }


void TLayoutMenuBelt_TTemplate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutMenuBelt_TTemplate*>(&to_msg);
  auto& from = static_cast<const TLayoutMenuBelt_TTemplate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutMenuBelt.TTemplate)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_identifier()->::TIdentifier::MergeFrom(
          from._internal_identifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_element()->::HmiWidget::TLayoutMenuBeltElement::MergeFrom(
          from._internal_element());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutMenuBelt_TTemplate::CopyFrom(const TLayoutMenuBelt_TTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutMenuBelt.TTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutMenuBelt_TTemplate::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_element()) {
    if (!_impl_.element_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutMenuBelt_TTemplate::InternalSwap(TLayoutMenuBelt_TTemplate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutMenuBelt_TTemplate, _impl_.element_)
      + sizeof(TLayoutMenuBelt_TTemplate::_impl_.element_)
      - PROTOBUF_FIELD_OFFSET(TLayoutMenuBelt_TTemplate, _impl_.identifier_)>(
          reinterpret_cast<char*>(&_impl_.identifier_),
          reinterpret_cast<char*>(&other->_impl_.identifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutMenuBelt_TTemplate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[115]);
}

// ===================================================================

class TLayoutMenuBelt::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutMenuBelt>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutMenuBelt, _impl_._has_bits_);
  static const ::HmiWidget::TLayoutMenuBeltBase& base(const TLayoutMenuBelt* msg);
  static void set_has_base(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::HmiWidget::TLayoutMenuBeltBase&
TLayoutMenuBelt::_Internal::base(const TLayoutMenuBelt* msg) {
  return *msg->_impl_.base_;
}
TLayoutMenuBelt::TLayoutMenuBelt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutMenuBelt)
}
TLayoutMenuBelt::TLayoutMenuBelt(const TLayoutMenuBelt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutMenuBelt* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){from._impl_.element_}
    , decltype(_impl_.elementtemplate_){from._impl_.elementtemplate_}
    , decltype(_impl_.base_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::HmiWidget::TLayoutMenuBeltBase(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutMenuBelt)
}

inline void TLayoutMenuBelt::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.element_){arena}
    , decltype(_impl_.elementtemplate_){arena}
    , decltype(_impl_.base_){nullptr}
  };
}

TLayoutMenuBelt::~TLayoutMenuBelt() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutMenuBelt)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutMenuBelt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.element_.~RepeatedPtrField();
  _impl_.elementtemplate_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void TLayoutMenuBelt::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutMenuBelt::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutMenuBelt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.element_.Clear();
  _impl_.elementtemplate_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.base_ != nullptr);
    _impl_.base_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutMenuBelt::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .HmiWidget.TLayoutMenuBeltBase base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutMenuBeltElement element = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .HmiWidget.TLayoutMenuBelt.TTemplate elementTemplate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elementtemplate(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutMenuBelt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutMenuBelt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .HmiWidget.TLayoutMenuBeltBase base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutMenuBeltElement element = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_element_size()); i < n; i++) {
    const auto& repfield = this->_internal_element(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .HmiWidget.TLayoutMenuBelt.TTemplate elementTemplate = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elementtemplate_size()); i < n; i++) {
    const auto& repfield = this->_internal_elementtemplate(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutMenuBelt)
  return target;
}

size_t TLayoutMenuBelt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutMenuBelt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HmiWidget.TLayoutMenuBeltElement element = 2;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->_impl_.element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .HmiWidget.TLayoutMenuBelt.TTemplate elementTemplate = 3;
  total_size += 1UL * this->_internal_elementtemplate_size();
  for (const auto& msg : this->_impl_.elementtemplate_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .HmiWidget.TLayoutMenuBeltBase base = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutMenuBelt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutMenuBelt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutMenuBelt::GetClassData() const { return &_class_data_; }


void TLayoutMenuBelt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutMenuBelt*>(&to_msg);
  auto& from = static_cast<const TLayoutMenuBelt&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutMenuBelt)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.element_.MergeFrom(from._impl_.element_);
  _this->_impl_.elementtemplate_.MergeFrom(from._impl_.elementtemplate_);
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::HmiWidget::TLayoutMenuBeltBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutMenuBelt::CopyFrom(const TLayoutMenuBelt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutMenuBelt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutMenuBelt::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.element_))
    return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(_impl_.elementtemplate_))
    return false;
  if (_internal_has_base()) {
    if (!_impl_.base_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutMenuBelt::InternalSwap(TLayoutMenuBelt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.element_.InternalSwap(&other->_impl_.element_);
  _impl_.elementtemplate_.InternalSwap(&other->_impl_.elementtemplate_);
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutMenuBelt::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[116]);
}

// ===================================================================

class TLayoutMenuBeltBase::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutMenuBeltBase>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutMenuBeltBase, _impl_._has_bits_);
  static const ::TDataBinding& leftmargin(const TLayoutMenuBeltBase* msg);
  static void set_has_leftmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::TDataBinding& rightmargin(const TLayoutMenuBeltBase* msg);
  static void set_has_rightmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& topmargin(const TLayoutMenuBeltBase* msg);
  static void set_has_topmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& bottommargin(const TLayoutMenuBeltBase* msg);
  static void set_has_bottommargin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& pagesize(const TLayoutMenuBeltBase* msg);
  static void set_has_pagesize(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::TDataBinding& pageblocksize(const TLayoutMenuBeltBase* msg);
  static void set_has_pageblocksize(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::TDataBinding& elementshift(const TLayoutMenuBeltBase* msg);
  static void set_has_elementshift(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::TDataBinding& pagespacing(const TLayoutMenuBeltBase* msg);
  static void set_has_pagespacing(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::TDataBinding& verticalspacing(const TLayoutMenuBeltBase* msg);
  static void set_has_verticalspacing(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

const ::TDataBinding&
TLayoutMenuBeltBase::_Internal::leftmargin(const TLayoutMenuBeltBase* msg) {
  return *msg->_impl_.leftmargin_;
}
const ::TDataBinding&
TLayoutMenuBeltBase::_Internal::rightmargin(const TLayoutMenuBeltBase* msg) {
  return *msg->_impl_.rightmargin_;
}
const ::TDataBinding&
TLayoutMenuBeltBase::_Internal::topmargin(const TLayoutMenuBeltBase* msg) {
  return *msg->_impl_.topmargin_;
}
const ::TDataBinding&
TLayoutMenuBeltBase::_Internal::bottommargin(const TLayoutMenuBeltBase* msg) {
  return *msg->_impl_.bottommargin_;
}
const ::TDataBinding&
TLayoutMenuBeltBase::_Internal::pagesize(const TLayoutMenuBeltBase* msg) {
  return *msg->_impl_.pagesize_;
}
const ::TDataBinding&
TLayoutMenuBeltBase::_Internal::pageblocksize(const TLayoutMenuBeltBase* msg) {
  return *msg->_impl_.pageblocksize_;
}
const ::TDataBinding&
TLayoutMenuBeltBase::_Internal::elementshift(const TLayoutMenuBeltBase* msg) {
  return *msg->_impl_.elementshift_;
}
const ::TDataBinding&
TLayoutMenuBeltBase::_Internal::pagespacing(const TLayoutMenuBeltBase* msg) {
  return *msg->_impl_.pagespacing_;
}
const ::TDataBinding&
TLayoutMenuBeltBase::_Internal::verticalspacing(const TLayoutMenuBeltBase* msg) {
  return *msg->_impl_.verticalspacing_;
}
void TLayoutMenuBeltBase::clear_leftmargin() {
  if (_impl_.leftmargin_ != nullptr) _impl_.leftmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutMenuBeltBase::clear_rightmargin() {
  if (_impl_.rightmargin_ != nullptr) _impl_.rightmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void TLayoutMenuBeltBase::clear_topmargin() {
  if (_impl_.topmargin_ != nullptr) _impl_.topmargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutMenuBeltBase::clear_bottommargin() {
  if (_impl_.bottommargin_ != nullptr) _impl_.bottommargin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutMenuBeltBase::clear_pagesize() {
  if (_impl_.pagesize_ != nullptr) _impl_.pagesize_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void TLayoutMenuBeltBase::clear_pageblocksize() {
  if (_impl_.pageblocksize_ != nullptr) _impl_.pageblocksize_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void TLayoutMenuBeltBase::clear_elementshift() {
  if (_impl_.elementshift_ != nullptr) _impl_.elementshift_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
void TLayoutMenuBeltBase::clear_pagespacing() {
  if (_impl_.pagespacing_ != nullptr) _impl_.pagespacing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void TLayoutMenuBeltBase::clear_verticalspacing() {
  if (_impl_.verticalspacing_ != nullptr) _impl_.verticalspacing_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
TLayoutMenuBeltBase::TLayoutMenuBeltBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutMenuBeltBase)
}
TLayoutMenuBeltBase::TLayoutMenuBeltBase(const TLayoutMenuBeltBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutMenuBeltBase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.pagesize_){nullptr}
    , decltype(_impl_.pageblocksize_){nullptr}
    , decltype(_impl_.elementshift_){nullptr}
    , decltype(_impl_.pagespacing_){nullptr}
    , decltype(_impl_.verticalspacing_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_leftmargin()) {
    _this->_impl_.leftmargin_ = new ::TDataBinding(*from._impl_.leftmargin_);
  }
  if (from._internal_has_rightmargin()) {
    _this->_impl_.rightmargin_ = new ::TDataBinding(*from._impl_.rightmargin_);
  }
  if (from._internal_has_topmargin()) {
    _this->_impl_.topmargin_ = new ::TDataBinding(*from._impl_.topmargin_);
  }
  if (from._internal_has_bottommargin()) {
    _this->_impl_.bottommargin_ = new ::TDataBinding(*from._impl_.bottommargin_);
  }
  if (from._internal_has_pagesize()) {
    _this->_impl_.pagesize_ = new ::TDataBinding(*from._impl_.pagesize_);
  }
  if (from._internal_has_pageblocksize()) {
    _this->_impl_.pageblocksize_ = new ::TDataBinding(*from._impl_.pageblocksize_);
  }
  if (from._internal_has_elementshift()) {
    _this->_impl_.elementshift_ = new ::TDataBinding(*from._impl_.elementshift_);
  }
  if (from._internal_has_pagespacing()) {
    _this->_impl_.pagespacing_ = new ::TDataBinding(*from._impl_.pagespacing_);
  }
  if (from._internal_has_verticalspacing()) {
    _this->_impl_.verticalspacing_ = new ::TDataBinding(*from._impl_.verticalspacing_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutMenuBeltBase)
}

inline void TLayoutMenuBeltBase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.leftmargin_){nullptr}
    , decltype(_impl_.rightmargin_){nullptr}
    , decltype(_impl_.topmargin_){nullptr}
    , decltype(_impl_.bottommargin_){nullptr}
    , decltype(_impl_.pagesize_){nullptr}
    , decltype(_impl_.pageblocksize_){nullptr}
    , decltype(_impl_.elementshift_){nullptr}
    , decltype(_impl_.pagespacing_){nullptr}
    , decltype(_impl_.verticalspacing_){nullptr}
  };
}

TLayoutMenuBeltBase::~TLayoutMenuBeltBase() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutMenuBeltBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutMenuBeltBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.leftmargin_;
  if (this != internal_default_instance()) delete _impl_.rightmargin_;
  if (this != internal_default_instance()) delete _impl_.topmargin_;
  if (this != internal_default_instance()) delete _impl_.bottommargin_;
  if (this != internal_default_instance()) delete _impl_.pagesize_;
  if (this != internal_default_instance()) delete _impl_.pageblocksize_;
  if (this != internal_default_instance()) delete _impl_.elementshift_;
  if (this != internal_default_instance()) delete _impl_.pagespacing_;
  if (this != internal_default_instance()) delete _impl_.verticalspacing_;
}

void TLayoutMenuBeltBase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutMenuBeltBase::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutMenuBeltBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.leftmargin_ != nullptr);
      _impl_.leftmargin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.rightmargin_ != nullptr);
      _impl_.rightmargin_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.topmargin_ != nullptr);
      _impl_.topmargin_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.bottommargin_ != nullptr);
      _impl_.bottommargin_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.pagesize_ != nullptr);
      _impl_.pagesize_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(_impl_.pageblocksize_ != nullptr);
      _impl_.pageblocksize_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(_impl_.elementshift_ != nullptr);
      _impl_.elementshift_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(_impl_.pagespacing_ != nullptr);
      _impl_.pagespacing_->Clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(_impl_.verticalspacing_ != nullptr);
    _impl_.verticalspacing_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutMenuBeltBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TDataBinding leftMargin = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_leftmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding rightMargin = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rightmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding topMargin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_topmargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding bottomMargin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_bottommargin(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding pageSize = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagesize(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding pageBlockSize = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_pageblocksize(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding elementShift = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_elementshift(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding pageSpacing = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagespacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding verticalSpacing = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_verticalspacing(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutMenuBeltBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutMenuBeltBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TDataBinding leftMargin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::leftmargin(this),
        _Internal::leftmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding rightMargin = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rightmargin(this),
        _Internal::rightmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding topMargin = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::topmargin(this),
        _Internal::topmargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding bottomMargin = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::bottommargin(this),
        _Internal::bottommargin(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding pageSize = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::pagesize(this),
        _Internal::pagesize(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding pageBlockSize = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::pageblocksize(this),
        _Internal::pageblocksize(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding elementShift = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::elementshift(this),
        _Internal::elementshift(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding pageSpacing = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::pagespacing(this),
        _Internal::pagespacing(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding verticalSpacing = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::verticalspacing(this),
        _Internal::verticalspacing(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutMenuBeltBase)
  return target;
}

size_t TLayoutMenuBeltBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutMenuBeltBase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .TDataBinding leftMargin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.leftmargin_);
    }

    // optional .TDataBinding rightMargin = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.rightmargin_);
    }

    // optional .TDataBinding topMargin = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.topmargin_);
    }

    // optional .TDataBinding bottomMargin = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.bottommargin_);
    }

    // optional .TDataBinding pageSize = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pagesize_);
    }

    // optional .TDataBinding pageBlockSize = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pageblocksize_);
    }

    // optional .TDataBinding elementShift = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.elementshift_);
    }

    // optional .TDataBinding pageSpacing = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.pagespacing_);
    }

  }
  // optional .TDataBinding verticalSpacing = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.verticalspacing_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutMenuBeltBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutMenuBeltBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutMenuBeltBase::GetClassData() const { return &_class_data_; }


void TLayoutMenuBeltBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutMenuBeltBase*>(&to_msg);
  auto& from = static_cast<const TLayoutMenuBeltBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutMenuBeltBase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_leftmargin()->::TDataBinding::MergeFrom(
          from._internal_leftmargin());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_rightmargin()->::TDataBinding::MergeFrom(
          from._internal_rightmargin());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_topmargin()->::TDataBinding::MergeFrom(
          from._internal_topmargin());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_bottommargin()->::TDataBinding::MergeFrom(
          from._internal_bottommargin());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_pagesize()->::TDataBinding::MergeFrom(
          from._internal_pagesize());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_pageblocksize()->::TDataBinding::MergeFrom(
          from._internal_pageblocksize());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_elementshift()->::TDataBinding::MergeFrom(
          from._internal_elementshift());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_pagespacing()->::TDataBinding::MergeFrom(
          from._internal_pagespacing());
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_mutable_verticalspacing()->::TDataBinding::MergeFrom(
        from._internal_verticalspacing());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutMenuBeltBase::CopyFrom(const TLayoutMenuBeltBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutMenuBeltBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutMenuBeltBase::IsInitialized() const {
  if (_internal_has_leftmargin()) {
    if (!_impl_.leftmargin_->IsInitialized()) return false;
  }
  if (_internal_has_rightmargin()) {
    if (!_impl_.rightmargin_->IsInitialized()) return false;
  }
  if (_internal_has_topmargin()) {
    if (!_impl_.topmargin_->IsInitialized()) return false;
  }
  if (_internal_has_bottommargin()) {
    if (!_impl_.bottommargin_->IsInitialized()) return false;
  }
  if (_internal_has_pagesize()) {
    if (!_impl_.pagesize_->IsInitialized()) return false;
  }
  if (_internal_has_pageblocksize()) {
    if (!_impl_.pageblocksize_->IsInitialized()) return false;
  }
  if (_internal_has_elementshift()) {
    if (!_impl_.elementshift_->IsInitialized()) return false;
  }
  if (_internal_has_pagespacing()) {
    if (!_impl_.pagespacing_->IsInitialized()) return false;
  }
  if (_internal_has_verticalspacing()) {
    if (!_impl_.verticalspacing_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutMenuBeltBase::InternalSwap(TLayoutMenuBeltBase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutMenuBeltBase, _impl_.verticalspacing_)
      + sizeof(TLayoutMenuBeltBase::_impl_.verticalspacing_)
      - PROTOBUF_FIELD_OFFSET(TLayoutMenuBeltBase, _impl_.leftmargin_)>(
          reinterpret_cast<char*>(&_impl_.leftmargin_),
          reinterpret_cast<char*>(&other->_impl_.leftmargin_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutMenuBeltBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[117]);
}

// ===================================================================

class TLayoutMenuBeltElement::_Internal {
 public:
  using HasBits = decltype(std::declval<TLayoutMenuBeltElement>()._impl_._has_bits_);
  static constexpr int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TLayoutMenuBeltElement, _impl_._has_bits_);
  static const ::TIdentifier& childidentifier(const TLayoutMenuBeltElement* msg);
  static void set_has_childidentifier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::HmiWidget::TLayout& nestedlayout(const TLayoutMenuBeltElement* msg);
  static void set_has_nestedlayout(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::TDataBinding& size(const TLayoutMenuBeltElement* msg);
  static void set_has_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::TDataBinding& sizepolicy(const TLayoutMenuBeltElement* msg);
  static void set_has_sizepolicy(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::TDataBinding& alignment(const TLayoutMenuBeltElement* msg);
  static void set_has_alignment(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::TIdentifier&
TLayoutMenuBeltElement::_Internal::childidentifier(const TLayoutMenuBeltElement* msg) {
  return *msg->_impl_.childidentifier_;
}
const ::HmiWidget::TLayout&
TLayoutMenuBeltElement::_Internal::nestedlayout(const TLayoutMenuBeltElement* msg) {
  return *msg->_impl_.nestedlayout_;
}
const ::TDataBinding&
TLayoutMenuBeltElement::_Internal::size(const TLayoutMenuBeltElement* msg) {
  return *msg->_impl_.size_;
}
const ::TDataBinding&
TLayoutMenuBeltElement::_Internal::sizepolicy(const TLayoutMenuBeltElement* msg) {
  return *msg->_impl_.sizepolicy_;
}
const ::TDataBinding&
TLayoutMenuBeltElement::_Internal::alignment(const TLayoutMenuBeltElement* msg) {
  return *msg->_impl_.alignment_;
}
void TLayoutMenuBeltElement::clear_childidentifier() {
  if (_impl_.childidentifier_ != nullptr) _impl_.childidentifier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TLayoutMenuBeltElement::clear_size() {
  if (_impl_.size_ != nullptr) _impl_.size_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void TLayoutMenuBeltElement::clear_sizepolicy() {
  if (_impl_.sizepolicy_ != nullptr) _impl_.sizepolicy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void TLayoutMenuBeltElement::clear_alignment() {
  if (_impl_.alignment_ != nullptr) _impl_.alignment_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
TLayoutMenuBeltElement::TLayoutMenuBeltElement(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HmiWidget.TLayoutMenuBeltElement)
}
TLayoutMenuBeltElement::TLayoutMenuBeltElement(const TLayoutMenuBeltElement& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TLayoutMenuBeltElement* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
    , decltype(_impl_.alignment_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_childidentifier()) {
    _this->_impl_.childidentifier_ = new ::TIdentifier(*from._impl_.childidentifier_);
  }
  if (from._internal_has_nestedlayout()) {
    _this->_impl_.nestedlayout_ = new ::HmiWidget::TLayout(*from._impl_.nestedlayout_);
  }
  if (from._internal_has_size()) {
    _this->_impl_.size_ = new ::TDataBinding(*from._impl_.size_);
  }
  if (from._internal_has_sizepolicy()) {
    _this->_impl_.sizepolicy_ = new ::TDataBinding(*from._impl_.sizepolicy_);
  }
  if (from._internal_has_alignment()) {
    _this->_impl_.alignment_ = new ::TDataBinding(*from._impl_.alignment_);
  }
  // @@protoc_insertion_point(copy_constructor:HmiWidget.TLayoutMenuBeltElement)
}

inline void TLayoutMenuBeltElement::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.childidentifier_){nullptr}
    , decltype(_impl_.nestedlayout_){nullptr}
    , decltype(_impl_.size_){nullptr}
    , decltype(_impl_.sizepolicy_){nullptr}
    , decltype(_impl_.alignment_){nullptr}
  };
}

TLayoutMenuBeltElement::~TLayoutMenuBeltElement() {
  // @@protoc_insertion_point(destructor:HmiWidget.TLayoutMenuBeltElement)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TLayoutMenuBeltElement::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.childidentifier_;
  if (this != internal_default_instance()) delete _impl_.nestedlayout_;
  if (this != internal_default_instance()) delete _impl_.size_;
  if (this != internal_default_instance()) delete _impl_.sizepolicy_;
  if (this != internal_default_instance()) delete _impl_.alignment_;
}

void TLayoutMenuBeltElement::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TLayoutMenuBeltElement::Clear() {
// @@protoc_insertion_point(message_clear_start:HmiWidget.TLayoutMenuBeltElement)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.childidentifier_ != nullptr);
      _impl_.childidentifier_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.nestedlayout_ != nullptr);
      _impl_.nestedlayout_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.size_ != nullptr);
      _impl_.size_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.sizepolicy_ != nullptr);
      _impl_.sizepolicy_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.alignment_ != nullptr);
      _impl_.alignment_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TLayoutMenuBeltElement::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .TIdentifier childIdentifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_childidentifier(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .HmiWidget.TLayout nestedLayout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nestedlayout(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_size(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding sizePolicy = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_sizepolicy(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .TDataBinding alignment = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_alignment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TLayoutMenuBeltElement::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HmiWidget.TLayoutMenuBeltElement)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .TIdentifier childIdentifier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::childidentifier(this),
        _Internal::childidentifier(this).GetCachedSize(), target, stream);
  }

  // optional .HmiWidget.TLayout nestedLayout = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::nestedlayout(this),
        _Internal::nestedlayout(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding size = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::size(this),
        _Internal::size(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding sizePolicy = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::sizepolicy(this),
        _Internal::sizepolicy(this).GetCachedSize(), target, stream);
  }

  // optional .TDataBinding alignment = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::alignment(this),
        _Internal::alignment(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HmiWidget.TLayoutMenuBeltElement)
  return target;
}

size_t TLayoutMenuBeltElement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HmiWidget.TLayoutMenuBeltElement)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .TIdentifier childIdentifier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.childidentifier_);
    }

    // optional .HmiWidget.TLayout nestedLayout = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.nestedlayout_);
    }

    // optional .TDataBinding size = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.size_);
    }

    // optional .TDataBinding sizePolicy = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.sizepolicy_);
    }

    // optional .TDataBinding alignment = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.alignment_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TLayoutMenuBeltElement::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TLayoutMenuBeltElement::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TLayoutMenuBeltElement::GetClassData() const { return &_class_data_; }


void TLayoutMenuBeltElement::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TLayoutMenuBeltElement*>(&to_msg);
  auto& from = static_cast<const TLayoutMenuBeltElement&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HmiWidget.TLayoutMenuBeltElement)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_childidentifier()->::TIdentifier::MergeFrom(
          from._internal_childidentifier());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nestedlayout()->::HmiWidget::TLayout::MergeFrom(
          from._internal_nestedlayout());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_size()->::TDataBinding::MergeFrom(
          from._internal_size());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_sizepolicy()->::TDataBinding::MergeFrom(
          from._internal_sizepolicy());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_alignment()->::TDataBinding::MergeFrom(
          from._internal_alignment());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TLayoutMenuBeltElement::CopyFrom(const TLayoutMenuBeltElement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HmiWidget.TLayoutMenuBeltElement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TLayoutMenuBeltElement::IsInitialized() const {
  if (_internal_has_nestedlayout()) {
    if (!_impl_.nestedlayout_->IsInitialized()) return false;
  }
  if (_internal_has_size()) {
    if (!_impl_.size_->IsInitialized()) return false;
  }
  if (_internal_has_sizepolicy()) {
    if (!_impl_.sizepolicy_->IsInitialized()) return false;
  }
  if (_internal_has_alignment()) {
    if (!_impl_.alignment_->IsInitialized()) return false;
  }
  return true;
}

void TLayoutMenuBeltElement::InternalSwap(TLayoutMenuBeltElement* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TLayoutMenuBeltElement, _impl_.alignment_)
      + sizeof(TLayoutMenuBeltElement::_impl_.alignment_)
      - PROTOBUF_FIELD_OFFSET(TLayoutMenuBeltElement, _impl_.childidentifier_)>(
          reinterpret_cast<char*>(&_impl_.childidentifier_),
          reinterpret_cast<char*>(&other->_impl_.childidentifier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TLayoutMenuBeltElement::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_HmiWidget_2eproto_getter, &descriptor_table_HmiWidget_2eproto_once,
      file_level_metadata_HmiWidget_2eproto[118]);
}
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::TDataProvider,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::HmiWidget::TScriptReference >, 11, false>
  script(kScriptFieldNumber, ::HmiWidget::TScriptReference::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::TDataProvider,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::TIdentifier >, 11, false>
  animation(kAnimationFieldNumber, ::TIdentifier::default_instance(), nullptr);
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::TDataProvider,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::HmiWidget::TCurveReference >, 11, false>
  curve(kCurveFieldNumber, ::HmiWidget::TCurveReference::default_instance(), nullptr);

// @@protoc_insertion_point(namespace_scope)
}  // namespace HmiWidget
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::HmiWidget::TNodeParam*
Arena::CreateMaybeMessage< ::HmiWidget::TNodeParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TNodeParam >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TUniform*
Arena::CreateMaybeMessage< ::HmiWidget::TUniform >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TUniform >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TNodeTransform*
Arena::CreateMaybeMessage< ::HmiWidget::TNodeTransform >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TNodeTransform >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TRenderLayerProperties*
Arena::CreateMaybeMessage< ::HmiWidget::TRenderLayerProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TRenderLayerProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TNodeProperties_TRenderPassName*
Arena::CreateMaybeMessage< ::HmiWidget::TNodeProperties_TRenderPassName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TNodeProperties_TRenderPassName >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingBox*
Arena::CreateMaybeMessage< ::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingBox >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingBox >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingSphere*
Arena::CreateMaybeMessage< ::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingSphere >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TNodeProperties_TBoundingVolume_TBoundingSphere >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TNodeProperties_TBoundingVolume*
Arena::CreateMaybeMessage< ::HmiWidget::TNodeProperties_TBoundingVolume >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TNodeProperties_TBoundingVolume >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TNodeProperties*
Arena::CreateMaybeMessage< ::HmiWidget::TNodeProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TNodeProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TTextNodeProperties*
Arena::CreateMaybeMessage< ::HmiWidget::TTextNodeProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TTextNodeProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TCameraNodeProperties*
Arena::CreateMaybeMessage< ::HmiWidget::TCameraNodeProperties >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TCameraNodeProperties >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TResourceParam*
Arena::CreateMaybeMessage< ::HmiWidget::TResourceParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TResourceParam >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TAppearanceParam*
Arena::CreateMaybeMessage< ::HmiWidget::TAppearanceParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TAppearanceParam >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TRenderPassParam*
Arena::CreateMaybeMessage< ::HmiWidget::TRenderPassParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TRenderPassParam >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TBlitPassParam*
Arena::CreateMaybeMessage< ::HmiWidget::TBlitPassParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TBlitPassParam >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TDataChangeTrigger*
Arena::CreateMaybeMessage< ::HmiWidget::TDataChangeTrigger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TDataChangeTrigger >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TConditionalTrigger*
Arena::CreateMaybeMessage< ::HmiWidget::TConditionalTrigger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TConditionalTrigger >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TTrigger*
Arena::CreateMaybeMessage< ::HmiWidget::TTrigger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TTrigger >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TPolyLine*
Arena::CreateMaybeMessage< ::HmiWidget::TPolyLine >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TPolyLine >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TInputConfig*
Arena::CreateMaybeMessage< ::HmiWidget::TInputConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TInputConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TImportDefinition*
Arena::CreateMaybeMessage< ::HmiWidget::TImportDefinition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TImportDefinition >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TDefaultChildModelBindings*
Arena::CreateMaybeMessage< ::HmiWidget::TDefaultChildModelBindings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TDefaultChildModelBindings >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TAddModelBindingsToChild*
Arena::CreateMaybeMessage< ::HmiWidget::TAddModelBindingsToChild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TAddModelBindingsToChild >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TWidget_TPrototypeAsset*
Arena::CreateMaybeMessage< ::HmiWidget::TWidget_TPrototypeAsset >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TWidget_TPrototypeAsset >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TWidget*
Arena::CreateMaybeMessage< ::HmiWidget::TWidget >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TWidget >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TWidgetCollection*
Arena::CreateMaybeMessage< ::HmiWidget::TWidgetCollection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TWidgetCollection >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TChildWidget*
Arena::CreateMaybeMessage< ::HmiWidget::TChildWidget >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TChildWidget >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TChildModelParameter*
Arena::CreateMaybeMessage< ::HmiWidget::TChildModelParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TChildModelParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TExternalModelParameter*
Arena::CreateMaybeMessage< ::HmiWidget::TExternalModelParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TExternalModelParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TInternalModelParameter*
Arena::CreateMaybeMessage< ::HmiWidget::TInternalModelParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TInternalModelParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TSlot*
Arena::CreateMaybeMessage< ::HmiWidget::TSlot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TSlot >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TCommand*
Arena::CreateMaybeMessage< ::HmiWidget::TCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TMultiCommand*
Arena::CreateMaybeMessage< ::HmiWidget::TMultiCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TMultiCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TParameterAssignment*
Arena::CreateMaybeMessage< ::HmiWidget::TParameterAssignment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TParameterAssignment >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TParameterValueAssignment*
Arena::CreateMaybeMessage< ::HmiWidget::TParameterValueAssignment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TParameterValueAssignment >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TSignalParameterValuesExtractor_TAssignment*
Arena::CreateMaybeMessage< ::HmiWidget::TSignalParameterValuesExtractor_TAssignment >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TSignalParameterValuesExtractor_TAssignment >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TSignalParameterValuesExtractor*
Arena::CreateMaybeMessage< ::HmiWidget::TSignalParameterValuesExtractor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TSignalParameterValuesExtractor >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TSignal*
Arena::CreateMaybeMessage< ::HmiWidget::TSignal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TSignal >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TRequestLayout*
Arena::CreateMaybeMessage< ::HmiWidget::TRequestLayout >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TRequestLayout >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TDebugOutputCommand*
Arena::CreateMaybeMessage< ::HmiWidget::TDebugOutputCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TDebugOutputCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TWidgetDataObjectSetValue*
Arena::CreateMaybeMessage< ::HmiWidget::TWidgetDataObjectSetValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TWidgetDataObjectSetValue >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TWidgetDataObjectCreateProvider*
Arena::CreateMaybeMessage< ::HmiWidget::TWidgetDataObjectCreateProvider >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TWidgetDataObjectCreateProvider >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TWidgetDataObjectCreateConsumer*
Arena::CreateMaybeMessage< ::HmiWidget::TWidgetDataObjectCreateConsumer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TWidgetDataObjectCreateConsumer >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TUpdateDcsmMetadataCommand*
Arena::CreateMaybeMessage< ::HmiWidget::TUpdateDcsmMetadataCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TUpdateDcsmMetadataCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TAnimationTrigger*
Arena::CreateMaybeMessage< ::HmiWidget::TAnimationTrigger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TAnimationTrigger >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TScriptReference*
Arena::CreateMaybeMessage< ::HmiWidget::TScriptReference >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TScriptReference >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TCurveReference*
Arena::CreateMaybeMessage< ::HmiWidget::TCurveReference >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TCurveReference >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TScript*
Arena::CreateMaybeMessage< ::HmiWidget::TScript >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TScript >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TScriptReturnValue*
Arena::CreateMaybeMessage< ::HmiWidget::TScriptReturnValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TScriptReturnValue >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TTriggeredSlot*
Arena::CreateMaybeMessage< ::HmiWidget::TTriggeredSlot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TTriggeredSlot >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TForwardSignals*
Arena::CreateMaybeMessage< ::HmiWidget::TForwardSignals >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TForwardSignals >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TCurve*
Arena::CreateMaybeMessage< ::HmiWidget::TCurve >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TCurve >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TWidgetAnimation*
Arena::CreateMaybeMessage< ::HmiWidget::TWidgetAnimation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TWidgetAnimation >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TCompositeAnimationElement*
Arena::CreateMaybeMessage< ::HmiWidget::TCompositeAnimationElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TCompositeAnimationElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TCompositeAnimationTrigger*
Arena::CreateMaybeMessage< ::HmiWidget::TCompositeAnimationTrigger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TCompositeAnimationTrigger >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TCompositeAnimationSubAnimationList*
Arena::CreateMaybeMessage< ::HmiWidget::TCompositeAnimationSubAnimationList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TCompositeAnimationSubAnimationList >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TCompositeAnimationReturnValue*
Arena::CreateMaybeMessage< ::HmiWidget::TCompositeAnimationReturnValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TCompositeAnimationReturnValue >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TCompositeAnimation*
Arena::CreateMaybeMessage< ::HmiWidget::TCompositeAnimation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TCompositeAnimation >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayout*
Arena::CreateMaybeMessage< ::HmiWidget::TLayout >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayout >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutStaticBase*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutStaticBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutStaticBase >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutStatic_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutStatic_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutStatic_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutStatic*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutStatic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutStatic >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutStaticElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutStaticElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutStaticElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHorizontal_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHorizontal_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHorizontal_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHorizontal*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHorizontal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHorizontal >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVertical_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVertical_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVertical_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVertical*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVertical >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVertical >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHorizontalDynamic_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHorizontalDynamic_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHorizontalDynamic_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHorizontalDynamic*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHorizontalDynamic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHorizontalDynamic >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVerticalDynamic_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVerticalDynamic_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVerticalDynamic_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVerticalDynamic*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVerticalDynamic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVerticalDynamic >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHorizontalList_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHorizontalList_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHorizontalList_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHorizontalList*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHorizontalList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHorizontalList >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVerticalList_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVerticalList_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVerticalList_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVerticalList*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVerticalList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVerticalList >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVerticalCurvedList_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVerticalCurvedList_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVerticalCurvedList_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVerticalCurvedList*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVerticalCurvedList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVerticalCurvedList >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVerticalRoll_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVerticalRoll_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVerticalRoll_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVerticalRoll*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVerticalRoll >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVerticalRoll >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHorizontalPages_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHorizontalPages_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHorizontalPages_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHorizontalPages*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHorizontalPages >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHorizontalPages >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHVBase*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHVBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHVBase >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHVRollBase*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHVRollBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHVRollBase >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutCurvedHVBase*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutCurvedHVBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutCurvedHVBase >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHorizontalElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHorizontalElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHorizontalElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVerticalElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVerticalElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVerticalElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::THVBaseElement*
Arena::CreateMaybeMessage< ::HmiWidget::THVBaseElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::THVBaseElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHorizontalDynamicElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHorizontalDynamicElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHorizontalDynamicElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVerticalDynamicElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVerticalDynamicElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVerticalDynamicElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::THVDynamicBaseElement*
Arena::CreateMaybeMessage< ::HmiWidget::THVDynamicBaseElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::THVDynamicBaseElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutHorizontalListElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutHorizontalListElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutHorizontalListElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutVerticalListElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutVerticalListElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutVerticalListElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::THVListBaseElement*
Arena::CreateMaybeMessage< ::HmiWidget::THVListBaseElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::THVListBaseElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutSceneGraph_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutSceneGraph_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutSceneGraph_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutSceneGraph*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutSceneGraph >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutSceneGraph >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutSceneGraphElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutSceneGraphElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutSceneGraphElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutSceneGraphProject*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutSceneGraphProject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutSceneGraphProject >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutSceneGraphProjectElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutSceneGraphProjectElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutSceneGraphProjectElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutCircle_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutCircle_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutCircle_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutCircle*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutCircle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutCircle >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutCircleBase*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutCircleBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutCircleBase >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutCircleElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutCircleElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutCircleElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutCircleBaseElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutCircleBaseElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutCircleBaseElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutGrid_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutGrid_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutGrid_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutGrid*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutGrid >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutGrid >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutGridBase*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutGridBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutGridBase >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutGridElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutGridElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutGridElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutMatrix_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutMatrix_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutMatrix_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutMatrix*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutMatrix >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutMatrix >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutMatrixBase*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutMatrixBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutMatrixBase >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutMatrixElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutMatrixElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutMatrixElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutMatrixDynamic_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutMatrixDynamic_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutMatrixDynamic_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutMatrixDynamic*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutMatrixDynamic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutMatrixDynamic >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutMatrixDynamicBase*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutMatrixDynamicBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutMatrixDynamicBase >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutMatrixDynamicElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutMatrixDynamicElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutMatrixDynamicElement >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutMenuBelt_TTemplate*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutMenuBelt_TTemplate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutMenuBelt_TTemplate >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutMenuBelt*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutMenuBelt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutMenuBelt >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutMenuBeltBase*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutMenuBeltBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutMenuBeltBase >(arena);
}
template<> PROTOBUF_NOINLINE ::HmiWidget::TLayoutMenuBeltElement*
Arena::CreateMaybeMessage< ::HmiWidget::TLayoutMenuBeltElement >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HmiWidget::TLayoutMenuBeltElement >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
